CREATE PROCEDURE [dbo].[sp_finalize_portofolio_onbs_result]
AS
BEGIN
	UPDATE [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT] SET
		[(RCG) NOLOAN_AWAL] = COALESCE([CURRENT].[(RCG) NOLOAN_AWAL], [BEFORE].[(RCG) NOLOAN_AWAL])
		,[(RCG) NOLOAN_BEFORE] = COALESCE([CURRENT].[(RCG) NOLOAN_BEFORE], [BEFORE].[(RCG) NOLOAN_BEFORE])
		,[(RCG) NOLOAN_AKHIR] = COALESCE([CURRENT].[(RCG) NOLOAN_AKHIR], [BEFORE].[(RCG) NOLOAN_AKHIR])
		,[(SOURCE) RELATED_TRN] = COALESCE([CURRENT].[(SOURCE) RELATED_TRN], [BEFORE].[(SOURCE) RELATED_TRN])
		,[(SOURCE) LEGACY_ID] = COALESCE([CURRENT].[(SOURCE) LEGACY_ID], [BEFORE].[(SOURCE) LEGACY_ID])
		,[(RCG) NOMORCIF_LEGACY] = COALESCE([CURRENT].[(RCG) NOMORCIF_LEGACY], [BEFORE].[(RCG) NOMORCIF_LEGACY])
		,[(FOG) SUPERCIF] = COALESCE([CURRENT].[(FOG) SUPERCIF], [BEFORE].[(FOG) SUPERCIF])
		,[(SOURCE) KODECABANG] = COALESCE([CURRENT].[(SOURCE) KODECABANG], [BEFORE].[(SOURCE) KODECABANG])
		,[(RCG) KODECABANG_BSI] = COALESCE([CURRENT].[(RCG) KODECABANG_BSI], [BEFORE].[(RCG) KODECABANG_BSI])
		,[(RCG) NAMACABANG_BSI] = COALESCE([CURRENT].[(RCG) NAMACABANG_BSI], [BEFORE].[(RCG) NAMACABANG_BSI])
		,[(RCG) AREA_BSI] = COALESCE([CURRENT].[(RCG) AREA_BSI], [BEFORE].[(RCG) AREA_BSI])
		,[(RCG) REGION_BSI] = COALESCE([CURRENT].[(RCG) REGION_BSI], [BEFORE].[(RCG) REGION_BSI])
		,[(RCG) LEGACY] = COALESCE([CURRENT].[(RCG) LEGACY], [BEFORE].[(RCG) LEGACY])
		,[(SOURCE) DIVISI] = COALESCE([CURRENT].[(SOURCE) DIVISI], [BEFORE].[(SOURCE) DIVISI])
		,[(RCG) DIVISI_PECAH] = COALESCE([CURRENT].[(RCG) DIVISI_PECAH], [BEFORE].[(RCG) DIVISI_PECAH])
		,[(RCG) DIVISI_BSI] = COALESCE([CURRENT].[(RCG) DIVISI_BSI], [BEFORE].[(RCG) DIVISI_BSI])
		,[(EDA) PRODUK] = COALESCE([CURRENT].[(EDA) PRODUK], [BEFORE].[(EDA) PRODUK])
		,[(EDA) PRODUK_DETAIL] = COALESCE([CURRENT].[(EDA) PRODUK_DETAIL], [BEFORE].[(EDA) PRODUK_DETAIL])
		,[(RCG) LOANTYPE_AWAL] = COALESCE([CURRENT].[(RCG) LOANTYPE_AWAL], [BEFORE].[(RCG) LOANTYPE_AWAL])
		,[(SOURCE) LOANTYPE] = COALESCE([CURRENT].[(SOURCE) LOANTYPE], [BEFORE].[(SOURCE) LOANTYPE])
		,[(SOURCE) JENISPIUTANGPEMBIAYAAN] = COALESCE([CURRENT].[(SOURCE) JENISPIUTANGPEMBIAYAAN], [BEFORE].[(SOURCE) JENISPIUTANGPEMBIAYAAN])
		,[(RCG) JENISPIUTANGPEMBIAYAAN_STD] = COALESCE([CURRENT].[(RCG) JENISPIUTANGPEMBIAYAAN_STD], [BEFORE].[(RCG) JENISPIUTANGPEMBIAYAAN_STD])
		,[(SOURCE) JENISPENGGUNAANCODE] = COALESCE([CURRENT].[(SOURCE) JENISPENGGUNAANCODE], [BEFORE].[(SOURCE) JENISPENGGUNAANCODE])
		,[(SOURCE) CURRENCY] = COALESCE([CURRENT].[(SOURCE) CURRENCY], [BEFORE].[(SOURCE) CURRENCY])
		,[(SOURCE) TENOR] = COALESCE([CURRENT].[(SOURCE) TENOR], [BEFORE].[(SOURCE) TENOR])
		,[(RCG) TANGGAL_CAIR_AWAL_CIF] = COALESCE([CURRENT].[(RCG) TANGGAL_CAIR_AWAL_CIF], [BEFORE].[(RCG) TANGGAL_CAIR_AWAL_CIF])
		,[(RCG) TANGGAL_CAIR_AWAL_LOAN] = COALESCE([CURRENT].[(RCG) TANGGAL_CAIR_AWAL_LOAN], [BEFORE].[(RCG) TANGGAL_CAIR_AWAL_LOAN])
		,[(SOURCE) TANGGAL_CAIR] = COALESCE([CURRENT].[(SOURCE) TANGGAL_CAIR], [BEFORE].[(SOURCE) TANGGAL_CAIR])
		,[(SOURCE) TANGGAL_JATUH_TEMPO] = COALESCE([CURRENT].[(SOURCE) TANGGAL_JATUH_TEMPO], [BEFORE].[(SOURCE) TANGGAL_JATUH_TEMPO])
		,[(RCG) FLAG_MATURE] = COALESCE([CURRENT].[(RCG) FLAG_MATURE], [BEFORE].[(RCG) FLAG_MATURE])
		,[(SOURCE) SCHEDULE_DATE] = COALESCE([CURRENT].[(SOURCE) SCHEDULE_DATE], [BEFORE].[(SOURCE) SCHEDULE_DATE])
		,[(RCG) CYCLE_ANGSURAN] = COALESCE([CURRENT].[(RCG) CYCLE_ANGSURAN], [BEFORE].[(RCG) CYCLE_ANGSURAN])
		,[(RRG) FLAG_RESTRUKTUR_RRG_LAST_MONTH] = COALESCE([CURRENT].[(RRG) FLAG_RESTRUKTUR_RRG_LAST_MONTH], [BEFORE].[(RRG) FLAG_RESTRUKTUR_RRG_LAST_MONTH])
		,[(RCG) TGL_RESTRUKTUR_AWAL] = COALESCE([CURRENT].[(RCG) TGL_RESTRUKTUR_AWAL], [BEFORE].[(RCG) TGL_RESTRUKTUR_AWAL])
		,[(RCG) TGL_RESTRUKTUR] = COALESCE([CURRENT].[(RCG) TGL_RESTRUKTUR], [BEFORE].[(RCG) TGL_RESTRUKTUR])
		,[(RCG) FREKUENSI_RESTRUKTUR] = COALESCE([CURRENT].[(RCG) FREKUENSI_RESTRUKTUR], [BEFORE].[(RCG) FREKUENSI_RESTRUKTUR])
		,[(RCG) FLAG_RESTRUKTUR_RCG] = COALESCE([CURRENT].[(RCG) FLAG_RESTRUKTUR_RCG], [BEFORE].[(RCG) FLAG_RESTRUKTUR_RCG])
		,[(RCG) AGING_KOL_LOAN] = COALESCE([CURRENT].[(RCG) AGING_KOL_LOAN], [BEFORE].[(RCG) AGING_KOL_LOAN])
		,[(RCG) AGING_KOL_CIF] = COALESCE([CURRENT].[(RCG) AGING_KOL_CIF], [BEFORE].[(RCG) AGING_KOL_CIF])
		,[(RCG) PENCAIRAN_POKOK_AWAL] = COALESCE([CURRENT].[(RCG) PENCAIRAN_POKOK_AWAL], [BEFORE].[(RCG) PENCAIRAN_POKOK_AWAL])
		,[(RCG) PENCAIRAN_MARGIN_AWAL] = COALESCE([CURRENT].[(RCG) PENCAIRAN_MARGIN_AWAL], [BEFORE].[(RCG) PENCAIRAN_MARGIN_AWAL])
		,[(RCG) PENCAIRAN_GROSS_AWAL] = COALESCE([CURRENT].[(RCG) PENCAIRAN_GROSS_AWAL], [BEFORE].[(RCG) PENCAIRAN_GROSS_AWAL])
		,[(RCG) OS_POKOK_PSAK_LAST_MONTH] = COALESCE([CURRENT].[(RCG) OS_POKOK_PSAK_LAST_MONTH], [BEFORE].[(RCG) OS_POKOK_PSAK_LAST_MONTH])
		,[(RCG) OS_POKOK_LAST_MONTH] = COALESCE([CURRENT].[(RCG) OS_POKOK_LAST_MONTH], [BEFORE].[(RCG) OS_POKOK_LAST_MONTH])
		,[(RCG) OS_MARGIN_LAST_MONTH] = COALESCE([CURRENT].[(RCG) OS_MARGIN_LAST_MONTH], [BEFORE].[(RCG) OS_MARGIN_LAST_MONTH])
		,[(RCG) OS_GROSS_LAST_MONTH] = COALESCE([CURRENT].[(RCG) OS_GROSS_LAST_MONTH], [BEFORE].[(RCG) OS_GROSS_LAST_MONTH])
		,[(SOURCE) ANGSURAN_POKOK] = COALESCE([CURRENT].[(SOURCE) ANGSURAN_POKOK], [BEFORE].[(SOURCE) ANGSURAN_POKOK])
		,[(SOURCE) ANGSURAN_MARGIN] = COALESCE([CURRENT].[(SOURCE) ANGSURAN_MARGIN], [BEFORE].[(SOURCE) ANGSURAN_MARGIN])
		,[(RCG) ANGSURAN_GROSS] = COALESCE([CURRENT].[(RCG) ANGSURAN_GROSS], [BEFORE].[(RCG) ANGSURAN_GROSS])
		,[(RCG) REALISASI_BAGIHASIL_LAST_MONTH] = COALESCE([CURRENT].[(RCG) REALISASI_BAGIHASIL_LAST_MONTH], [BEFORE].[(RCG) REALISASI_BAGIHASIL_LAST_MONTH])
		,[(RCG) PROYEKSI_BAGIHASIL_LAST_MONTH] = COALESCE([CURRENT].[(RCG) PROYEKSI_BAGIHASIL_LAST_MONTH], [BEFORE].[(RCG) PROYEKSI_BAGIHASIL_LAST_MONTH])
		,[(RCG) RASIO_RBH_PBH_LAST_MONTH] = COALESCE([CURRENT].[(RCG) RASIO_RBH_PBH_LAST_MONTH], [BEFORE].[(RCG) RASIO_RBH_PBH_LAST_MONTH])
		,[(SOURCE) NO_AKAD] = COALESCE([CURRENT].[(SOURCE) NO_AKAD], [BEFORE].[(SOURCE) NO_AKAD])
		,[(SOURCE) REK_PEMBAYARAN] = COALESCE([CURRENT].[(SOURCE) REK_PEMBAYARAN], [BEFORE].[(SOURCE) REK_PEMBAYARAN])
		,[(SOURCE) NO_TELP_RUMAH] = COALESCE([CURRENT].[(SOURCE) NO_TELP_RUMAH], [BEFORE].[(SOURCE) NO_TELP_RUMAH])
		,[(SOURCE) NO_HP] = COALESCE([CURRENT].[(SOURCE) NO_HP], [BEFORE].[(SOURCE) NO_HP])
		,[(SOURCE) NO_TELP_KANTOR] = COALESCE([CURRENT].[(SOURCE) NO_TELP_KANTOR], [BEFORE].[(SOURCE) NO_TELP_KANTOR])
		,[(SOURCE) ALAMAT_UTAMA] = COALESCE([CURRENT].[(SOURCE) ALAMAT_UTAMA], [BEFORE].[(SOURCE) ALAMAT_UTAMA])
		,[(SOURCE) RT_RW] = COALESCE([CURRENT].[(SOURCE) RT_RW], [BEFORE].[(SOURCE) RT_RW])
		,[(SOURCE) KELURAHAN] = COALESCE([CURRENT].[(SOURCE) KELURAHAN], [BEFORE].[(SOURCE) KELURAHAN])
		,[(SOURCE) KECAMATAN] = COALESCE([CURRENT].[(SOURCE) KECAMATAN], [BEFORE].[(SOURCE) KECAMATAN])
		,[(SOURCE) KABUPATEN] = COALESCE([CURRENT].[(SOURCE) KABUPATEN], [BEFORE].[(SOURCE) KABUPATEN])
		,[(SOURCE) PROPINSI] = COALESCE([CURRENT].[(SOURCE) PROPINSI], [BEFORE].[(SOURCE) PROPINSI])
		,[(SOURCE) KODEPOS] = COALESCE([CURRENT].[(SOURCE) KODEPOS], [BEFORE].[(SOURCE) KODEPOS])
		,[(SOURCE) ALAMAT_TAMBAHAN] = COALESCE([CURRENT].[(SOURCE) ALAMAT_TAMBAHAN], [BEFORE].[(SOURCE) ALAMAT_TAMBAHAN])
		,[(SOURCE) NO_NPWP] = COALESCE([CURRENT].[(SOURCE) NO_NPWP], [BEFORE].[(SOURCE) NO_NPWP])
		,[(RCG) NO_NPWP_STD] = COALESCE([CURRENT].[(RCG) NO_NPWP_STD], [BEFORE].[(RCG) NO_NPWP_STD])
		,[(SOURCE) NO_ID] = COALESCE([CURRENT].[(SOURCE) NO_ID], [BEFORE].[(SOURCE) NO_ID])
		,[(RCG) NO_ID_STD] = COALESCE([CURRENT].[(RCG) NO_ID_STD], [BEFORE].[(RCG) NO_ID_STD])
		,[(SOURCE) PEKERJAAN] = COALESCE([CURRENT].[(SOURCE) PEKERJAAN], [BEFORE].[(SOURCE) PEKERJAAN])
		,[(SOURCE) NAMAPERUSAHAANNASABAH] = COALESCE([CURRENT].[(SOURCE) NAMAPERUSAHAANNASABAH], [BEFORE].[(SOURCE) NAMAPERUSAHAANNASABAH])
		,[(SOURCE) SEKTOREKONOMICODE] = COALESCE([CURRENT].[(SOURCE) SEKTOREKONOMICODE], [BEFORE].[(SOURCE) SEKTOREKONOMICODE])
		,[(RCG) MAPPING_SEKTOREKONOMI] = COALESCE([CURRENT].[(RCG) MAPPING_SEKTOREKONOMI], [BEFORE].[(RCG) MAPPING_SEKTOREKONOMI])
		,[(RCG) SEKTOREKONOMICODE_STD] = COALESCE([CURRENT].[(RCG) SEKTOREKONOMICODE_STD], [BEFORE].[(RCG) SEKTOREKONOMICODE_STD])
		,[(RCG) SEKTOREKONOMIDESC] = COALESCE([CURRENT].[(RCG) SEKTOREKONOMIDESC], [BEFORE].[(RCG) SEKTOREKONOMIDESC])
		,[(SOURCE) DESC_CHG] = COALESCE([CURRENT].[(SOURCE) DESC_CHG], [BEFORE].[(SOURCE) DESC_CHG])
		,[(SOURCE) DEBTOR_CONT] = COALESCE([CURRENT].[(SOURCE) DEBTOR_CONT], [BEFORE].[(SOURCE) DEBTOR_CONT])
		,[(SOURCE) DEBTOR_PROB] = COALESCE([CURRENT].[(SOURCE) DEBTOR_PROB], [BEFORE].[(SOURCE) DEBTOR_PROB])
		,[(SOURCE) PROV_METHOD] = COALESCE([CURRENT].[(SOURCE) PROV_METHOD], [BEFORE].[(SOURCE) PROV_METHOD])
		,[(SOURCE) KODE_AGENT] = COALESCE([CURRENT].[(SOURCE) KODE_AGENT], [BEFORE].[(SOURCE) KODE_AGENT])
		,[(SOURCE) KET_KODE_AGENT] = COALESCE([CURRENT].[(SOURCE) KET_KODE_AGENT], [BEFORE].[(SOURCE) KET_KODE_AGENT])
		,[(SOURCE) STATUS_PENCAIRAN] = COALESCE([CURRENT].[(SOURCE) STATUS_PENCAIRAN], [BEFORE].[(SOURCE) STATUS_PENCAIRAN])
		,[(SOURCE) ASURANSI] = COALESCE([CURRENT].[(SOURCE) ASURANSI], [BEFORE].[(SOURCE) ASURANSI])
		,[(SOURCE) NOTES] = COALESCE([CURRENT].[(SOURCE) NOTES], [BEFORE].[(SOURCE) NOTES])
		,[(SOURCE) NOTES_PARENT] = COALESCE([CURRENT].[(SOURCE) NOTES_PARENT], [BEFORE].[(SOURCE) NOTES_PARENT])
		,[(SOURCE) STATUS_PEMBIAYA] = COALESCE([CURRENT].[(SOURCE) STATUS_PEMBIAYA], [BEFORE].[(SOURCE) STATUS_PEMBIAYA])
		,[(SOURCE) CLASS_OF_CREDIT] = COALESCE([CURRENT].[(SOURCE) CLASS_OF_CREDIT], [BEFORE].[(SOURCE) CLASS_OF_CREDIT])
		,[(SOURCE) PORTFOLIO_CATEG] = COALESCE([CURRENT].[(SOURCE) PORTFOLIO_CATEG], [BEFORE].[(SOURCE) PORTFOLIO_CATEG])
		,[(SOURCE) CONDITION] = COALESCE([CURRENT].[(SOURCE) CONDITION], [BEFORE].[(SOURCE) CONDITION])
		,[(SOURCE) CONDITION_DATE] = COALESCE([CURRENT].[(SOURCE) CONDITION_DATE], [BEFORE].[(SOURCE) CONDITION_DATE])
		,[(SOURCE) PROJECT_LOCATE] = COALESCE([CURRENT].[(SOURCE) PROJECT_LOCATE], [BEFORE].[(SOURCE) PROJECT_LOCATE])
		,[(SOURCE) GAS_CUS] = COALESCE([CURRENT].[(SOURCE) GAS_CUS], [BEFORE].[(SOURCE) GAS_CUS])
		,[(SOURCE) STAGNANT_DATE] = COALESCE([CURRENT].[(SOURCE) STAGNANT_DATE], [BEFORE].[(SOURCE) STAGNANT_DATE])
		,[(SOURCE) STAGNANT_REASON] = COALESCE([CURRENT].[(SOURCE) STAGNANT_REASON], [BEFORE].[(SOURCE) STAGNANT_REASON])
		,[(SOURCE) ECONOMIC_SECTOR] = COALESCE([CURRENT].[(SOURCE) ECONOMIC_SECTOR], [BEFORE].[(SOURCE) ECONOMIC_SECTOR])
		,[(SOURCE) TYPE_OF_USE] = COALESCE([CURRENT].[(SOURCE) TYPE_OF_USE], [BEFORE].[(SOURCE) TYPE_OF_USE])
		,[(SOURCE) ORIENTATION] = COALESCE([CURRENT].[(SOURCE) ORIENTATION], [BEFORE].[(SOURCE) ORIENTATION])
		,[(SOURCE) TYPES_INTS_RATE] = COALESCE([CURRENT].[(SOURCE) TYPES_INTS_RATE], [BEFORE].[(SOURCE) TYPES_INTS_RATE])
		,[(SOURCE) GOV_PROG_LOAN] = COALESCE([CURRENT].[(SOURCE) GOV_PROG_LOAN], [BEFORE].[(SOURCE) GOV_PROG_LOAN])
		,[(SOURCE) LOANS_CHARC] = COALESCE([CURRENT].[(SOURCE) LOANS_CHARC], [BEFORE].[(SOURCE) LOANS_CHARC])
		,[(SOURCE) PLAOB_TYPE] = COALESCE([CURRENT].[(SOURCE) PLAOB_TYPE], [BEFORE].[(SOURCE) PLAOB_TYPE])
		,[(SOURCE) PK_NUMBER] = COALESCE([CURRENT].[(SOURCE) PK_NUMBER], [BEFORE].[(SOURCE) PK_NUMBER])
		,[(SOURCE) LAST_PK_NUMBER] = COALESCE([CURRENT].[(SOURCE) LAST_PK_NUMBER], [BEFORE].[(SOURCE) LAST_PK_NUMBER])
		,[(SOURCE) LAST_PK_DATE] = COALESCE([CURRENT].[(SOURCE) LAST_PK_DATE], [BEFORE].[(SOURCE) LAST_PK_DATE])
		,[(SOURCE) PROJECT_AMT] = COALESCE([CURRENT].[(SOURCE) PROJECT_AMT], [BEFORE].[(SOURCE) PROJECT_AMT])
		,[(SOURCE) PLAOB_SID_GNTR] = COALESCE([CURRENT].[(SOURCE) PLAOB_SID_GNTR], [BEFORE].[(SOURCE) PLAOB_SID_GNTR])
		,[(SOURCE) RESTRUCT_ID] = COALESCE([CURRENT].[(SOURCE) RESTRUCT_ID], [BEFORE].[(SOURCE) RESTRUCT_ID])
		,[(SOURCE) RESTRUCT_FIRST] = COALESCE([CURRENT].[(SOURCE) RESTRUCT_FIRST], [BEFORE].[(SOURCE) RESTRUCT_FIRST])
		,[(SOURCE) RESTRUCT_DATE] = COALESCE([CURRENT].[(SOURCE) RESTRUCT_DATE], [BEFORE].[(SOURCE) RESTRUCT_DATE])

	FROM [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT] [CURRENT]
	LEFT JOIN [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_BEFORE] [BEFORE]
		ON [CURRENT].[(SOURCE) NOLOAN_CURRENT] = [BEFORE].[(SOURCE) NOLOAN_CURRENT]
		AND [CURRENT].[(RCG) SOURCE_CURRENT] = [BEFORE].[(RCG) SOURCE_CURRENT]
	WHERE [BEFORE].[(SOURCE) NOLOAN_CURRENT] IS NOT NULL;

---------------------------------------UPDATE KOL BEFORE---------------------------------------

	UPDATE [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT] SET
		[(RCG) KOL_LOAN_LAST_DAY] = [BEFORE].[(RCG) KOL_LOAN_PECAH]
	FROM [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT] [CURRENT]
	LEFT JOIN
			(
				SELECT
					[(RCG) SOURCE_CURRENT]
					,[(SOURCE) NOLOAN_CURRENT]
					,[(RCG) KOL_LOAN_PECAH]
				FROM [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_BEFORE]
				WHERE [(RCG) KOL_LOAN_PECAH] NOT IN ('Lunas', 'Suspect', 'WO')
			) [BEFORE]
		ON [CURRENT].[(SOURCE) NOLOAN_CURRENT] = [BEFORE].[(SOURCE) NOLOAN_CURRENT]
		AND [CURRENT].[(RCG) SOURCE_CURRENT] = [BEFORE].[(RCG) SOURCE_CURRENT];

	UPDATE [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT] SET
		[(RCG) KOL_CIF_LAST_DAY] = [BEFORE].[(RCG) KOL_CIF_PECAH]
		,[(RCG) MUTASI_HARIAN] = CONCAT([BEFORE].[(RCG) KOL_CIF_PECAH], '-', [CURRENT].[(RCG) KOL_CIF_PECAH])
	FROM [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT] [CURRENT]
	LEFT JOIN
			(
				SELECT
					[(RCG) SOURCE_CURRENT]
					,[(SOURCE) NOMORCIF_CURRENT]
					,MAX([(RCG) KOL_CIF_PECAH]) AS [(RCG) KOL_CIF_PECAH]
				FROM [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_BEFORE]
				WHERE [(RCG) KOL_CIF_PECAH] NOT IN ('Lunas', 'Suspect', 'WO')
				GROUP BY
					[(RCG) SOURCE_CURRENT]
					,[(SOURCE) NOMORCIF_CURRENT]
			) [BEFORE]
		ON [CURRENT].[(SOURCE) NOMORCIF_CURRENT] = [BEFORE].[(SOURCE) NOMORCIF_CURRENT]
		AND [CURRENT].[(RCG) SOURCE_CURRENT] = [BEFORE].[(RCG) SOURCE_CURRENT];

---------------------------------------UPDATE KOL HASANAH CARD---------------------------------------

	UPDATE [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT] SET
		[(RCG) KOL_CIF_PECAH] = COALESCE([(RCG) KOL_LOAN_PECAH], [(RCG) KOL_CIF_PECAH])
		,[(RCG) KOL_CIF_LAST_MONTH] = COALESCE([(RCG) KOL_LOAN_LAST_MONTH], [(RCG) KOL_CIF_LAST_MONTH])
		,[(RCG) KOL_CIF_LAST_DAY] = COALESCE([(RCG) KOL_LOAN_LAST_DAY], [(RCG) KOL_CIF_LAST_DAY])
	WHERE [(RCG) DIVISI_BSI] = 'Hasanah Card';

	UPDATE [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT] SET
		[(RCG) FLAG_MUTASI_HARIAN] =
			CASE
				WHEN ([BEFORE].[(RCG) KOL_CIF_PECAH] IS NULL OR [BEFORE].[(RCG) KOL_CIF_PECAH] IN ('1')) AND [CURRENT].[(RCG) KOL_CIF_PECAH] IN ('1') THEN ('Stay Kol 1')
				WHEN ([BEFORE].[(RCG) KOL_CIF_PECAH] IS NULL OR [BEFORE].[(RCG) KOL_CIF_PECAH] IN ('1')) AND [CURRENT].[(RCG) KOL_CIF_PECAH] IN ('2', '2A', '2B', '2C') THEN ('Down. Kol 1 ke Kol 2')
				WHEN ([BEFORE].[(RCG) KOL_CIF_PECAH] IS NULL OR [BEFORE].[(RCG) KOL_CIF_PECAH] IN ('1'))
					AND [CURRENT].[(RCG) KOL_CIF_PECAH] IN ('3', '3A', '3B', '3C', '4', '4A', '4B', '4C', '5') THEN ('Down. Kol 1 ke NPF')
				WHEN [BEFORE].[(RCG) KOL_CIF_PECAH] IN ('2', '2A', '2B', '2C') AND [CURRENT].[(RCG) KOL_CIF_PECAH] IN ('2', '2A', '2B', '2C') THEN ('Stay Kol 2')
				WHEN [BEFORE].[(RCG) KOL_CIF_PECAH] IN ('2', '2A', '2B', '2C') AND [CURRENT].[(RCG) KOL_CIF_PECAH] IN ('1') THEN ('Upg. Kol 2 ke Kol 1')
				WHEN [BEFORE].[(RCG) KOL_CIF_PECAH] IN ('2', '2A', '2B', '2C')
					AND [CURRENT].[(RCG) KOL_CIF_PECAH] IN ('3', '3A', '3B', '3C', '4', '4A', '4B', '4C', '5') THEN ('Down. Kol 2 ke NPF')
				WHEN [BEFORE].[(RCG) KOL_CIF_PECAH] IN ('3', '3A', '3B', '3C', '4', '4A', '4B', '4C', '5')
					AND [CURRENT].[(RCG) KOL_CIF_PECAH] IN ('3', '3A', '3B', '3C', '4', '4A', '4B', '4C', '5') THEN ('Stay NPF')
				WHEN [BEFORE].[(RCG) KOL_CIF_PECAH] IN ('3', '3A', '3B', '3C', '4', '4A', '4B', '4C', '5')
					AND [CURRENT].[(RCG) KOL_CIF_PECAH] IN ('1') THEN ('Upg. NPF ke Kol 1')
				WHEN [BEFORE].[(RCG) KOL_CIF_PECAH] IN ('3', '3A', '3B', '3C', '4', '4A', '4B', '4C', '5')
					AND [CURRENT].[(RCG) KOL_CIF_PECAH] IN ('2', '2A', '2B', '2C') THEN ('Upg. NPF ke Kol 2')
				ELSE [CURRENT].[(RCG) KOL_CIF_PECAH]
			END
	FROM [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT] [CURRENT]
	LEFT JOIN
			(
				SELECT
					[(RCG) SOURCE_CURRENT]
					,[(SOURCE) NOMORCIF_CURRENT]
					,MAX([(RCG) KOL_CIF_PECAH]) AS [(RCG) KOL_CIF_PECAH]
				FROM [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_BEFORE]
				WHERE [(RCG) KOL_CIF_PECAH] NOT IN ('Lunas', 'Suspect', 'WO')
				GROUP BY
					[(RCG) SOURCE_CURRENT]
					,[(SOURCE) NOMORCIF_CURRENT]
			)[BEFORE]
		ON [CURRENT].[(SOURCE) NOMORCIF_CURRENT] = [BEFORE].[(SOURCE) NOMORCIF_CURRENT]
		AND [CURRENT].[(RCG) SOURCE_CURRENT] = [BEFORE].[(RCG) SOURCE_CURRENT];

---------------------------------------REPROCCURING DATES---------------------------------------

	UPDATE [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT] SET
		[(RCG) MUTASI_BULANAN] = CONCAT([(RCG) KOL_CIF_LAST_MONTH], '-', [(RCG) KOL_CIF_PECAH]);

	UPDATE [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT] SET
		[(RCG) FLAG_MUTASI_BULANAN] =
			CASE
				WHEN ([(RCG) KOL_CIF_LAST_MONTH] IS NULL OR [(RCG) KOL_CIF_LAST_MONTH] IN ('1')) AND [(RCG) KOL_CIF_PECAH] IN ('1') THEN ('Stay Kol 1')
				WHEN ([(RCG) KOL_CIF_LAST_MONTH] IS NULL OR [(RCG) KOL_CIF_LAST_MONTH] IN ('1')) AND [(RCG) KOL_CIF_PECAH] IN ('2', '2A', '2B', '2C') THEN ('Down. Kol 1 ke Kol 2')
				WHEN ([(RCG) KOL_CIF_LAST_MONTH] IS NULL OR [(RCG) KOL_CIF_LAST_MONTH] IN ('1'))
					AND [(RCG) KOL_CIF_PECAH] IN ('3', '3A', '3B', '3C', '4', '4A', '4B', '4C', '5') THEN ('Down. Kol 1 ke NPF')
				WHEN [(RCG) KOL_CIF_LAST_MONTH] IN ('2', '2A', '2B', '2C') AND [(RCG) KOL_CIF_PECAH] IN ('2', '2A', '2B', '2C') THEN ('Stay Kol 2')
				WHEN [(RCG) KOL_CIF_LAST_MONTH] IN ('2', '2A', '2B', '2C') AND [(RCG) KOL_CIF_PECAH] IN ('1') THEN ('Upg. Kol 2 ke Kol 1')
				WHEN ([(RCG) KOL_CIF_LAST_MONTH] IN ('2', '2A', '2B', '2C'))
					AND [(RCG) KOL_CIF_PECAH] IN ('3', '3A', '3B', '3C', '4', '4A', '4B', '4C', '5') THEN ('Down. Kol 2 ke NPF')
				WHEN [(RCG) KOL_CIF_LAST_MONTH] IN ('3', '3A', '3B', '3C', '4', '4A', '4B', '4C', '5')
					AND [(RCG) KOL_CIF_PECAH] IN ('3', '3A', '3B', '3C', '4', '4A', '4B', '4C', '5') THEN ('Stay NPF')
				WHEN [(RCG) KOL_CIF_LAST_MONTH] IN ('3', '3A', '3B', '3C', '4', '4A', '4B', '4C', '5')
					AND [(RCG) KOL_CIF_PECAH] IN ('1') THEN ('Upg. NPF ke Kol 1')
				WHEN [(RCG) KOL_CIF_LAST_MONTH] IN ('3', '3A', '3B', '3C', '4', '4A', '4B', '4C', '5')
					AND [(RCG) KOL_CIF_PECAH] IN ('2', '2A', '2B', '2C') THEN ('Upg. NPF ke Kol 2')
				ELSE [(RCG) KOL_CIF_PECAH]
			END

---------------------------------------AGING BY NOLOAN---------------------------------------

	UPDATE [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT] SET
		[(RCG) AGING_KOL_LOAN] =
			CONCAT(
				[AGING].[KOL_M-6]
				,' - ', [AGING].[KOL_M-5]
				,' - ', [AGING].[KOL_M-4]
				,' - ', [AGING].[KOL_M-3]
				,' - ', [AGING].[KOL_M-2]
				,' - ', [AGING].[KOL_M-1]
	)
	,[(RCG) MUTASI_AGING_KOL_LOAN] = COALESCE([PERGERAKAN_KOL].[Ket_Aging], 'Unidentified')
	FROM [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT] [CURRENT]
	LEFT JOIN [PORTOFOLIO_ONBS.DATABASE.JOIN.AGING.BY_NOLOAN] [AGING]
		ON [CURRENT].[(SOURCE) NOLOAN_CURRENT] = [AGING].NOLOAN
		AND [CURRENT].[(RCG) SOURCE_CURRENT] = [AGING].[LEGACY]

	LEFT JOIN [PORTOFOLIO_ONBS.MAPPING.JOIN.PERGERAKAN_KOL] [PERGERAKAN_KOL]
		ON CONCAT(COALESCE([PERGERAKAN_KOL].[M-3], 'x'), ' - ', COALESCE([PERGERAKAN_KOL].[M-2], 'x'), ' - ', COALESCE([PERGERAKAN_KOL].[M-1], 'x'))
			= CONCAT(COALESCE([AGING].[KOL_M-3], 'x'), ' - ', COALESCE([AGING].[KOL_M-2], 'x'), ' - ', COALESCE([AGING].[KOL_M-1], 'x'));

/*
	UPDATE [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT]
	SET
		[(RCG) MUTASI_AGING_KOL_LOAN] =
		CASE
			WHEN
				(
					LEN([(RCG) AGING_KOL_LOAN]) - LEN(REPLACE([(RCG) AGING_KOL_LOAN], '1', ''))
					+ (LEN([(RCG) AGING_KOL_LOAN]) - LEN(REPLACE([(RCG) AGING_KOL_LOAN], '  ', ''))) / 2
					+ CASE WHEN [(RCG) AGING_KOL_LOAN] LIKE (' - %') THEN 1 ELSE 0 END
					- CASE WHEN [(RCG) AGING_KOL_LOAN] LIKE ('% - 1') THEN 1 ELSE 0 END
				) = 6 THEN 'Tidak Pernah Menunggak'
			WHEN
				(
					LEN([(RCG) AGING_KOL_LOAN]) - LEN(REPLACE([(RCG) AGING_KOL_LOAN], '1', ''))
					+ (LEN([(RCG) AGING_KOL_LOAN]) - LEN(REPLACE([(RCG) AGING_KOL_LOAN], '  ', ''))) / 2
					+ CASE WHEN [(RCG) AGING_KOL_LOAN] LIKE (' - %') THEN 1 ELSE 0 END
					- CASE WHEN [(RCG) AGING_KOL_LOAN] LIKE ('% - 1') THEN 1 ELSE 0 END
				) >= 4 THEN 'Ada History Menunggak'
			WHEN
				(
					LEN([(RCG) AGING_KOL_LOAN]) - LEN(REPLACE([(RCG) AGING_KOL_LOAN], '1', ''))
					+ (LEN([(RCG) AGING_KOL_LOAN]) - LEN(REPLACE([(RCG) AGING_KOL_LOAN], '  ', ''))) / 2
					+ CASE WHEN [(RCG) AGING_KOL_LOAN] LIKE (' - %') THEN 1 ELSE 0 END
					- CASE WHEN [(RCG) AGING_KOL_LOAN] LIKE ('% - 1') THEN 1 ELSE 0 END
				) < 4 THEN 'Habitual Menunggak'
		END;
*/


---------------------------------------AGING BY NOMORCIF---------------------------------------

	UPDATE [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT] SET
		[(RCG) AGING_KOL_CIF] =
			CONCAT(
				[AGING].[KOL_M-6]
				,' - ', [AGING].[KOL_M-5]
				,' - ', [AGING].[KOL_M-4]
				,' - ', [AGING].[KOL_M-3]
				,' - ', [AGING].[KOL_M-2]
				,' - ', [AGING].[KOL_M-1]
	)
	,[(RCG) MUTASI_AGING_KOL_CIF] = COALESCE([PERGERAKAN_KOL].[Ket_Aging], 'Unidentified')
	FROM [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT] [CURRENT]
	LEFT JOIN [PORTOFOLIO_ONBS.DATABASE.JOIN.AGING.BY_NOMORCIF] [AGING]
		ON [CURRENT].[(SOURCE) NOMORCIF_CURRENT] = [AGING].NOMORCIF
		AND [CURRENT].[(RCG) SOURCE_CURRENT] = [AGING].[LEGACY]

	LEFT JOIN [PORTOFOLIO_ONBS.MAPPING.JOIN.PERGERAKAN_KOL] [PERGERAKAN_KOL]
		ON CONCAT(COALESCE([PERGERAKAN_KOL].[M-3], 'x'), ' - ', COALESCE([PERGERAKAN_KOL].[M-2], 'x'), ' - ', COALESCE([PERGERAKAN_KOL].[M-1], 'x'))
			= CONCAT(COALESCE([AGING].[KOL_M-3], 'x'), ' - ', COALESCE([AGING].[KOL_M-2], 'x'), ' - ', COALESCE([AGING].[KOL_M-1], 'x'));

/*
	UPDATE [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT]
	SET
		[(RCG) MUTASI_AGING_KOL_CIF] =
		CASE
			WHEN
				(
					LEN([(RCG) AGING_KOL_CIF]) - LEN(REPLACE([(RCG) AGING_KOL_CIF], '1', ''))
					+ (LEN([(RCG) AGING_KOL_CIF]) - LEN(REPLACE([(RCG) AGING_KOL_CIF], '  ', ''))) / 2
					+ CASE WHEN [(RCG) AGING_KOL_CIF] LIKE (' - %') THEN 1 ELSE 0 END
					- CASE WHEN [(RCG) AGING_KOL_CIF] LIKE ('% - 1') THEN 1 ELSE 0 END
				) = 6 THEN 'Tidak Pernah Menunggak'
			WHEN
				(
					LEN([(RCG) AGING_KOL_CIF]) - LEN(REPLACE([(RCG) AGING_KOL_CIF], '1', ''))
					+ (LEN([(RCG) AGING_KOL_CIF]) - LEN(REPLACE([(RCG) AGING_KOL_CIF], '  ', ''))) / 2
					+ CASE WHEN [(RCG) AGING_KOL_CIF] LIKE (' - %') THEN 1 ELSE 0 END
					- CASE WHEN [(RCG) AGING_KOL_CIF] LIKE ('% - 1') THEN 1 ELSE 0 END
				) >= 4 THEN 'Ada History Menunggak'
			WHEN
				(
					LEN([(RCG) AGING_KOL_CIF]) - LEN(REPLACE([(RCG) AGING_KOL_CIF], '1', ''))
					+ (LEN([(RCG) AGING_KOL_CIF]) - LEN(REPLACE([(RCG) AGING_KOL_CIF], '  ', ''))) / 2
					+ CASE WHEN [(RCG) AGING_KOL_CIF] LIKE (' - %') THEN 1 ELSE 0 END
					- CASE WHEN [(RCG) AGING_KOL_CIF] LIKE ('% - 1') THEN 1 ELSE 0 END
				) < 4 THEN 'Habitual Menunggak'
		END;
*/

---------------------------------------REPROCCURING DATES---------------------------------------

	UPDATE [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT] SET
		[(RCG) KODECABANG_BSI] = COALESCE([MAPPING].[cabangBSI], [CURRENT].[(RCG) KODECABANG_BSI])
		,[(RCG) NAMACABANG_BSI] = COALESCE([MAPPING].[cabangBSI_Desk], [CURRENT].[(RCG) NAMACABANG_BSI])
		,[(RCG) AREA_BSI] = COALESCE([MAPPING].[areaBSI_Desk], [CURRENT].[(RCG) AREA_BSI])
		,[(RCG) REGION_BSI] = COALESCE([MAPPING].[regionBSI_Desk], [CURRENT].[(RCG) REGION_BSI])
	FROM [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT] [CURRENT]
	LEFT JOIN [PORTOFOLIO_JOIN.MAPPING.JOIN.MAPPING_OUTLET_EDA] [MAPPING]
		ON [CURRENT].[(SOURCE) KODECABANG] = [MAPPING].[cabangLegacy]
		AND [CURRENT].[(RCG) SOURCE_CURRENT] = [MAPPING].[bankLegacy]
	WHERE
		[CURRENT].[(RCG) AREA_BSI] IS NULL
		OR [CURRENT].[(RCG) REGION_BSI] IS NULL;

---------------------------------------REPROCCURING DATES---------------------------------------

	UPDATE [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT]
	SET
		[(RCG) TUNGGAKAN_GROSS] = COALESCE([(SOURCE) TUNGGAKAN_POKOK], 0)+COALESCE([(SOURCE) TUNGGAKAN_MARGIN], 0)
		,[(RCG) ANGSURAN_GROSS] = COALESCE([(SOURCE) ANGSURAN_POKOK], 0)+COALESCE([(SOURCE) ANGSURAN_MARGIN], 0)
		,[(RCG) OS_GROSS_CURRENT] = COALESCE([(SOURCE) OS_POKOK_CURRENT], 0)+COALESCE([(SOURCE) OS_MARGIN_CURRENT], 0)
		,[(RCG) CYCLE_ANGSURAN] = COALESCE(dbo.fx_adjustment_tglSched([(SOURCE) TANGGAL_JATUH_TEMPO], [(SOURCE) TGL_CURRENT], [(SOURCE) SCHEDULE_DATE]), [(RCG) CYCLE_ANGSURAN])
		
	WHERE [(RCG) KOL_CIF_PECAH] NOT IN ('Lunas', 'Suspect', 'WO');

---------------------------------------REPROCCURING DATES---------------------------------------

	UPDATE [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT]
	SET
		[(RCG) FLAG_TUNGGAKAN] = 
			CASE
			WHEN COALESCE([(RCG) TUNGGAKAN_GROSS], 0) <= 0 THEN 'Tidak ada tunggakan'
			WHEN COALESCE([(RCG) TUNGGAKAN_GROSS], 0) <= 50000 THEN 's.d 50rb'
			WHEN COALESCE([(RCG) TUNGGAKAN_GROSS], 0) <= 100000 THEN '50rb s.d 100rb'
			WHEN COALESCE([(RCG) TUNGGAKAN_GROSS], 0) <= 500000 THEN '100rb s.d 500rb'
			WHEN COALESCE([(RCG) TUNGGAKAN_GROSS], 0) <= 1000000 THEN '500rb s.d 1jt'
			WHEN COALESCE([(RCG) TUNGGAKAN_GROSS], 0) <= 2500000 THEN '1jt s.d 2,5jt'
			WHEN COALESCE([(RCG) TUNGGAKAN_GROSS], 0) <= 5000000 THEN '2.5jt s.d 5jt'
			WHEN COALESCE([(RCG) TUNGGAKAN_GROSS], 0) <= 10000000 THEN '5jt s.d 10jt'
			WHEN COALESCE([(RCG) TUNGGAKAN_GROSS], 0) > 10000000 THEN 'Di atas 10jt'
		END
	WHERE [(RCG) KOL_CIF_PECAH] NOT IN ('Lunas', 'Suspect', 'WO');

---------------------------------------REPROCCURING DATES---------------------------------------

	UPDATE [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT]
	SET
		[(RCG) SEKTOREKONOMIDESC] = [MAPPING].SEKTOR_EKONOMI_DESC
	FROM [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT] [CURRENT]
	LEFT JOIN [PORTOFOLIO_JOIN.MAPPING.JOIN.SEKTOR_EKONOMI] [MAPPING]
		ON [CURRENT].[(SOURCE) SEKTOREKONOMICODE] = [MAPPING].[SOURCE];

---------------------------------------STANDARIZE KOL---------------------------------------

	UPDATE [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT]
	SET
		[(RCG) KOL_CIF_STD] = LEFT([(RCG) KOL_CIF_STD], 1)
	WHERE [(RCG) KOL_CIF_STD] NOT IN ('Lunas', 'Suspect', 'WO')

	UPDATE [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT]
	SET
		[(RCG) FLAG_KELOLAAN] = dbo.fx_adjustment_kelolaan([(RCG) KOL_CIF_LAST_MONTH], [(RCG) DIVISI_PECAH])
	WHERE [(RCG) KOL_CIF_STD] NOT IN ('Lunas', 'Suspect', 'WO')

---------------------------------------REMAPPING SUPERCIF---------------------------------------

	UPDATE [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT]
	SET
		[(FOG) SUPERCIF] = COALESCE([SUPERCIF].SUPERCIF_NO, [CURRENT].[(FOG) SUPERCIF], [CURRENT].[(SOURCE) NOMORCIF_CURRENT])
	FROM [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT] [CURRENT]
	LEFT JOIN [PORTOFOLIO_JOIN.MAPPING.JOIN.REKAP_NOCIF.SUPERCIF] [SUPERCIF]
		ON [SUPERCIF].LEGACY_CURRENT = [CURRENT].[(RCG) SOURCE_CURRENT]
		AND [SUPERCIF].NOMORCIF_CURRENT = [CURRENT].[(SOURCE) NOMORCIF_CURRENT];

---------------------------------------KOL SUPERCIF---------------------------------------

	SELECT
		COALESCE([SUPERCIF].SUPERCIF_NO, [LAST_MONTH].[(SOURCE) NOMORCIF_CURRENT]) AS NOMORCIF
		,MAX([(RCG) KOL_CIF_PECAH]) AS KOL_CIF_PECAH
	INTO #KOL_SUPERCIF_LAST
	FROM [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT] [LAST_MONTH]
	LEFT JOIN [PORTOFOLIO_JOIN.MAPPING.JOIN.REKAP_NOCIF.SUPERCIF] [SUPERCIF]
		ON [SUPERCIF].LEGACY_CURRENT = [LAST_MONTH].[(RCG) SOURCE_CURRENT]
		AND [SUPERCIF].NOMORCIF_CURRENT = [LAST_MONTH].[(SOURCE) NOMORCIF_CURRENT]
	WHERE [(RCG) KOL_CIF_PECAH] NOT IN ('Lunas', 'Suspect', 'WO')
	GROUP BY COALESCE([SUPERCIF].SUPERCIF_NO, [LAST_MONTH].[(SOURCE) NOMORCIF_CURRENT])

	UPDATE [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT]
	SET
		[(RCG) KOL_SUPERCIF_PECAH] = [KOL].KOL_CIF_PECAH
	FROM [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT] [SOURCE]
	LEFT JOIN #KOL_SUPERCIF_LAST [KOL]
		ON [KOL].NOMORCIF = [SOURCE].[(FOG) SUPERCIF]
		AND [SOURCE].[(RCG) SOURCE_CURRENT] = 'BSM'
	WHERE [KOL].NOMORCIF IS NOT NULL;

	UPDATE [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT]
	SET
		[(RCG) KOL_SUPERCIF_PECAH] = [(RCG) KOL_CIF_PECAH]
	WHERE [(RCG) KOL_SUPERCIF_PECAH] IS NULL;

---------------------------------------FREKUENSI RESTRUKTUR---------------------------------------

UPDATE [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT]
SET
	[(RCG) FREKUENSI_RESTRUKTUR] =
		CASE
			WHEN LEN([SOURCE].[(SOURCE) RESTRUCTFLAG]) > 1 THEN RIGHT([SOURCE].[(SOURCE) RESTRUCTFLAG], 1)
			ELSE [COMPILE].ACCT
		END
FROM [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT] [SOURCE]
LEFT JOIN
	(
		SELECT
			LEGACY
			,NOLOAN
			,RESTRUCTFLAG
			,RESTRUCTDATE
			,COUNT(NOLOAN) AS ACCT
		FROM [PORTOFOLIO_ONBS.COMPILE.JOIN.REKAP_NOLOAN.RESTRU]
		WHERE RESTRUCTDATE IS NOT NULL
		GROUP BY 
			LEGACY
			,NOLOAN
			,RESTRUCTFLAG
			,RESTRUCTDATE
	) [COMPILE]
	ON [SOURCE].[(RCG) SOURCE_CURRENT] = [COMPILE].LEGACY
	AND [SOURCE].[(SOURCE) NOLOAN_CURRENT] = [COMPILE].NOLOAN;


---------------------------------------PRODUK PAWNING---------------------------------------
	
	UPDATE [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT]
	SET
		[(EDA) PRODUK] = COALESCE([(EDA) PRODUK], 'CICIL EMAS')
		,[(EDA) PRODUK_DETAIL] = COALESCE([(EDA) PRODUK_DETAIL], 'CICIL EMAS')
	WHERE [(RCG) DIVISI_BSI] IN ('PAWNING', 'PWG') AND LEFT([(SOURCE) LOANTYPE], 3) = 'MUR';
	
	UPDATE [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT]
	SET
		[(EDA) PRODUK] = COALESCE([(EDA) PRODUK], 'GADAI EMAS')
		,[(EDA) PRODUK_DETAIL] = COALESCE([(EDA) PRODUK_DETAIL], 'GADAI EMAS')
	WHERE [(RCG) DIVISI_BSI] IN ('PAWNING', 'PWG');

---------------------------------------PRODUK KONSUMER---------------------------------------
	
	UPDATE [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT]
	SET
		[(EDA) PRODUK] = COALESCE([(EDA) PRODUK], 'OTO')
		,[(EDA) PRODUK_DETAIL] = COALESCE([(EDA) PRODUK_DETAIL], 'OTO')
	WHERE [(RCG) DIVISI_BSI] IN ('CONSUMER', 'KONSUMER', 'CFG', 'CFG-1')
	AND
		(
			LEFT([(SOURCE) LOANTYPE], 3) = 'JF0'
			OR [(SOURCE) LOANTYPE] = 'MUR0222'
		);
	
	UPDATE [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT]
	SET
		[(EDA) PRODUK] = COALESCE([(EDA) PRODUK], 'PENSIUN')
		,[(EDA) PRODUK_DETAIL] = COALESCE([(EDA) PRODUK_DETAIL], 'PENSIUN')
	WHERE [(RCG) DIVISI_BSI] IN ('CONSUMER', 'KONSUMER', 'CFG', 'CFG-2')
	AND LEFT([(SOURCE) LOANTYPE], 3) = 'RHS';
	
---------------------------------------PRODUK SME---------------------------------------

	UPDATE [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT]
	SET
		[(EDA) PRODUK] = COALESCE([(EDA) PRODUK], 'NON LINKAGE')
		,[(EDA) PRODUK_DETAIL] = COALESCE([(EDA) PRODUK_DETAIL], 'NON LINKAGE')
	WHERE [(RCG) DIVISI_BSI] IN ('SME', 'BBG-2', 'BBG')
	AND LEFT([(SOURCE) LOANTYPE], 3) = 'IMB';
	
	UPDATE [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT]
	SET
		[(EDA) PRODUK] = COALESCE([(EDA) PRODUK], 'LINKAGE')
		,[(EDA) PRODUK_DETAIL] = COALESCE([(EDA) PRODUK_DETAIL], 'LINKAGE')
	WHERE [(RCG) DIVISI_BSI] IN ('SME', 'BBG-1', 'BBG')
	AND LEFT([(SOURCE) LOANTYPE], 3) = 'MUD';

---------------------------------------RBH PBH---------------------------------------

	UPDATE [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT]
	SET
		[(RCG) RASIO_RBH_PBH_CURRENT] =
			CASE WHEN [(SOURCE) PROYEKSI_BAGIHASIL_CURRENT] IS NOT NULL AND [(SOURCE) REALISASI_BAGIHASIL_CURRENT] IS NOT NULL
				THEN COALESCE([(SOURCE) REALISASI_BAGIHASIL_CURRENT], 0) / COALESCE(NULLIF([(SOURCE) PROYEKSI_BAGIHASIL_CURRENT], 0), 1)
			END
	WHERE [(RCG) KOL_CIF_PECAH] NOT IN ('Lunas', 'Suspect', 'WO');

---------------------------------------Flag Mature---------------------------------------

	UPDATE [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT]
	SET
		[(RCG) FLAG_MATURE] = dbo.fx_adjustment_flagMature([(SOURCE) TANGGAL_JATUH_TEMPO], [(SOURCE) TGL_CURRENT])
	WHERE [(RCG) KOL_CIF_PECAH] NOT IN ('Lunas', 'Suspect', 'WO');

---------------------------------------UPDATE OUTLET TUTUP---------------------------------------

	UPDATE [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT]
	SET
		[(RCG) KODECABANG_BSI] = COALESCE([REMAPPING].[KODE OUTLET PENAMPUNG], [SOURCE].[(RCG) KODECABANG_BSI])
		,[(RCG) NAMACABANG_BSI] = COALESCE([REMAPPING].[NAMA OUTLET PENAMPUNG], [SOURCE].[(RCG) NAMACABANG_BSI])
	FROM [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT] [SOURCE]
	LEFT JOIN [PORTOFOLIO_JOIN.MAPPING.JOIN.CABANG_TUTUP] [REMAPPING]
		ON [SOURCE].[(RCG) KODECABANG_BSI] = [REMAPPING].[KODEOUTLET]
	WHERE [REMAPPING].[KODE OUTLET PENAMPUNG] IS NOT NULL;

	UPDATE [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT]
	SET
		[(RCG) NAMACABANG_BSI] = COALESCE([REMAPPING].[Nama Outlet], [SOURCE].[(RCG) NAMACABANG_BSI])
		,[(RCG) AREA_BSI] = COALESCE([REMAPPING].[Nama Area], [SOURCE].[(RCG) AREA_BSI])
		,[(RCG) REGION_BSI] = COALESCE([REMAPPING].[Nama RO], [SOURCE].[(RCG) REGION_BSI])
	FROM [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT] [SOURCE]
	LEFT JOIN [PORTOFOLIO_JOIN.MAPPING.JOIN.CABANG_BSI_UPDATE] [REMAPPING]
		ON [SOURCE].[(RCG) KODECABANG_BSI] = [REMAPPING].[Kode Outlet];
	

---------------------------------------RINCIAN AGUNAN---------------------------------------

	SELECT
		MAX([DETAIL].AS_OF_DT) AS TGL_UPDATE_DATA
		,[LINK].NOLOAN
		,MIN(
		CASE
			WHEN [DETAIL].JENISAGUNAN IN (
				'Apartemen / Rumah Susun'
				,'Rumah Tinggal'
				,'Tanah/Bangunan - Bangunan Gudang'
				,'Tanah/Bangunan - Bangunan Pabrik'
				,'Tanah/Bangunan - Gdg Perktr/Pertoko'
				,'Tanah/Bangunan - Ruko/Rukan'
				,'Tanah/Bangunan - Rumah/Rusun/Mess'
				,'Tanah/Bangunan - Tanah'
			)
			OR [DETAIL].JENISAGUNAN IN (
				'Kendaraan - Kapal Laut < 20m3'
				,'Kendaraan - Kapal Laut > 20m3'
				,'Kendaraan - Kendaraan Lainnya'
				,'Kendaraan - Mesin-mesin'
				,'Kendaraan - Mobil'
				,'Kendaraan - Pesawat'
				,'Kendaraan Komersil (Mobil Box, Truk'
				,'Kendaraan Pribadi'
				,'Kendaran - Motor'
			)
			OR [DETAIL].JENISAGUNAN IN ('CC - Emas (Logam Mulia)', 'CC - Emas (Non Logam Mulia)') THEN 'Fixed Asset'
			ELSE 'Non Fixed Asset'
		END) AS FlagAgunan

		,MIN(
		CASE
			WHEN
				(
					[DETAIL].JENISAGUNAN IN (
						'Apartemen / Rumah Susun'
						,'Rumah Tinggal'
						,'Tanah/Bangunan - Bangunan Gudang'
						,'Tanah/Bangunan - Bangunan Pabrik'
						,'Tanah/Bangunan - Gdg Perktr/Pertoko'
						,'Tanah/Bangunan - Ruko/Rukan'
						,'Tanah/Bangunan - Rumah/Rusun/Mess'
						,'Tanah/Bangunan - Tanah'
					)
					AND [DETAIL].JENISPENGIKATAN = 'Hak Tanggungan'
				)
			OR
				(
						[DETAIL].JENISAGUNAN IN (
						'Kendaraan - Kapal Laut < 20m3'
						,'Kendaraan - Kapal Laut > 20m3'
						,'Kendaraan - Kendaraan Lainnya'
						,'Kendaraan - Mesin-mesin'
						,'Kendaraan - Mobil'
						,'Kendaraan - Pesawat'
						,'Kendaraan Komersil (Mobil Box, Truk'
						,'Kendaraan Pribadi'
						,'Kendaran - Motor'
					)
					AND [DETAIL].JENISPENGIKATAN = 'Fiduciare Eigendom Overdracht (FEO)'
				)
			OR ([DETAIL].JENISAGUNAN IN ('CC - Emas (Logam Mulia)', 'CC - Emas (Non Logam Mulia)') AND [DETAIL].JENISPENGIKATAN = 'Gadai')
			THEN 'Secured'
			ELSE 'Unsecured'
		END) AS FlagPembiayaan
		,CAST(SUM([DETAIL].NILAIPASAR*([LINK].PERCENALLOC/100.00)) AS DECIMAL(32, 2)) AS NILAIPASARALLOC
		,CAST(SUM([DETAIL].NILAIPENGIKATAN*([LINK].PERCENALLOC/100.00)) AS DECIMAL(32, 2)) AS NILAIPENGIKATANALLOC
		,CAST(SUM([DETAIL].NILAILIKUIDITAS*([LINK].PERCENALLOC/100.00)) AS DECIMAL(32, 2)) AS NILAILIKUIDITASALLOC
		,CAST(SUM([DETAIL].NILAIASURANSI*([LINK].PERCENALLOC/100.00)) AS DECIMAL(32, 2)) AS NILAIASURANSIALLOC
		,CAST(SUM(
			CASE
				WHEN [DETAIL].JENISAGUNAN IN (
					'Apartemen / Rumah Susun'
					,'Rumah Tinggal'
					,'Tanah/Bangunan - Bangunan Gudang'
					,'Tanah/Bangunan - Bangunan Pabrik'
					,'Tanah/Bangunan - Gdg Perktr/Pertoko'
					,'Tanah/Bangunan - Ruko/Rukan'
					,'Tanah/Bangunan - Rumah/Rusun/Mess'
					,'Tanah/Bangunan - Tanah'
				)
				OR [DETAIL].JENISAGUNAN IN (
					'Kendaraan - Kapal Laut < 20m3'
					,'Kendaraan - Kapal Laut > 20m3'
					,'Kendaraan - Kendaraan Lainnya'
					,'Kendaraan - Mesin-mesin'
					,'Kendaraan - Mobil'
					,'Kendaraan - Pesawat'
					,'Kendaraan Komersil (Mobil Box, Truk'
					,'Kendaraan Pribadi'
					,'Kendaran - Motor'
				)
				OR [DETAIL].JENISAGUNAN IN ('CC - Emas (Logam Mulia)', 'CC - Emas (Non Logam Mulia)') THEN [DETAIL].NILAIPASAR*([LINK].PERCENALLOC/100.00)
			END
		) AS DECIMAL(32, 2)) AS NILAIPASARFIXEDASSET
		,CAST(SUM(
			CASE
				WHEN [DETAIL].JENISAGUNAN IN (
					'Apartemen / Rumah Susun'
					,'Rumah Tinggal'
					,'Tanah/Bangunan - Bangunan Gudang'
					,'Tanah/Bangunan - Bangunan Pabrik'
					,'Tanah/Bangunan - Gdg Perktr/Pertoko'
					,'Tanah/Bangunan - Ruko/Rukan'
					,'Tanah/Bangunan - Rumah/Rusun/Mess'
					,'Tanah/Bangunan - Tanah'
				)
				OR [DETAIL].JENISAGUNAN IN (
					'Kendaraan - Kapal Laut < 20m3'
					,'Kendaraan - Kapal Laut > 20m3'
					,'Kendaraan - Kendaraan Lainnya'
					,'Kendaraan - Mesin-mesin'
					,'Kendaraan - Mobil'
					,'Kendaraan - Pesawat'
					,'Kendaraan Komersil (Mobil Box, Truk'
					,'Kendaraan Pribadi'
					,'Kendaran - Motor'
				)
				OR [DETAIL].JENISAGUNAN IN ('CC - Emas (Logam Mulia)', 'CC - Emas (Non Logam Mulia)') THEN [DETAIL].NILAIPENGIKATAN*([LINK].PERCENALLOC/100.00)
			END
		) AS DECIMAL(32, 2)) AS NILAIPENGIKATANFIXEDASSET
		,CAST(SUM(
			CASE
				WHEN [DETAIL].JENISAGUNAN IN (
					'Apartemen / Rumah Susun'
					,'Rumah Tinggal'
					,'Tanah/Bangunan - Bangunan Gudang'
					,'Tanah/Bangunan - Bangunan Pabrik'
					,'Tanah/Bangunan - Gdg Perktr/Pertoko'
					,'Tanah/Bangunan - Ruko/Rukan'
					,'Tanah/Bangunan - Rumah/Rusun/Mess'
					,'Tanah/Bangunan - Tanah'
				)
				OR [DETAIL].JENISAGUNAN IN (
					'Kendaraan - Kapal Laut < 20m3'
					,'Kendaraan - Kapal Laut > 20m3'
					,'Kendaraan - Kendaraan Lainnya'
					,'Kendaraan - Mesin-mesin'
					,'Kendaraan - Mobil'
					,'Kendaraan - Pesawat'
					,'Kendaraan Komersil (Mobil Box, Truk'
					,'Kendaraan Pribadi'
					,'Kendaran - Motor'
				)
				OR [DETAIL].JENISAGUNAN IN ('CC - Emas (Logam Mulia)', 'CC - Emas (Non Logam Mulia)') THEN [DETAIL].NILAILIKUIDITAS*([LINK].PERCENALLOC/100.00)
			END
		) AS DECIMAL(32, 2)) AS NILAILIKUIDITASFIXEDASSET
		,CAST(SUM(
			CASE
				WHEN [DETAIL].JENISAGUNAN IN (
					'Apartemen / Rumah Susun'
					,'Rumah Tinggal'
					,'Tanah/Bangunan - Bangunan Gudang'
					,'Tanah/Bangunan - Bangunan Pabrik'
					,'Tanah/Bangunan - Gdg Perktr/Pertoko'
					,'Tanah/Bangunan - Ruko/Rukan'
					,'Tanah/Bangunan - Rumah/Rusun/Mess'
					,'Tanah/Bangunan - Tanah'
				)
				OR [DETAIL].JENISAGUNAN IN (
					'Kendaraan - Kapal Laut < 20m3'
					,'Kendaraan - Kapal Laut > 20m3'
					,'Kendaraan - Kendaraan Lainnya'
					,'Kendaraan - Mesin-mesin'
					,'Kendaraan - Mobil'
					,'Kendaraan - Pesawat'
					,'Kendaraan Komersil (Mobil Box, Truk'
					,'Kendaraan Pribadi'
					,'Kendaran - Motor'
				)
				OR [DETAIL].JENISAGUNAN IN ('CC - Emas (Logam Mulia)', 'CC - Emas (Non Logam Mulia)') THEN [DETAIL].NILAIASURANSI*([LINK].PERCENALLOC/100.00)
			END
		) AS DECIMAL(32, 2)) AS NILAIASURANSIFIXEDASSET
		
		,COUNT([DETAIL].IDCOLL) AS JMLAGUNAN
	INTO #TEMP_AGUNAN
	FROM
		[NEW_BSI_COLLECTION].dbo.[PORTOFOLIO_ONBS.DATABASE.BSM.AGUNAN_LINK] [LINK]
	LEFT JOIN
		[NEW_BSI_COLLECTION].dbo.[PORTOFOLIO_ONBS.DATABASE.BSM.AGUNAN_DETAIL] [DETAIL]
		ON [LINK].IDCOLL = [DETAIL].IDCOLL
	GROUP BY
		[LINK].NOLOAN;

	WITH CTE AS
	(
		SELECT
			[LINK].NOLOAN
			,[DETAIL].IDCOLL
			,[DETAIL].JENISAGUNAN
			,[DETAIL].JENISPENGIKATAN
			,[DETAIL].ALAMAT_AGUNAN
			,[DETAIL].BUKTIKEPEMILIKAN
			,ROW_NUMBER() OVER (
				PARTITION BY
					[LINK].NOLOAN
				ORDER BY
					[DETAIL].AS_OF_DT DESC
					,[DETAIL].NILAIPASAR*([LINK].PERCENALLOC/100.00) DESC
			) AS ACCT

		FROM
			[NEW_BSI_COLLECTION].dbo.[PORTOFOLIO_ONBS.DATABASE.BSM.AGUNAN_LINK] [LINK]
		LEFT JOIN
			[NEW_BSI_COLLECTION].dbo.[PORTOFOLIO_ONBS.DATABASE.BSM.AGUNAN_DETAIL] [DETAIL]
			ON [LINK].IDCOLL = [DETAIL].IDCOLL
	) SELECT * INTO #AGUNAN_TERBESAR FROM CTE WHERE ACCT = 1;

	UPDATE [PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT]
	SET
		[(AGUNAN) TGL_UPDATE_DATA] = [AGUNAN].TGL_UPDATE_DATA
		,[(AGUNAN) KODEAGUNANTERBESAR] = [MAX_AGUNAN].IDCOLL
		,[(AGUNAN) JENISAGUNANTERBESAR] = [MAX_AGUNAN].JENISAGUNAN
		,[(AGUNAN) JENISPENGIKATANTERBESAR] = [MAX_AGUNAN].JENISPENGIKATAN
		,[(AGUNAN) ALAMATAGUNANTERBESAR] = [MAX_AGUNAN].ALAMAT_AGUNAN
		,[(AGUNAN) BUKTIKEPEMILIKANTERBESAR] = [MAX_AGUNAN].BUKTIKEPEMILIKAN
		,[(AGUNAN) FlagAgunanLOAN] = COALESCE([AGUNAN].FlagAgunan, 'Tidak Ada Agunan')
		,[(AGUNAN) FlagPembiayaan] = COALESCE([AGUNAN].FlagPembiayaan, 'Tidak Ada Agunan')
		,[(AGUNAN) NILAIPASARALLOC] = [AGUNAN].NILAIPASARALLOC
		,[(AGUNAN) NILAIPENGIKATANALLOC] = [AGUNAN].NILAIPENGIKATANALLOC
		,[(AGUNAN) NILAILIKUIDITASALLOC] = [AGUNAN].NILAILIKUIDITASALLOC
		,[(AGUNAN) NILAIASURANSIALLOC] = [AGUNAN].NILAIASURANSIALLOC
		,[(AGUNAN) NILAIPASARFIXEDASSET] = [AGUNAN].NILAIPASARFIXEDASSET
		,[(AGUNAN) NILAIPENGIKATANFIXEDASSET] = [AGUNAN].NILAIPENGIKATANFIXEDASSET
		,[(AGUNAN) NILAILIKUIDITASFIXEDASSET] = [AGUNAN].NILAILIKUIDITASFIXEDASSET
		,[(AGUNAN) NILAIASURANSIFIXEDASSET] = [AGUNAN].NILAIASURANSIFIXEDASSET
		,[(AGUNAN) %_CCR] = [AGUNAN].NILAIPASARALLOC / NULLIF(CAST(NULLIF([PORTO].[(RCG) OS_POKOK_PSAK_CURRENT], 0) AS DECIMAL(32, 2)), CAST(1 AS NUMERIC(32, 2)))
	FROM
		[PORTOFOLIO_ONBS.GENERATED.JOIN.PORTOFOLIO_CURRENT] [PORTO]
	LEFT JOIN #TEMP_AGUNAN [AGUNAN]
		ON [PORTO].[(SOURCE) NOLOAN_CURRENT] = [AGUNAN].NOLOAN
	LEFT JOIN #AGUNAN_TERBESAR [MAX_AGUNAN]
		ON [PORTO].[(SOURCE) NOLOAN_CURRENT] = [MAX_AGUNAN].NOLOAN;

	DROP TABLE #TEMP_AGUNAN;
	DROP TABLE #AGUNAN_TERBESAR;
		

  -- routine body goes here, e.g.
  -- SELECT 'Navicat for SQL Server'
END
GO
