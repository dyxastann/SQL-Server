BEGIN TRY
	DROP TABLE [NEW_BSI_DEV].[dbo].[PORTOFOLIO.ONBS.CURRENT]
END TRY
BEGIN CATCH
END CATCH

CREATE TABLE [NEW_BSI_DEV].[dbo].[PORTOFOLIO.ONBS.CURRENT] (
	TGL_CURRENT DATE
	,LEGACY VARCHAR(10)
	,NOLOAN VARCHAR(50)
	,NOMORCIF VARCHAR(50)
	,JENISPIUTANGPEMBIAYAAN VARCHAR(50)
	,DPD INTEGER
	,KOL_LOAN VARCHAR(50)
	,KOL_CIF VARCHAR(50)
	,OS_POKOK_CURRENT DECIMAL(20, 2)
	,OS_MARGIN_CURRENT DECIMAL(20, 2)
	,RBH_CURRENT DECIMAL(20, 2)
	,PBH_CURRENT DECIMAL(20, 2)
);

MERGE [NEW_BSI_DEV].[dbo].[PORTOFOLIO.ONBS.CURRENT] [TARGET]
USING (
		SELECT
			*
		FROM [NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_ONBS.SOURCE.BNIS.HASANAH_CARD] [SOURCE]
		WHERE TRY_CAST([SOURCE].CURRBAL AS DECIMAL(20, 2)) > 0.00
				AND ([SOURCE].PB IN ('B', 'C', 'D', 'E', 'F', 'H', 'J', 'L', 'M', 'N', 'P', 'Q', 'T', 'U', 'W', 'Y') OR [SOURCE].PB IS NULL)
				AND [SOURCE].POSTFLG IN ('PP', 'SP')
	) [SOURCE]
	ON [SOURCE].[CARDNO] = [TARGET].[NOLOAN]
	AND RIGHT([SOURCE].[CUSTNO], 15) = [TARGET].[NOMORCIF]
	AND [TARGET].[LEGACY] = 'BNIS'
WHEN MATCHED THEN UPDATE
SET	
	TGL_CURRENT = COALESCE(TRY_CAST([SOURCE].FILE_DATE AS DATE), [TARGET].TGL_CURRENT)
	,JENISPIUTANGPEMBIAYAAN = COALESCE('Qardh', [TARGET].JENISPIUTANGPEMBIAYAAN)
	,DPD = COALESCE(CASE WHEN [SOURCE].DPD = '0' THEN 0 ELSE
			(CASE WHEN RIGHT([SOURCE].FILE_DATE, 2) < CYCLE THEN RIGHT([SOURCE].FILE_DATE, 2) + DATEPART(day, EOMONTH(DATEADD(MONTH, -1, [SOURCE].FILE_DATE))) ELSE RIGHT([SOURCE].FILE_DATE, 2) END) - [SOURCE].CYCLE + COALESCE(NULLIF([SOURCE].DPD, 'XDY'), 0)
		END, [TARGET].DPD)

	,KOL_LOAN = COALESCE(CASE
			WHEN [SOURCE].GOL = 'GOL_01' THEN '1'
			WHEN [SOURCE].GOL = 'GOL_02' AND [SOURCE].BUCKET = '02_XDY' THEN '2A'
			WHEN [SOURCE].GOL = 'GOL_02' AND [SOURCE].BUCKET = '03_D30' THEN '2B'
			WHEN [SOURCE].GOL = 'GOL_02' AND [SOURCE].BUCKET = '04_D60' THEN '2C'
			WHEN [SOURCE].GOL = 'GOL_03' AND
				(CASE WHEN RIGHT([SOURCE].FILE_DATE, 2) < CYCLE THEN RIGHT([SOURCE].FILE_DATE, 2) + DATEPART(day, EOMONTH(DATEADD(MONTH, -1, [SOURCE].FILE_DATE))) ELSE RIGHT([SOURCE].FILE_DATE, 2) END) - [SOURCE].CYCLE <= 10 THEN '3A'
			WHEN [SOURCE].GOL = 'GOL_03' AND
				(CASE WHEN RIGHT([SOURCE].FILE_DATE, 2) < CYCLE THEN RIGHT([SOURCE].FILE_DATE, 2) + DATEPART(day, EOMONTH(DATEADD(MONTH, -1, [SOURCE].FILE_DATE))) ELSE RIGHT([SOURCE].FILE_DATE, 2) END) - [SOURCE].CYCLE <= 20 THEN '3B'
			WHEN [SOURCE].GOL = 'GOL_03' AND
				(CASE WHEN RIGHT([SOURCE].FILE_DATE, 2) < CYCLE THEN RIGHT([SOURCE].FILE_DATE, 2) + DATEPART(day, EOMONTH(DATEADD(MONTH, -1, [SOURCE].FILE_DATE))) ELSE RIGHT([SOURCE].FILE_DATE, 2) END) - [SOURCE].CYCLE > 20 THEN '3C'
			WHEN [SOURCE].GOL = 'GOL_04' AND [SOURCE].BUCKET = '06_120' THEN '4A'
			WHEN [SOURCE].GOL = 'GOL_04' AND
				(CASE WHEN RIGHT([SOURCE].FILE_DATE, 2) < CYCLE THEN RIGHT([SOURCE].FILE_DATE, 2) + DATEPART(day, EOMONTH(DATEADD(MONTH, -1, [SOURCE].FILE_DATE))) ELSE RIGHT([SOURCE].FILE_DATE, 2) END) - [SOURCE].CYCLE <= 15 THEN '4B'
			WHEN [SOURCE].GOL = 'GOL_04' AND
				(CASE WHEN RIGHT([SOURCE].FILE_DATE, 2) < CYCLE THEN RIGHT([SOURCE].FILE_DATE, 2) + DATEPART(day, EOMONTH(DATEADD(MONTH, -1, [SOURCE].FILE_DATE))) ELSE RIGHT([SOURCE].FILE_DATE, 2) END) - [SOURCE].CYCLE > 15 THEN '4C'
			WHEN [SOURCE].GOL = 'GOL_05' THEN '5'
			ELSE CONCAT(RIGHT([SOURCE].GOL, 1), 'A')
		END, [TARGET].KOL_LOAN)
	,KOL_CIF = COALESCE(CASE
			WHEN [SOURCE].GOL = 'GOL_01' THEN '1'
			WHEN [SOURCE].GOL = 'GOL_02' AND [SOURCE].BUCKET = '02_XDY' THEN '2A'
			WHEN [SOURCE].GOL = 'GOL_02' AND [SOURCE].BUCKET = '03_D30' THEN '2B'
			WHEN [SOURCE].GOL = 'GOL_02' AND [SOURCE].BUCKET = '04_D60' THEN '2C'
			WHEN [SOURCE].GOL = 'GOL_03' AND
				(CASE WHEN RIGHT([SOURCE].FILE_DATE, 2) < CYCLE THEN RIGHT([SOURCE].FILE_DATE, 2) + DATEPART(day, EOMONTH(DATEADD(MONTH, -1, [SOURCE].FILE_DATE))) ELSE RIGHT([SOURCE].FILE_DATE, 2) END) - [SOURCE].CYCLE <= 10 THEN '3A'
			WHEN [SOURCE].GOL = 'GOL_03' AND
				(CASE WHEN RIGHT([SOURCE].FILE_DATE, 2) < CYCLE THEN RIGHT([SOURCE].FILE_DATE, 2) + DATEPART(day, EOMONTH(DATEADD(MONTH, -1, [SOURCE].FILE_DATE))) ELSE RIGHT([SOURCE].FILE_DATE, 2) END) - [SOURCE].CYCLE <= 20 THEN '3B'
			WHEN [SOURCE].GOL = 'GOL_03' AND
				(CASE WHEN RIGHT([SOURCE].FILE_DATE, 2) < CYCLE THEN RIGHT([SOURCE].FILE_DATE, 2) + DATEPART(day, EOMONTH(DATEADD(MONTH, -1, [SOURCE].FILE_DATE))) ELSE RIGHT([SOURCE].FILE_DATE, 2) END) - [SOURCE].CYCLE > 20 THEN '3C'
			WHEN [SOURCE].GOL = 'GOL_04' AND [SOURCE].BUCKET = '06_120' THEN '4A'
			WHEN [SOURCE].GOL = 'GOL_04' AND
				(CASE WHEN RIGHT([SOURCE].FILE_DATE, 2) < CYCLE THEN RIGHT([SOURCE].FILE_DATE, 2) + DATEPART(day, EOMONTH(DATEADD(MONTH, -1, [SOURCE].FILE_DATE))) ELSE RIGHT([SOURCE].FILE_DATE, 2) END) - [SOURCE].CYCLE <= 15 THEN '4B'
			WHEN [SOURCE].GOL = 'GOL_04' AND
				(CASE WHEN RIGHT([SOURCE].FILE_DATE, 2) < CYCLE THEN RIGHT([SOURCE].FILE_DATE, 2) + DATEPART(day, EOMONTH(DATEADD(MONTH, -1, [SOURCE].FILE_DATE))) ELSE RIGHT([SOURCE].FILE_DATE, 2) END) - [SOURCE].CYCLE > 15 THEN '4C'
			WHEN [SOURCE].GOL = 'GOL_05' THEN '5'
			ELSE CONCAT(RIGHT([SOURCE].GOL, 1), 'A')
		END, [TARGET].KOL_CIF)

	,OS_POKOK_CURRENT = COALESCE(COALESCE(TRY_CAST([SOURCE].rtlpribal AS DECIMAL(20,2)), 0.00) + COALESCE(TRY_CAST([SOURCE].cshpribal AS DECIMAL(20,2)), 0.00), [TARGET].OS_POKOK_CURRENT)
	,OS_MARGIN_CURRENT = COALESCE(COALESCE(TRY_CAST([SOURCE].rtlfeesvc AS DECIMAL(20,2)), 0.00) + COALESCE(TRY_CAST([SOURCE].cshfeesvc AS DECIMAL(20,2)), 0.00), [TARGET].OS_MARGIN_CURRENT)

WHEN NOT MATCHED THEN INSERT
(
	TGL_CURRENT
	,LEGACY
	,NOLOAN
	,NOMORCIF
	,JENISPIUTANGPEMBIAYAAN
	,DPD
	,KOL_LOAN
	,KOL_CIF
	,OS_POKOK_CURRENT
	,OS_MARGIN_CURRENT
)
VALUES
(
	TRY_CAST([SOURCE].FILE_DATE AS DATE)
	,'BNIS'
	,[SOURCE].CARDNO
	,RIGHT([SOURCE].[CUSTNO], 15)
	,'Qardh'
	,CASE WHEN [SOURCE].DPD = '0' THEN 0 ELSE
			(CASE WHEN RIGHT([SOURCE].FILE_DATE, 2) < CYCLE THEN RIGHT([SOURCE].FILE_DATE, 2) + DATEPART(day, EOMONTH(DATEADD(MONTH, -1, [SOURCE].FILE_DATE))) ELSE RIGHT([SOURCE].FILE_DATE, 2) END) - [SOURCE].CYCLE + COALESCE(NULLIF([SOURCE].DPD, 'XDY'), 0)
		END
	,CASE
			WHEN [SOURCE].GOL = 'GOL_01' THEN '1'
			WHEN [SOURCE].GOL = 'GOL_02' AND [SOURCE].BUCKET = '02_XDY' THEN '2A'
			WHEN [SOURCE].GOL = 'GOL_02' AND [SOURCE].BUCKET = '03_D30' THEN '2B'
			WHEN [SOURCE].GOL = 'GOL_02' AND [SOURCE].BUCKET = '04_D60' THEN '2C'
			WHEN [SOURCE].GOL = 'GOL_03' AND
				(CASE WHEN RIGHT([SOURCE].FILE_DATE, 2) < CYCLE THEN RIGHT([SOURCE].FILE_DATE, 2) + DATEPART(day, EOMONTH(DATEADD(MONTH, -1, [SOURCE].FILE_DATE))) ELSE RIGHT([SOURCE].FILE_DATE, 2) END) - [SOURCE].CYCLE <= 10 THEN '3A'
			WHEN [SOURCE].GOL = 'GOL_03' AND
				(CASE WHEN RIGHT([SOURCE].FILE_DATE, 2) < CYCLE THEN RIGHT([SOURCE].FILE_DATE, 2) + DATEPART(day, EOMONTH(DATEADD(MONTH, -1, [SOURCE].FILE_DATE))) ELSE RIGHT([SOURCE].FILE_DATE, 2) END) - [SOURCE].CYCLE <= 20 THEN '3B'
			WHEN [SOURCE].GOL = 'GOL_03' AND
				(CASE WHEN RIGHT([SOURCE].FILE_DATE, 2) < CYCLE THEN RIGHT([SOURCE].FILE_DATE, 2) + DATEPART(day, EOMONTH(DATEADD(MONTH, -1, [SOURCE].FILE_DATE))) ELSE RIGHT([SOURCE].FILE_DATE, 2) END) - [SOURCE].CYCLE > 20 THEN '3C'
			WHEN [SOURCE].GOL = 'GOL_04' AND [SOURCE].BUCKET = '06_120' THEN '4A'
			WHEN [SOURCE].GOL = 'GOL_04' AND
				(CASE WHEN RIGHT([SOURCE].FILE_DATE, 2) < CYCLE THEN RIGHT([SOURCE].FILE_DATE, 2) + DATEPART(day, EOMONTH(DATEADD(MONTH, -1, [SOURCE].FILE_DATE))) ELSE RIGHT([SOURCE].FILE_DATE, 2) END) - [SOURCE].CYCLE <= 15 THEN '4B'
			WHEN [SOURCE].GOL = 'GOL_04' AND
				(CASE WHEN RIGHT([SOURCE].FILE_DATE, 2) < CYCLE THEN RIGHT([SOURCE].FILE_DATE, 2) + DATEPART(day, EOMONTH(DATEADD(MONTH, -1, [SOURCE].FILE_DATE))) ELSE RIGHT([SOURCE].FILE_DATE, 2) END) - [SOURCE].CYCLE > 15 THEN '4C'
			WHEN [SOURCE].GOL = 'GOL_05' THEN '5'
			ELSE CONCAT(RIGHT([SOURCE].GOL, 1), 'A')
		END
	,CASE
			WHEN [SOURCE].GOL = 'GOL_01' THEN '1'
			WHEN [SOURCE].GOL = 'GOL_02' AND [SOURCE].BUCKET = '02_XDY' THEN '2A'
			WHEN [SOURCE].GOL = 'GOL_02' AND [SOURCE].BUCKET = '03_D30' THEN '2B'
			WHEN [SOURCE].GOL = 'GOL_02' AND [SOURCE].BUCKET = '04_D60' THEN '2C'
			WHEN [SOURCE].GOL = 'GOL_03' AND
				(CASE WHEN RIGHT([SOURCE].FILE_DATE, 2) < CYCLE THEN RIGHT([SOURCE].FILE_DATE, 2) + DATEPART(day, EOMONTH(DATEADD(MONTH, -1, [SOURCE].FILE_DATE))) ELSE RIGHT([SOURCE].FILE_DATE, 2) END) - [SOURCE].CYCLE <= 10 THEN '3A'
			WHEN [SOURCE].GOL = 'GOL_03' AND
				(CASE WHEN RIGHT([SOURCE].FILE_DATE, 2) < CYCLE THEN RIGHT([SOURCE].FILE_DATE, 2) + DATEPART(day, EOMONTH(DATEADD(MONTH, -1, [SOURCE].FILE_DATE))) ELSE RIGHT([SOURCE].FILE_DATE, 2) END) - [SOURCE].CYCLE <= 20 THEN '3B'
			WHEN [SOURCE].GOL = 'GOL_03' AND
				(CASE WHEN RIGHT([SOURCE].FILE_DATE, 2) < CYCLE THEN RIGHT([SOURCE].FILE_DATE, 2) + DATEPART(day, EOMONTH(DATEADD(MONTH, -1, [SOURCE].FILE_DATE))) ELSE RIGHT([SOURCE].FILE_DATE, 2) END) - [SOURCE].CYCLE > 20 THEN '3C'
			WHEN [SOURCE].GOL = 'GOL_04' AND [SOURCE].BUCKET = '06_120' THEN '4A'
			WHEN [SOURCE].GOL = 'GOL_04' AND
				(CASE WHEN RIGHT([SOURCE].FILE_DATE, 2) < CYCLE THEN RIGHT([SOURCE].FILE_DATE, 2) + DATEPART(day, EOMONTH(DATEADD(MONTH, -1, [SOURCE].FILE_DATE))) ELSE RIGHT([SOURCE].FILE_DATE, 2) END) - [SOURCE].CYCLE <= 15 THEN '4B'
			WHEN [SOURCE].GOL = 'GOL_04' AND
				(CASE WHEN RIGHT([SOURCE].FILE_DATE, 2) < CYCLE THEN RIGHT([SOURCE].FILE_DATE, 2) + DATEPART(day, EOMONTH(DATEADD(MONTH, -1, [SOURCE].FILE_DATE))) ELSE RIGHT([SOURCE].FILE_DATE, 2) END) - [SOURCE].CYCLE > 15 THEN '4C'
			WHEN [SOURCE].GOL = 'GOL_05' THEN '5'
			ELSE CONCAT(RIGHT([SOURCE].GOL, 1), 'A')
		END
	,COALESCE(TRY_CAST([SOURCE].rtlpribal AS DECIMAL(20,2)), 0.00) + COALESCE(TRY_CAST([SOURCE].cshpribal AS DECIMAL(20,2)), 0.00)
	,COALESCE(TRY_CAST([SOURCE].rtlfeesvc AS DECIMAL(20,2)), 0.00) + COALESCE(TRY_CAST([SOURCE].cshfeesvc AS DECIMAL(20,2)), 0.00)
);

MERGE INTO [NEW_BSI_DEV].[dbo].[PORTOFOLIO.ONBS.CURRENT] [TARGET]
USING [NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_ONBS.SOURCE.BSM.LOAN_DAILY] [SOURCE]
	ON [SOURCE].[NOLOAN] = [TARGET].[NOLOAN]
	AND [SOURCE].[NOMORCIF] = [TARGET].[NOMORCIF]
	AND [TARGET].[LEGACY] = 'BSM'
WHEN MATCHED THEN UPDATE
SET
	TGL_CURRENT = COALESCE([SOURCE].[FICMISDATE], [TARGET].TGL_CURRENT)
	,JENISPIUTANGPEMBIAYAAN = COALESCE([SOURCE].[JENISPIUTANGPEMBIAYAAN], [TARGET].JENISPIUTANGPEMBIAYAAN)
	,DPD = COALESCE([SOURCE].[DAYPASTDUE], [TARGET].DPD)
	,KOL_LOAN = COALESCE([SOURCE].[KOLBSM], [TARGET].KOL_LOAN)
	,KOL_CIF = COALESCE([SOURCE].[KOLCIF], [TARGET].KOL_CIF)
	,OS_POKOK_CURRENT = COALESCE([SOURCE].[OSPOKOKCONVERSION], [TARGET].OS_POKOK_CURRENT)
	,OS_MARGIN_CURRENT = COALESCE([SOURCE].[OSMARGINCONVERSION], [TARGET].OS_MARGIN_CURRENT)
	,RBH_CURRENT = COALESCE([SOURCE].[REALISASI_BAGIHASIL], [TARGET].RBH_CURRENT)
	,PBH_CURRENT = COALESCE([SOURCE].[PROYEKSI_BAGIHASIL], [TARGET].PBH_CURRENT)
WHEN NOT MATCHED BY TARGET THEN INSERT
(
	TGL_CURRENT
	,LEGACY
	,NOLOAN
	,NOMORCIF
	,JENISPIUTANGPEMBIAYAAN
	,DPD
	,KOL_LOAN
	,KOL_CIF
	,OS_POKOK_CURRENT
	,OS_MARGIN_CURRENT
	,RBH_CURRENT
	,PBH_CURRENT
)
VALUES
(
	[SOURCE].[FICMISDATE]
	,'BSM'
	,[SOURCE].NOLOAN
	,[SOURCE].NOMORCIF
	,[SOURCE].JENISPIUTANGPEMBIAYAAN
	,[SOURCE].[DAYPASTDUE]
	,[SOURCE].[KOLBSM]
	,[SOURCE].[KOLCIF]
	,[SOURCE].[OSPOKOKCONVERSION]
	,[SOURCE].[OSMARGINCONVERSION]
	,[SOURCE].[REALISASI_BAGIHASIL]
	,[SOURCE].[PROYEKSI_BAGIHASIL]
);

MERGE INTO [NEW_BSI_DEV].[dbo].[PORTOFOLIO.ONBS.CURRENT] [TARGET]
USING
	(
		SELECT
			*
		FROM [NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_ONBS.SOURCE.BSM.IFOS_JFAST]
		WHERE TRY_CAST(FICMISDATE AS DATE) IS NOT NULL
	) [SOURCE]
	ON [SOURCE].[NOLOAN] = [TARGET].[NOLOAN]
	AND [SOURCE].[NOMORCIF] = [TARGET].[NOMORCIF]
	AND [TARGET].[LEGACY] = 'BSM'
WHEN MATCHED THEN UPDATE
SET
	TGL_CURRENT = COALESCE([SOURCE].[FICMISDATE], [TARGET].TGL_CURRENT)
	,JENISPIUTANGPEMBIAYAAN = COALESCE([SOURCE].[JENISPIUTANGPEMBIAYAAN], [TARGET].JENISPIUTANGPEMBIAYAAN)
	,DPD = COALESCE([SOURCE].[DAYPASTDUE], [TARGET].DPD)
	,KOL_LOAN = COALESCE([SOURCE].[KOLBSM], [TARGET].KOL_LOAN)
	,KOL_CIF = COALESCE([SOURCE].[KOLCIF], [TARGET].KOL_CIF)
	,OS_POKOK_CURRENT = COALESCE([SOURCE].[OSPOKOKCONVERSION], [TARGET].OS_POKOK_CURRENT)
	,OS_MARGIN_CURRENT = COALESCE([SOURCE].[OSMARGINCONVERSION], [TARGET].OS_MARGIN_CURRENT)
	,RBH_CURRENT = COALESCE([SOURCE].[REALISASI_BAGIHASIL], [TARGET].RBH_CURRENT)
	,PBH_CURRENT = COALESCE([SOURCE].[PROYEKSI_BAGIHASIL], [TARGET].PBH_CURRENT)
WHEN NOT MATCHED BY TARGET THEN INSERT
(
	TGL_CURRENT
	,LEGACY
	,NOLOAN
	,NOMORCIF
	,JENISPIUTANGPEMBIAYAAN
	,DPD
	,KOL_LOAN
	,KOL_CIF
	,OS_POKOK_CURRENT
	,OS_MARGIN_CURRENT
	,RBH_CURRENT
	,PBH_CURRENT
)
VALUES
(
	[SOURCE].[FICMISDATE]
	,'BSM'
	,[SOURCE].NOLOAN
	,[SOURCE].NOMORCIF
	,[SOURCE].JENISPIUTANGPEMBIAYAAN
	,[SOURCE].[DAYPASTDUE]
	,[SOURCE].[KOLBSM]
	,[SOURCE].[KOLCIF]
	,[SOURCE].[OSPOKOKCONVERSION]
	,[SOURCE].[OSMARGINCONVERSION]
	,[SOURCE].[REALISASI_BAGIHASIL]
	,[SOURCE].[PROYEKSI_BAGIHASIL]
);

MERGE INTO [NEW_BSI_DEV].[dbo].[PORTOFOLIO.ONBS.CURRENT] [TARGET]
USING [NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_ONBS.SOURCE.EDA.LOAN_DAILY] [SOURCE]
	ON [SOURCE].[noRekening] = [TARGET].[NOLOAN]
	AND [SOURCE].[noCIF_Legacy] = [TARGET].[NOMORCIF]
WHEN MATCHED AND [SOURCE].[periodeData] >= [TARGET].[TGL_CURRENT] THEN UPDATE
SET
	TGL_CURRENT = COALESCE([SOURCE].[periodeData], [TARGET].TGL_CURRENT)
	,JENISPIUTANGPEMBIAYAAN = COALESCE([SOURCE].[akad], [TARGET].JENISPIUTANGPEMBIAYAAN)
	,DPD = COALESCE([SOURCE].[tunggakanHari], [TARGET].DPD)
	,KOL_LOAN = COALESCE([SOURCE].[kol_rek], [TARGET].KOL_LOAN)
	,KOL_CIF = COALESCE([SOURCE].[kolektibilitas], [TARGET].KOL_CIF)
	,OS_POKOK_CURRENT = COALESCE([SOURCE].[sisaPokok], [TARGET].OS_POKOK_CURRENT)
	,OS_MARGIN_CURRENT = COALESCE([SOURCE].[sisaMargin], [TARGET].OS_MARGIN_CURRENT)
	,RBH_CURRENT = COALESCE([SOURCE].[realisasiBagiHasil], [TARGET].RBH_CURRENT)
	,PBH_CURRENT = COALESCE([SOURCE].[proyeksiBagiHasil], [TARGET].PBH_CURRENT)
WHEN NOT MATCHED BY TARGET THEN INSERT
(
	TGL_CURRENT
	,LEGACY
	,NOLOAN
	,NOMORCIF
	,JENISPIUTANGPEMBIAYAAN
	,DPD
	,KOL_LOAN
	,KOL_CIF
	,OS_POKOK_CURRENT
	,OS_MARGIN_CURRENT
	,RBH_CURRENT
	,PBH_CURRENT
)
VALUES
(
	[SOURCE].[periodeData]
	,'BSM'
	,[SOURCE].noRekening
	,[SOURCE].noCIF_Legacy
	,[SOURCE].akad
	,[SOURCE].[tunggakanHari]
	,[SOURCE].[kol_rek]
	,[SOURCE].[kolektibilitas]
	,[SOURCE].[sisaPokok]
	,[SOURCE].[sisaMargin]
	,[SOURCE].[realisasiBagiHasil]
	,[SOURCE].[proyeksiBagiHasil]
);

MERGE INTO [NEW_BSI_DEV].[dbo].[PORTOFOLIO.ONBS.CURRENT] [TARGET]
USING [NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_ONBS.DATABASE.BNIS.PORTOFOLIO_LAST_MONTH] [SOURCE]
	ON [SOURCE].[(SOURCE) NOLOAN_CURRENT] = [TARGET].[NOLOAN]
	AND LEFT([SOURCE].[(SOURCE) NOMORCIF_CURRENT], 15) = [TARGET].[NOMORCIF]
	AND [TARGET].[LEGACY] = 'BNIS'
WHEN NOT MATCHED BY TARGET THEN INSERT
(
	LEGACY
	,NOLOAN
	,NOMORCIF
	,JENISPIUTANGPEMBIAYAAN
)
VALUES
(
	'BNIS'
	,[SOURCE].[(SOURCE) NOLOAN_CURRENT]
	,LEFT([SOURCE].[(SOURCE) NOMORCIF_CURRENT], 15)
	,[SOURCE].[(SOURCE) JENISPIUTANGPEMBIAYAAN]
);

MERGE INTO [NEW_BSI_DEV].[dbo].[PORTOFOLIO.ONBS.CURRENT] [TARGET]
USING [NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_ONBS.DATABASE.BSM.PORTOFOLIO_LAST_MONTH] [SOURCE]
	ON [SOURCE].[(SOURCE) NOLOAN_CURRENT] = [TARGET].[NOLOAN]
	AND [SOURCE].[(SOURCE) NOMORCIF_CURRENT] = [TARGET].[NOMORCIF]
	AND [TARGET].[LEGACY] = 'BSM'
WHEN NOT MATCHED BY TARGET THEN INSERT
(
	LEGACY
	,NOLOAN
	,NOMORCIF
	,JENISPIUTANGPEMBIAYAAN
)
VALUES
(
	'BSM'
	,[SOURCE].[(SOURCE) NOLOAN_CURRENT]
	,[SOURCE].[(SOURCE) NOMORCIF_CURRENT]
	,[SOURCE].[(SOURCE) JENISPIUTANGPEMBIAYAAN]
);

DECLARE @PERIODE_DATA DATE = (SELECT MAX(TGL_CURRENT) FROM [NEW_BSI_DEV].[dbo].[PORTOFOLIO.ONBS.CURRENT])

MERGE INTO [NEW_BSI_DEV].[dbo].[PORTOFOLIO.ONBS.CURRENT] [TARGET]
USING
	(
		SELECT
			*
		FROM [NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_ONBS.COMPILE.JOIN.REKAP_NOLOAN.TGL_AKTIF]
		WHERE TGL_AKTIF_AKHIR >= CONCAT(LEFT(@PERIODE_DATA, 8), '01')
		AND TGL_AKTIF_AWAL <= @PERIODE_DATA
	) [SOURCE]
	ON [SOURCE].[NOLOAN] = [TARGET].[NOLOAN]
	AND LEFT([SOURCE].[NOMORCIF], 15) = [TARGET].[NOMORCIF]
	AND [SOURCE].[LEGACY] = [TARGET].[LEGACY]
WHEN NOT MATCHED BY TARGET THEN INSERT
(
	LEGACY
	,NOLOAN
	,NOMORCIF
)
VALUES
(
	[SOURCE].[LEGACY]
	,[SOURCE].[NOLOAN]
	,LEFT([SOURCE].[NOMORCIF], 15)
);
