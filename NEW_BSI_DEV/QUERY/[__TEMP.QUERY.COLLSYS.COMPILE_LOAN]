----------------------------------------------------------------------------------------------------------------

MERGE [COLLSYS.MAPPING.LOAN] [TARGET]
USING
	(
		SELECT
			'MCS' AS [SOURCE]
			,[Agreement No] AS NOLOAN
			,[NEW_BSI_COLLECTION].[dbo].[fx_cleanse_noloan]('MCS', [Agreement No]) AS NOLOAN_CLEANSE
		FROM [NEW_BSI_COLLECTION].[dbo].[COLLSYS.REPORT.MCS.COMPILE]
		GROUP BY
			[Agreement No]
	) [SOURCE]
	ON [SOURCE].[SOURCE] = [TARGET].[SOURCE]
	AND COALESCE([SOURCE].[NOLOAN], 'X') = COALESCE([TARGET].NOLOAN, 'X')
WHEN NOT MATCHED BY TARGET THEN INSERT
(
	SOURCE
	,NOLOAN
	,NOLOAN_CLEANSE
)
VALUES
(
	[SOURCE].SOURCE
	,[SOURCE].NOLOAN
	,[SOURCE].NOLOAN_CLEANSE
);

----------------------------------------------------------------------------------------------------------------

MERGE [COLLSYS.MAPPING.LOAN] [TARGET]
USING
	(
		SELECT
			'DMS FIELD' AS [SOURCE]
			,[Nomor Loan] AS NOLOAN
			,[NEW_BSI_COLLECTION].[dbo].[fx_cleanse_noloan]('DMS', [Nomor Loan]) AS NOLOAN_CLEANSE
		FROM [NEW_BSI_COLLECTION].[dbo].[COLLSYS.REPORT.DMS_FIELD.COMPILE]
		GROUP BY
			[Nomor Loan]
	) [SOURCE]
	ON [SOURCE].[SOURCE] = [TARGET].[SOURCE]
	AND COALESCE([SOURCE].[NOLOAN], 'X') = COALESCE([TARGET].NOLOAN, 'X')
WHEN NOT MATCHED BY TARGET THEN INSERT
(
	SOURCE
	,NOLOAN
	,NOLOAN_CLEANSE
)
VALUES
(
	[SOURCE].SOURCE
	,[SOURCE].NOLOAN
	,[SOURCE].NOLOAN_CLEANSE
);

----------------------------------------------------------------------------------------------------------------

MERGE [COLLSYS.MAPPING.LOAN] [TARGET]
USING
	(
		SELECT
			'DMS TELE' AS [SOURCE]
			,[Nomor Loan] AS NOLOAN
			,[NEW_BSI_COLLECTION].[dbo].[fx_cleanse_noloan]('DMS', [Nomor Loan]) AS NOLOAN_CLEANSE
		FROM [NEW_BSI_COLLECTION].[dbo].[COLLSYS.REPORT.DMS_TELE.COMPILE]
		GROUP BY
			[Nomor Loan]
	) [SOURCE]
	ON [SOURCE].[SOURCE] = [TARGET].[SOURCE]
	AND COALESCE([SOURCE].[NOLOAN], 'X') = COALESCE([TARGET].NOLOAN, 'X')
WHEN NOT MATCHED BY TARGET THEN INSERT
(
	SOURCE
	,NOLOAN
	,NOLOAN_CLEANSE
)
VALUES
(
	[SOURCE].SOURCE
	,[SOURCE].NOLOAN
	,[SOURCE].NOLOAN_CLEANSE
);

----------------------------------------------------------------------------------------------------------------

MERGE [COLLSYS.MAPPING.LOAN] [TARGET]
USING
	(
		SELECT
			'GOOGLE FORM' AS [SOURCE]
			,[Nomor Loan nasabah Sesuai Data Sistem] AS NOLOAN
			,[NEW_BSI_COLLECTION].[dbo].[fx_cleanse_noloan]('GOOGLE FORM', [Nomor Loan nasabah Sesuai Data Sistem]) AS NOLOAN_CLEANSE
		FROM [NEW_BSI_COLLECTION].[dbo].[COLLSYS.REPORT.GF.COMPILE]
		GROUP BY
			[Nomor Loan nasabah Sesuai Data Sistem]
	) [SOURCE]
	ON [SOURCE].[SOURCE] = [TARGET].[SOURCE]
	AND COALESCE([SOURCE].[NOLOAN], 'X') = COALESCE([TARGET].NOLOAN, 'X')
WHEN NOT MATCHED BY TARGET THEN INSERT
(
	SOURCE
	,NOLOAN
	,NOLOAN_CLEANSE
)
VALUES
(
	[SOURCE].SOURCE
	,[SOURCE].NOLOAN
	,[SOURCE].NOLOAN_CLEANSE
);

----------------------------------------------------------------------------------------------------------------

MERGE [COLLSYS.MAPPING.LOAN] [TARGET]
USING
	(
		SELECT
			'PDS' AS [SOURCE]
			,[Nomor Loan] AS NOLOAN
			,[NEW_BSI_COLLECTION].[dbo].[fx_cleanse_noloan]('PDS', [Nomor Loan]) AS NOLOAN_CLEANSE
		FROM [NEW_BSI_COLLECTION].[dbo].[COLLSYS.REPORT.PDS.COMPILE]
		GROUP BY
			[Nomor Loan]
	) [SOURCE]
	ON [SOURCE].[SOURCE] = [TARGET].[SOURCE]
	AND COALESCE([SOURCE].[NOLOAN], 'X') = COALESCE([TARGET].NOLOAN, 'X')
WHEN NOT MATCHED BY TARGET THEN INSERT
(
	SOURCE
	,NOLOAN
	,NOLOAN_CLEANSE
)
VALUES
(
	[SOURCE].SOURCE
	,[SOURCE].NOLOAN
	,[SOURCE].NOLOAN_CLEANSE
);

----------------------------------------------------------------------------------------------------------------

MERGE [COLLSYS.MAPPING.LOAN] [TARGET]
USING
	(
		SELECT
			'SMS BLAST' AS [SOURCE]
			,[(SOURCE) NOLOAN_CURRENT] AS NOLOAN
			,[NEW_BSI_COLLECTION].[dbo].[fx_cleanse_noloan]('GF', [(SOURCE) NOLOAN_CURRENT]) AS NOLOAN_CLEANSE
		FROM [NEW_BSI_COLLECTION].[dbo].[COLLSYS.REPORT.SMS_BLAST.COMPILE]
		GROUP BY
			[(SOURCE) NOLOAN_CURRENT]
	) [SOURCE]
	ON [SOURCE].[SOURCE] = [TARGET].[SOURCE]
	AND COALESCE([SOURCE].[NOLOAN], 'X') = COALESCE([TARGET].NOLOAN, 'X')
WHEN NOT MATCHED BY TARGET THEN INSERT
(
	SOURCE
	,NOLOAN
	,NOLOAN_CLEANSE
)
VALUES
(
	[SOURCE].SOURCE
	,[SOURCE].NOLOAN
	,[SOURCE].NOLOAN_CLEANSE
);

----------------------------------------------------------------------------------------------------------------

MERGE [COLLSYS.MAPPING.LOAN] [TARGET]
USING
	(
		SELECT
			'VOICE BLAST' AS [SOURCE]
			,[NOLOAN] AS NOLOAN
			,[NEW_BSI_COLLECTION].[dbo].[fx_cleanse_noloan]('GF', [NOLOAN]) AS NOLOAN_CLEANSE
		FROM [NEW_BSI_COLLECTION].[dbo].[COLLSYS.REPORT.VOICE_BLAST.COMPILE]
		GROUP BY
			[NOLOAN]
	) [SOURCE]
	ON [SOURCE].[SOURCE] = [TARGET].[SOURCE]
	AND COALESCE([SOURCE].[NOLOAN], 'X') = COALESCE([TARGET].NOLOAN, 'X')
WHEN NOT MATCHED BY TARGET THEN INSERT
(
	SOURCE
	,NOLOAN
	,NOLOAN_CLEANSE
)
VALUES
(
	[SOURCE].SOURCE
	,[SOURCE].NOLOAN
	,[SOURCE].NOLOAN_CLEANSE
);

----------------------------------------------------------------------------------------------------------------

MERGE [COLLSYS.MAPPING.LOAN] [TARGET]
USING
	(
		SELECT
			'WA BLAST' AS [SOURCE]
			,[(SOURCE) NOLOAN_CURRENT] AS NOLOAN
			,[NEW_BSI_COLLECTION].[dbo].[fx_cleanse_noloan]('GF', [(SOURCE) NOLOAN_CURRENT]) AS NOLOAN_CLEANSE
		FROM [NEW_BSI_COLLECTION].[dbo].[COLLSYS.REPORT.WA_BLAST.COMPILE]
		GROUP BY
			[(SOURCE) NOLOAN_CURRENT]
	) [SOURCE]
	ON [SOURCE].[SOURCE] = [TARGET].[SOURCE]
	AND COALESCE([SOURCE].[NOLOAN], 'X') = COALESCE([TARGET].NOLOAN, 'X')
WHEN NOT MATCHED BY TARGET THEN INSERT
(
	SOURCE
	,NOLOAN
	,NOLOAN_CLEANSE
)
VALUES
(
	[SOURCE].SOURCE
	,[SOURCE].NOLOAN
	,[SOURCE].NOLOAN_CLEANSE
);

----------------------------------------------------------------------------------------------------------------

UPDATE [COLLSYS.MAPPING.LOAN]
SET
	NOLOAN_FINAL = [HC].NOLOAN
	,NOMORCIF = COALESCE(SOURCE.NOMORCIF, [HC].CIF)
	,TGL_AKTIF_AKHIR = COALESCE(SOURCE.TGL_AKTIF_AKHIR, [HC].[Tgl Current])
	,KODECABANG_BSI = 'ID0010001'
	,UPDATE_STATUS = 'LOCKED'
FROM [COLLSYS.MAPPING.LOAN] [SOURCE]
LEFT JOIN 
	(
		SELECT
			CARDNO_REAL AS [NOLOAN_REAL]
			,CARDNO AS NOLOAN
			,CUSTNO AS CIF
			,FILE_DATE AS [Tgl Current]
		FROM
		[NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_ONBS.SOURCE.BNIS.HASANAH_CARD]
		WHERE TRY_CAST(CURRBAL AS DECIMAL(32, 2)) > 0.00
		AND (PB IN ('B', 'C', 'D', 'E', 'F', 'H', 'J', 'L', 'M', 'N', 'P', 'Q', 'T', 'U', 'W', 'Y', 'Z') OR PB IS NULL)
		AND POSTFLG IN ('PP', 'SP')
	) [HC]
	ON [SOURCE].NOLOAN_CLEANSE = [HC].[NOLOAN_REAL]
WHERE [HC].NOLOAN IS NOT NULL
AND COALESCE([SOURCE].[UPDATE_STATUS], 'X') NOT IN ('LOCKED', 'INVALID FORMAT', 'MULTIPLE LOANS')
AND ([SOURCE].NOLOAN_FINAL IS NULL OR [SOURCE].NOLOAN = [SOURCE].NOLOAN_FINAL)
AND LEN([SOURCE].NOLOAN) = 16;

----------------------------------------------------------------------------------------------------------------

UPDATE [COLLSYS.MAPPING.LOAN]
SET
	NOLOAN_FINAL = [WO].NOLOAN
	,NOMORCIF = COALESCE(SOURCE.NOMORCIF, [WO].CIF)
	,TGL_AKTIF_AKHIR = COALESCE(SOURCE.TGL_AKTIF_AKHIR, [WO].[Tgl Current])
	,KODECABANG_BSI = COALESCE(SOURCE.KODECABANG_BSI, [WO].[Kode Outlet BSI])
	,UPDATE_STATUS = 'LOCKED'
FROM [COLLSYS.MAPPING.LOAN] [SOURCE]
LEFT JOIN 
	(
		SELECT
			[NEW_BSI_COLLECTION].dbo.fx_cleanse_noloan('MCS', [NOLOAN]) AS [Loan ON BS iBSM]
			,NOLOAN
			,CIF
			,[Tgl Current]
			,[Kode Outlet BSI]
		FROM
		[NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_WO.GENERATED.JOIN.WO_CURRENT]
	) [WO]
	ON [SOURCE].NOLOAN_CLEANSE = [WO].[Loan ON BS iBSM]
WHERE [WO].NOLOAN IS NOT NULL
AND COALESCE([SOURCE].[UPDATE_STATUS], 'X') NOT IN ('LOCKED', 'INVALID FORMAT', 'MULTIPLE LOANS')
AND ([SOURCE].NOLOAN_FINAL IS NULL OR [SOURCE].NOLOAN = [SOURCE].NOLOAN_FINAL)
AND [SOURCE].SOURCE IN ('MCS');

UPDATE [COLLSYS.MAPPING.LOAN]
SET
	NOLOAN_FINAL = [WO].NOLOAN
	,NOMORCIF = COALESCE(SOURCE.NOMORCIF, [WO].CIF)
	,TGL_AKTIF_AKHIR = COALESCE(SOURCE.TGL_AKTIF_AKHIR, [WO].[Tgl Current])
	,KODECABANG_BSI = COALESCE(SOURCE.KODECABANG_BSI, [WO].[Kode Outlet BSI])
	,UPDATE_STATUS = 'LOCKED'
FROM [COLLSYS.MAPPING.LOAN] [SOURCE]
LEFT JOIN 
	(
		SELECT
			[NEW_BSI_COLLECTION].dbo.fx_cleanse_noloan('DMS', [NOLOAN]) AS [Loan ON BS iBSM]
			,NOLOAN
			,CIF
			,[Tgl Current]
			,[Kode Outlet BSI]
		FROM
		[NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_WO.GENERATED.JOIN.WO_CURRENT]
	) [WO]
	ON [SOURCE].NOLOAN_CLEANSE = [WO].[Loan ON BS iBSM]
WHERE [WO].NOLOAN IS NOT NULL
AND COALESCE([SOURCE].[UPDATE_STATUS], 'X') NOT IN ('LOCKED', 'INVALID FORMAT', 'MULTIPLE LOANS')
AND ([SOURCE].NOLOAN_FINAL IS NULL OR [SOURCE].NOLOAN = [SOURCE].NOLOAN_FINAL)
AND [SOURCE].SOURCE IN ('DMS FIELD');

UPDATE [COLLSYS.MAPPING.LOAN]
SET
	NOLOAN_FINAL = [WO].NOLOAN
	,NOMORCIF = COALESCE(SOURCE.NOMORCIF, [WO].CIF)
	,TGL_AKTIF_AKHIR = COALESCE(SOURCE.TGL_AKTIF_AKHIR, [WO].[Tgl Current])
	,KODECABANG_BSI = COALESCE(SOURCE.KODECABANG_BSI, [WO].[Kode Outlet BSI])
	,UPDATE_STATUS = 'LOCKED'
FROM [COLLSYS.MAPPING.LOAN] [SOURCE]
LEFT JOIN 
	(
		SELECT
			[NEW_BSI_COLLECTION].dbo.fx_cleanse_noloan('DMS', [NOLOAN]) AS [Loan ON BS iBSM]
			,NOLOAN
			,CIF
			,[Tgl Current]
			,[Kode Outlet BSI]
		FROM
		[NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_WO.GENERATED.JOIN.WO_CURRENT]
	) [WO]
	ON [SOURCE].NOLOAN_CLEANSE = [WO].[Loan ON BS iBSM]
WHERE [WO].NOLOAN IS NOT NULL
AND COALESCE([SOURCE].[UPDATE_STATUS], 'X') NOT IN ('LOCKED', 'INVALID FORMAT', 'MULTIPLE LOANS')
AND ([SOURCE].NOLOAN_FINAL IS NULL OR [SOURCE].NOLOAN = [SOURCE].NOLOAN_FINAL)
AND [SOURCE].SOURCE IN ('DMS TELE');

UPDATE [COLLSYS.MAPPING.LOAN]
SET
	NOLOAN_FINAL = [WO].NOLOAN
	,NOMORCIF = COALESCE(SOURCE.NOMORCIF, [WO].CIF)
	,TGL_AKTIF_AKHIR = COALESCE(SOURCE.TGL_AKTIF_AKHIR, [WO].[Tgl Current])
	,KODECABANG_BSI = COALESCE(SOURCE.KODECABANG_BSI, [WO].[Kode Outlet BSI])
	,UPDATE_STATUS = 'LOCKED'
FROM [COLLSYS.MAPPING.LOAN] [SOURCE]
LEFT JOIN 
	(
		SELECT
			[NEW_BSI_COLLECTION].dbo.fx_cleanse_noloan('PDS', [NOLOAN]) AS [Loan ON BS iBSM]
			,NOLOAN
			,CIF
			,[Tgl Current]
			,[Kode Outlet BSI]
		FROM
		[NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_WO.GENERATED.JOIN.WO_CURRENT]
	) [WO]
	ON [SOURCE].NOLOAN_CLEANSE = [WO].[Loan ON BS iBSM]
WHERE [WO].NOLOAN IS NOT NULL
AND COALESCE([SOURCE].[UPDATE_STATUS], 'X') NOT IN ('LOCKED', 'INVALID FORMAT', 'MULTIPLE LOANS')
AND ([SOURCE].NOLOAN_FINAL IS NULL OR [SOURCE].NOLOAN = [SOURCE].NOLOAN_FINAL)
AND [SOURCE].SOURCE IN ('PDS');

UPDATE [COLLSYS.MAPPING.LOAN]
SET
	NOLOAN_FINAL = [WO].NOLOAN
	,NOMORCIF = COALESCE(SOURCE.NOMORCIF, [WO].CIF)
	,TGL_AKTIF_AKHIR = COALESCE(SOURCE.TGL_AKTIF_AKHIR, [WO].[Tgl Current])
	,KODECABANG_BSI = COALESCE(SOURCE.KODECABANG_BSI, [WO].[Kode Outlet BSI])
	,UPDATE_STATUS = 'LOCKED'
FROM [COLLSYS.MAPPING.LOAN] [SOURCE]
LEFT JOIN 
	(
		SELECT
			[NEW_BSI_COLLECTION].dbo.fx_cleanse_noloan('GOOGLE FORM', [NOLOAN]) AS [Loan ON BS iBSM]
			,NOLOAN
			,CIF
			,[Tgl Current]
			,[Kode Outlet BSI]
		FROM
		[NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_WO.GENERATED.JOIN.WO_CURRENT]
	) [WO]
	ON [SOURCE].NOLOAN_CLEANSE = [WO].[Loan ON BS iBSM]
WHERE [WO].NOLOAN IS NOT NULL
AND COALESCE([SOURCE].[UPDATE_STATUS], 'X') NOT IN ('LOCKED', 'INVALID FORMAT', 'MULTIPLE LOANS')
AND ([SOURCE].NOLOAN_FINAL IS NULL OR [SOURCE].NOLOAN = [SOURCE].NOLOAN_FINAL)
AND [SOURCE].SOURCE IN ('GOOGLE FORM');

UPDATE [COLLSYS.MAPPING.LOAN]
SET
	NOLOAN_FINAL = [WO].NOLOAN
	,NOMORCIF = COALESCE(SOURCE.NOMORCIF, [WO].CIF)
	,TGL_AKTIF_AKHIR = COALESCE(SOURCE.TGL_AKTIF_AKHIR, [WO].[Tgl Current])
	,KODECABANG_BSI = COALESCE(SOURCE.KODECABANG_BSI, [WO].[Kode Outlet BSI])
	,UPDATE_STATUS = 'LOCKED'
FROM [COLLSYS.MAPPING.LOAN] [SOURCE]
LEFT JOIN 
	(
		SELECT
			[NEW_BSI_COLLECTION].dbo.fx_cleanse_noloan('GOOGLE FORM', [NOLOAN]) AS [Loan ON BS iBSM]
			,NOLOAN
			,CIF
			,[Tgl Current]
			,[Kode Outlet BSI]
		FROM
		[NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_WO.GENERATED.JOIN.WO_CURRENT]
	) [WO]
	ON [SOURCE].NOLOAN_CLEANSE = [WO].[Loan ON BS iBSM]
WHERE [WO].NOLOAN IS NOT NULL
AND COALESCE([SOURCE].[UPDATE_STATUS], 'X') NOT IN ('LOCKED', 'INVALID FORMAT', 'MULTIPLE LOANS')
AND ([SOURCE].NOLOAN_FINAL IS NULL OR [SOURCE].NOLOAN = [SOURCE].NOLOAN_FINAL)
AND [SOURCE].SOURCE IN ('SMS BLAST', 'VOICE BLAST', 'WA BLAST');

----------------------------------------------------------------------------------------------------------------

UPDATE [COLLSYS.MAPPING.LOAN]
SET
	NOLOAN_FINAL = [WO].NOLOAN
	,NOMORCIF = COALESCE(SOURCE.NOMORCIF, [WO].CIF)
	,TGL_AKTIF_AKHIR = COALESCE(SOURCE.TGL_AKTIF_AKHIR, [WO].[Tgl Current])
	,KODECABANG_BSI = COALESCE(SOURCE.KODECABANG_BSI, [WO].[Kode Outlet BSI])
	,UPDATE_STATUS = 'LOCKED'
FROM [COLLSYS.MAPPING.LOAN] [SOURCE]
LEFT JOIN 
	(
		SELECT
			[NEW_BSI_COLLECTION].dbo.fx_cleanse_noloan('MCS', [Loan ON BS iBSM]) AS [Loan ON BS iBSM]
			,NOLOAN
			,CIF
			,[Tgl Current]
			,[Kode Outlet BSI]
		FROM
		[NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_WO.GENERATED.JOIN.WO_CURRENT]
	) [WO]
	ON [SOURCE].NOLOAN_CLEANSE = [WO].[Loan ON BS iBSM]
WHERE [WO].NOLOAN IS NOT NULL
AND COALESCE([SOURCE].[UPDATE_STATUS], 'X') NOT IN ('LOCKED', 'INVALID FORMAT', 'MULTIPLE LOANS')
AND ([SOURCE].NOLOAN_FINAL IS NULL OR [SOURCE].NOLOAN = [SOURCE].NOLOAN_FINAL)
AND [SOURCE].SOURCE IN ('MCS');

UPDATE [COLLSYS.MAPPING.LOAN]
SET
	NOLOAN_FINAL = [WO].NOLOAN
	,NOMORCIF = COALESCE(SOURCE.NOMORCIF, [WO].CIF)
	,TGL_AKTIF_AKHIR = COALESCE(SOURCE.TGL_AKTIF_AKHIR, [WO].[Tgl Current])
	,KODECABANG_BSI = COALESCE(SOURCE.KODECABANG_BSI, [WO].[Kode Outlet BSI])
	,UPDATE_STATUS = 'LOCKED'
FROM [COLLSYS.MAPPING.LOAN] [SOURCE]
LEFT JOIN 
	(
		SELECT
			[NEW_BSI_COLLECTION].dbo.fx_cleanse_noloan('DMS', [Loan ON BS iBSM]) AS [Loan ON BS iBSM]
			,NOLOAN
			,CIF
			,[Tgl Current]
			,[Kode Outlet BSI]
		FROM
		[NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_WO.GENERATED.JOIN.WO_CURRENT]
	) [WO]
	ON [SOURCE].NOLOAN_CLEANSE = [WO].[Loan ON BS iBSM]
WHERE [WO].NOLOAN IS NOT NULL
AND COALESCE([SOURCE].[UPDATE_STATUS], 'X') NOT IN ('LOCKED', 'INVALID FORMAT', 'MULTIPLE LOANS')
AND ([SOURCE].NOLOAN_FINAL IS NULL OR [SOURCE].NOLOAN = [SOURCE].NOLOAN_FINAL)
AND [SOURCE].SOURCE IN ('DMS FIELD');

UPDATE [COLLSYS.MAPPING.LOAN]
SET
	NOLOAN_FINAL = [WO].NOLOAN
	,NOMORCIF = COALESCE(SOURCE.NOMORCIF, [WO].CIF)
	,TGL_AKTIF_AKHIR = COALESCE(SOURCE.TGL_AKTIF_AKHIR, [WO].[Tgl Current])
	,KODECABANG_BSI = COALESCE(SOURCE.KODECABANG_BSI, [WO].[Kode Outlet BSI])
	,UPDATE_STATUS = 'LOCKED'
FROM [COLLSYS.MAPPING.LOAN] [SOURCE]
LEFT JOIN 
	(
		SELECT
			[NEW_BSI_COLLECTION].dbo.fx_cleanse_noloan('DMS', [Loan ON BS iBSM]) AS [Loan ON BS iBSM]
			,NOLOAN
			,CIF
			,[Tgl Current]
			,[Kode Outlet BSI]
		FROM
		[NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_WO.GENERATED.JOIN.WO_CURRENT]
	) [WO]
	ON [SOURCE].NOLOAN_CLEANSE = [WO].[Loan ON BS iBSM]
WHERE [WO].NOLOAN IS NOT NULL
AND COALESCE([SOURCE].[UPDATE_STATUS], 'X') NOT IN ('LOCKED', 'INVALID FORMAT', 'MULTIPLE LOANS')
AND ([SOURCE].NOLOAN_FINAL IS NULL OR [SOURCE].NOLOAN = [SOURCE].NOLOAN_FINAL)
AND [SOURCE].SOURCE IN ('DMS TELE');

UPDATE [COLLSYS.MAPPING.LOAN]
SET
	NOLOAN_FINAL = [WO].NOLOAN
	,NOMORCIF = COALESCE(SOURCE.NOMORCIF, [WO].CIF)
	,TGL_AKTIF_AKHIR = COALESCE(SOURCE.TGL_AKTIF_AKHIR, [WO].[Tgl Current])
	,KODECABANG_BSI = COALESCE(SOURCE.KODECABANG_BSI, [WO].[Kode Outlet BSI])
	,UPDATE_STATUS = 'LOCKED'
FROM [COLLSYS.MAPPING.LOAN] [SOURCE]
LEFT JOIN 
	(
		SELECT
			[NEW_BSI_COLLECTION].dbo.fx_cleanse_noloan('PDS', [Loan ON BS iBSM]) AS [Loan ON BS iBSM]
			,NOLOAN
			,CIF
			,[Tgl Current]
			,[Kode Outlet BSI]
		FROM
		[NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_WO.GENERATED.JOIN.WO_CURRENT]
	) [WO]
	ON [SOURCE].NOLOAN_CLEANSE = [WO].[Loan ON BS iBSM]
WHERE [WO].NOLOAN IS NOT NULL
AND COALESCE([SOURCE].[UPDATE_STATUS], 'X') NOT IN ('LOCKED', 'INVALID FORMAT', 'MULTIPLE LOANS')
AND ([SOURCE].NOLOAN_FINAL IS NULL OR [SOURCE].NOLOAN = [SOURCE].NOLOAN_FINAL)
AND [SOURCE].SOURCE IN ('PDS');

UPDATE [COLLSYS.MAPPING.LOAN]
SET
	NOLOAN_FINAL = [WO].NOLOAN
	,NOMORCIF = COALESCE(SOURCE.NOMORCIF, [WO].CIF)
	,TGL_AKTIF_AKHIR = COALESCE(SOURCE.TGL_AKTIF_AKHIR, [WO].[Tgl Current])
	,KODECABANG_BSI = COALESCE(SOURCE.KODECABANG_BSI, [WO].[Kode Outlet BSI])
	,UPDATE_STATUS = 'LOCKED'
FROM [COLLSYS.MAPPING.LOAN] [SOURCE]
LEFT JOIN 
	(
		SELECT
			[NEW_BSI_COLLECTION].dbo.fx_cleanse_noloan('GOOGLE FORM', [Loan ON BS iBSM]) AS [Loan ON BS iBSM]
			,NOLOAN
			,CIF
			,[Tgl Current]
			,[Kode Outlet BSI]
		FROM
		[NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_WO.GENERATED.JOIN.WO_CURRENT]
	) [WO]
	ON [SOURCE].NOLOAN_CLEANSE = [WO].[Loan ON BS iBSM]
WHERE [WO].NOLOAN IS NOT NULL
AND COALESCE([SOURCE].[UPDATE_STATUS], 'X') NOT IN ('LOCKED', 'INVALID FORMAT', 'MULTIPLE LOANS')
AND ([SOURCE].NOLOAN_FINAL IS NULL OR [SOURCE].NOLOAN = [SOURCE].NOLOAN_FINAL)
AND [SOURCE].SOURCE IN ('GOOGLE FORM');

UPDATE [COLLSYS.MAPPING.LOAN]
SET
	NOLOAN_FINAL = [WO].NOLOAN
	,NOMORCIF = COALESCE(SOURCE.NOMORCIF, [WO].CIF)
	,TGL_AKTIF_AKHIR = COALESCE(SOURCE.TGL_AKTIF_AKHIR, [WO].[Tgl Current])
	,KODECABANG_BSI = COALESCE(SOURCE.KODECABANG_BSI, [WO].[Kode Outlet BSI])
	,UPDATE_STATUS = 'LOCKED'
FROM [COLLSYS.MAPPING.LOAN] [SOURCE]
LEFT JOIN 
	(
		SELECT
			[NEW_BSI_COLLECTION].dbo.fx_cleanse_noloan('GOOGLE FORM', [Loan ON BS iBSM]) AS [Loan ON BS iBSM]
			,NOLOAN
			,CIF
			,[Tgl Current]
			,[Kode Outlet BSI]
		FROM
		[NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_WO.GENERATED.JOIN.WO_CURRENT]
	) [WO]
	ON [SOURCE].NOLOAN_CLEANSE = [WO].[Loan ON BS iBSM]
WHERE [WO].NOLOAN IS NOT NULL
AND COALESCE([SOURCE].[UPDATE_STATUS], 'X') NOT IN ('LOCKED', 'INVALID FORMAT', 'MULTIPLE LOANS')
AND ([SOURCE].NOLOAN_FINAL IS NULL OR [SOURCE].NOLOAN = [SOURCE].NOLOAN_FINAL)
AND [SOURCE].SOURCE IN ('SMS BLAST', 'VOICE BLAST', 'WA BLAST');

----------------------------------------------------------------------------------------------------------------

UPDATE [COLLSYS.MAPPING.LOAN]
SET
	NOLOAN_FINAL = [MUTASI].NOLOAN_AKHIR
	,NOMORCIF = COALESCE(SOURCE.NOMORCIF, MUTASI.NOCIF_AKHIR)
	,UPDATE_STATUS = 'LOCKED'
FROM [COLLSYS.MAPPING.LOAN] [SOURCE]
LEFT JOIN
		(
			SELECT
			LEGACY_CURRENT
			,[NEW_BSI_COLLECTION].dbo.fx_cleanse_noloan('MCS', NOLOAN_CURRENT) AS NOLOAN_CURRENT
			,NOLOAN_AKHIR
			,NOCIF_AKHIR
			FROM
			[NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_ONBS.MAPPING.JOIN.REKAP_NOLOAN.MUTASI_NOLOAN_CURRENT]
		)[MUTASI]
	ON [SOURCE].NOLOAN_CLEANSE = [MUTASI].NOLOAN_CURRENT
	AND [MUTASI].LEGACY_CURRENT != 'BSM'
WHERE [MUTASI].NOLOAN_CURRENT IS NOT NULL
AND COALESCE([SOURCE].[UPDATE_STATUS], 'X') NOT IN ('LOCKED', 'INVALID FORMAT', 'MULTIPLE LOANS')
AND ([SOURCE].NOLOAN_FINAL IS NULL OR [SOURCE].NOLOAN = [SOURCE].NOLOAN_FINAL)
AND [SOURCE].SOURCE IN ('MCS');

UPDATE [COLLSYS.MAPPING.LOAN]
SET
	NOLOAN_FINAL = [MUTASI].NOLOAN_AKHIR
	,NOMORCIF = COALESCE(SOURCE.NOMORCIF, MUTASI.NOCIF_AKHIR)
	,UPDATE_STATUS = 'LOCKED'
FROM [COLLSYS.MAPPING.LOAN] [SOURCE]
LEFT JOIN
		(
			SELECT
			LEGACY_CURRENT
			,[NEW_BSI_COLLECTION].dbo.fx_cleanse_noloan('DMS', NOLOAN_CURRENT) AS NOLOAN_CURRENT
			,NOLOAN_AKHIR
			,NOCIF_AKHIR
			FROM
			[NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_ONBS.MAPPING.JOIN.REKAP_NOLOAN.MUTASI_NOLOAN_CURRENT]
		)[MUTASI]
	ON [SOURCE].NOLOAN_CLEANSE = [MUTASI].NOLOAN_CURRENT
	AND [MUTASI].LEGACY_CURRENT != 'BSM'
WHERE [MUTASI].NOLOAN_CURRENT IS NOT NULL
AND COALESCE([SOURCE].[UPDATE_STATUS], 'X') NOT IN ('LOCKED', 'INVALID FORMAT', 'MULTIPLE LOANS')
AND ([SOURCE].NOLOAN_FINAL IS NULL OR [SOURCE].NOLOAN = [SOURCE].NOLOAN_FINAL)
AND [SOURCE].SOURCE IN ('DMS FIELD');

UPDATE [COLLSYS.MAPPING.LOAN]
SET
	NOLOAN_FINAL = [MUTASI].NOLOAN_AKHIR
	,NOMORCIF = COALESCE(SOURCE.NOMORCIF, MUTASI.NOCIF_AKHIR)
	,UPDATE_STATUS = 'LOCKED'
FROM [COLLSYS.MAPPING.LOAN] [SOURCE]
LEFT JOIN
		(
			SELECT
			LEGACY_CURRENT
			,[NEW_BSI_COLLECTION].dbo.fx_cleanse_noloan('DMS', NOLOAN_CURRENT) AS NOLOAN_CURRENT
			,NOLOAN_AKHIR
			,NOCIF_AKHIR
			FROM
			[NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_ONBS.MAPPING.JOIN.REKAP_NOLOAN.MUTASI_NOLOAN_CURRENT]
		)[MUTASI]
	ON [SOURCE].NOLOAN_CLEANSE = [MUTASI].NOLOAN_CURRENT
	AND [MUTASI].LEGACY_CURRENT != 'BSM'
WHERE [MUTASI].NOLOAN_CURRENT IS NOT NULL
AND COALESCE([SOURCE].[UPDATE_STATUS], 'X') NOT IN ('LOCKED', 'INVALID FORMAT', 'MULTIPLE LOANS')
AND ([SOURCE].NOLOAN_FINAL IS NULL OR [SOURCE].NOLOAN = [SOURCE].NOLOAN_FINAL)
AND [SOURCE].SOURCE IN ('DMS TELE');

UPDATE [COLLSYS.MAPPING.LOAN]
SET
	NOLOAN_FINAL = [MUTASI].NOLOAN_AKHIR
	,NOMORCIF = COALESCE(SOURCE.NOMORCIF, MUTASI.NOCIF_AKHIR)
	,UPDATE_STATUS = 'LOCKED'
FROM [COLLSYS.MAPPING.LOAN] [SOURCE]
LEFT JOIN
		(
			SELECT
			LEGACY_CURRENT
			,[NEW_BSI_COLLECTION].dbo.fx_cleanse_noloan('PDS', NOLOAN_CURRENT) AS NOLOAN_CURRENT
			,NOLOAN_AKHIR
			,NOCIF_AKHIR
			FROM
			[NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_ONBS.MAPPING.JOIN.REKAP_NOLOAN.MUTASI_NOLOAN_CURRENT]
		)[MUTASI]
	ON [SOURCE].NOLOAN_CLEANSE = [MUTASI].NOLOAN_CURRENT
	AND [MUTASI].LEGACY_CURRENT != 'BSM'
WHERE [MUTASI].NOLOAN_CURRENT IS NOT NULL
AND COALESCE([SOURCE].[UPDATE_STATUS], 'X') NOT IN ('LOCKED', 'INVALID FORMAT', 'MULTIPLE LOANS')
AND ([SOURCE].NOLOAN_FINAL IS NULL OR [SOURCE].NOLOAN = [SOURCE].NOLOAN_FINAL)
AND [SOURCE].SOURCE IN ('PDS');

UPDATE [COLLSYS.MAPPING.LOAN]
SET
	NOLOAN_FINAL = [MUTASI].NOLOAN_AKHIR
	,NOMORCIF = COALESCE(SOURCE.NOMORCIF, MUTASI.NOCIF_AKHIR)
	,UPDATE_STATUS = 'LOCKED'
FROM [COLLSYS.MAPPING.LOAN] [SOURCE]
LEFT JOIN
		(
			SELECT
			LEGACY_CURRENT
			,[NEW_BSI_COLLECTION].dbo.fx_cleanse_noloan('GOOGLE FORM', NOLOAN_CURRENT) AS NOLOAN_CURRENT
			,NOLOAN_AKHIR
			,NOCIF_AKHIR
			FROM
			[NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_ONBS.MAPPING.JOIN.REKAP_NOLOAN.MUTASI_NOLOAN_CURRENT]
		)[MUTASI]
	ON [SOURCE].NOLOAN_CLEANSE = [MUTASI].NOLOAN_CURRENT
	AND [MUTASI].LEGACY_CURRENT != 'BSM'
WHERE [MUTASI].NOLOAN_CURRENT IS NOT NULL
AND COALESCE([SOURCE].[UPDATE_STATUS], 'X') NOT IN ('LOCKED', 'INVALID FORMAT', 'MULTIPLE LOANS')
AND ([SOURCE].NOLOAN_FINAL IS NULL OR [SOURCE].NOLOAN = [SOURCE].NOLOAN_FINAL)
AND [SOURCE].SOURCE IN ('GOOGLE FORM');

UPDATE [COLLSYS.MAPPING.LOAN]
SET
	NOLOAN_FINAL = [MUTASI].NOLOAN_AKHIR
	,NOMORCIF = COALESCE(SOURCE.NOMORCIF, MUTASI.NOCIF_AKHIR)
	,UPDATE_STATUS = 'LOCKED'
FROM [COLLSYS.MAPPING.LOAN] [SOURCE]
LEFT JOIN
		(
			SELECT
			LEGACY_CURRENT
			,[NEW_BSI_COLLECTION].dbo.fx_cleanse_noloan('GOOGLE FORM', NOLOAN_CURRENT) AS NOLOAN_CURRENT
			,NOLOAN_AKHIR
			,NOCIF_AKHIR
			FROM
			[NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_ONBS.MAPPING.JOIN.REKAP_NOLOAN.MUTASI_NOLOAN_CURRENT]
		)[MUTASI]
	ON [SOURCE].NOLOAN_CLEANSE = [MUTASI].NOLOAN_CURRENT
	AND [MUTASI].LEGACY_CURRENT != 'BSM'
WHERE [MUTASI].NOLOAN_CURRENT IS NOT NULL
AND COALESCE([SOURCE].[UPDATE_STATUS], 'X') NOT IN ('LOCKED', 'INVALID FORMAT', 'MULTIPLE LOANS')
AND ([SOURCE].NOLOAN_FINAL IS NULL OR [SOURCE].NOLOAN = [SOURCE].NOLOAN_FINAL)
AND [SOURCE].SOURCE IN ('SMS BLAST', 'VOICE BLAST', 'WA BLAST');

----------------------------------------------------------------------------------------------------------------

UPDATE [COLLSYS.MAPPING.LOAN]
SET
	NOLOAN_FINAL = COALESCE(SOURCE.NOLOAN_FINAL, [TGL_AKTIF].NOLOAN_FIXED)
	,NOMORCIF = COALESCE(SOURCE.NOMORCIF, [TGL_AKTIF].NOMORCIF)
	,TGL_AKTIF_AKHIR = COALESCE(SOURCE.TGL_AKTIF_AKHIR, [TGL_AKTIF].TGL_AKTIF_AKHIR)
	,UPDATE_STATUS = 'LOCKED'
FROM [COLLSYS.MAPPING.LOAN] [SOURCE]
LEFT JOIN
	(
		SELECT
			[NEW_BSI_COLLECTION].[dbo].fx_cleanse_noloan('MCS', NOLOAN) AS NOLOAN
			,NOLOAN AS NOLOAN_FIXED
			,NOMORCIF
			,[TGL_AKTIF_AKHIR]
		FROM [NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_ONBS.COMPILE.JOIN.REKAP_NOLOAN.TGL_AKTIF]
		WHERE LEGACY = 'BSM'
	) [TGL_AKTIF]
	ON [SOURCE].NOLOAN_CLEANSE = [TGL_AKTIF].NOLOAN
WHERE [TGL_AKTIF].NOMORCIF IS NOT NULL
AND COALESCE([SOURCE].[UPDATE_STATUS], 'X') NOT IN ('LOCKED', 'INVALID FORMAT', 'MULTIPLE LOANS')
AND ([SOURCE].NOLOAN_FINAL IS NULL OR [SOURCE].NOLOAN = [SOURCE].NOLOAN_FINAL)
AND [SOURCE].SOURCE IN ('MCS')
AND [TGL_AKTIF].TGL_AKTIF_AKHIR != COALESCE([SOURCE].TGL_AKTIF_AKHIR, '1900-01-01');

UPDATE [COLLSYS.MAPPING.LOAN]
SET
	NOLOAN_FINAL = COALESCE(SOURCE.NOLOAN_FINAL, [TGL_AKTIF].NOLOAN_FIXED)
	,NOMORCIF = COALESCE(SOURCE.NOMORCIF, [TGL_AKTIF].NOMORCIF)
	,TGL_AKTIF_AKHIR = COALESCE(SOURCE.TGL_AKTIF_AKHIR, [TGL_AKTIF].TGL_AKTIF_AKHIR)
	,UPDATE_STATUS = 'LOCKED'
FROM [COLLSYS.MAPPING.LOAN] [SOURCE]
LEFT JOIN
	(
		SELECT
			[NEW_BSI_COLLECTION].[dbo].fx_cleanse_noloan('DMS', NOLOAN) AS NOLOAN
			,NOLOAN AS NOLOAN_FIXED
			,NOMORCIF
			,[TGL_AKTIF_AKHIR]
		FROM [NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_ONBS.COMPILE.JOIN.REKAP_NOLOAN.TGL_AKTIF]
		WHERE LEGACY = 'BSM'
	) [TGL_AKTIF]
	ON [SOURCE].NOLOAN_CLEANSE = [TGL_AKTIF].NOLOAN
WHERE [TGL_AKTIF].NOMORCIF IS NOT NULL
AND COALESCE([SOURCE].[UPDATE_STATUS], 'X') NOT IN ('LOCKED', 'INVALID FORMAT', 'MULTIPLE LOANS')
AND ([SOURCE].NOLOAN_FINAL IS NULL OR [SOURCE].NOLOAN = [SOURCE].NOLOAN_FINAL)
AND [SOURCE].SOURCE IN ('DMS FIELD')
AND [TGL_AKTIF].TGL_AKTIF_AKHIR != COALESCE([SOURCE].TGL_AKTIF_AKHIR, '1900-01-01');

UPDATE [COLLSYS.MAPPING.LOAN]
SET
	NOLOAN_FINAL = COALESCE(SOURCE.NOLOAN_FINAL, [TGL_AKTIF].NOLOAN_FIXED)
	,NOMORCIF = COALESCE(SOURCE.NOMORCIF, [TGL_AKTIF].NOMORCIF)
	,TGL_AKTIF_AKHIR = COALESCE(SOURCE.TGL_AKTIF_AKHIR, [TGL_AKTIF].TGL_AKTIF_AKHIR)
	,UPDATE_STATUS = 'LOCKED'
FROM [COLLSYS.MAPPING.LOAN] [SOURCE]
LEFT JOIN
	(
		SELECT
			[NEW_BSI_COLLECTION].[dbo].fx_cleanse_noloan('DMS', NOLOAN) AS NOLOAN
			,NOLOAN AS NOLOAN_FIXED
			,NOMORCIF
			,[TGL_AKTIF_AKHIR]
		FROM [NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_ONBS.COMPILE.JOIN.REKAP_NOLOAN.TGL_AKTIF]
		WHERE LEGACY = 'BSM'
	) [TGL_AKTIF]
	ON [SOURCE].NOLOAN_CLEANSE = [TGL_AKTIF].NOLOAN
WHERE [TGL_AKTIF].NOMORCIF IS NOT NULL
AND COALESCE([SOURCE].[UPDATE_STATUS], 'X') NOT IN ('LOCKED', 'INVALID FORMAT', 'MULTIPLE LOANS')
AND ([SOURCE].NOLOAN_FINAL IS NULL OR [SOURCE].NOLOAN = [SOURCE].NOLOAN_FINAL)
AND [SOURCE].SOURCE IN ('DMS TELE')
AND [TGL_AKTIF].TGL_AKTIF_AKHIR != COALESCE([SOURCE].TGL_AKTIF_AKHIR, '1900-01-01');

UPDATE [COLLSYS.MAPPING.LOAN]
SET
	NOLOAN_FINAL = COALESCE(SOURCE.NOLOAN_FINAL, [TGL_AKTIF].NOLOAN_FIXED)
	,NOMORCIF = COALESCE(SOURCE.NOMORCIF, [TGL_AKTIF].NOMORCIF)
	,TGL_AKTIF_AKHIR = COALESCE(SOURCE.TGL_AKTIF_AKHIR, [TGL_AKTIF].TGL_AKTIF_AKHIR)
	,UPDATE_STATUS = 'LOCKED'
FROM [COLLSYS.MAPPING.LOAN] [SOURCE]
LEFT JOIN
	(
		SELECT
			[NEW_BSI_COLLECTION].[dbo].fx_cleanse_noloan('PDS', NOLOAN) AS NOLOAN
			,NOLOAN AS NOLOAN_FIXED
			,NOMORCIF
			,[TGL_AKTIF_AKHIR]
		FROM [NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_ONBS.COMPILE.JOIN.REKAP_NOLOAN.TGL_AKTIF]
		WHERE LEGACY = 'BSM'
	) [TGL_AKTIF]
	ON [SOURCE].NOLOAN_CLEANSE = [TGL_AKTIF].NOLOAN
WHERE [TGL_AKTIF].NOMORCIF IS NOT NULL
AND COALESCE([SOURCE].[UPDATE_STATUS], 'X') NOT IN ('LOCKED', 'INVALID FORMAT', 'MULTIPLE LOANS')
AND ([SOURCE].NOLOAN_FINAL IS NULL OR [SOURCE].NOLOAN = [SOURCE].NOLOAN_FINAL)
AND [SOURCE].SOURCE IN ('PDS')
AND [TGL_AKTIF].TGL_AKTIF_AKHIR != COALESCE([SOURCE].TGL_AKTIF_AKHIR, '1900-01-01');

UPDATE [COLLSYS.MAPPING.LOAN]
SET
	NOLOAN_FINAL = COALESCE(SOURCE.NOLOAN_FINAL, [TGL_AKTIF].NOLOAN_FIXED)
	,NOMORCIF = COALESCE(SOURCE.NOMORCIF, [TGL_AKTIF].NOMORCIF)
	,TGL_AKTIF_AKHIR = COALESCE(SOURCE.TGL_AKTIF_AKHIR, [TGL_AKTIF].TGL_AKTIF_AKHIR)
	,UPDATE_STATUS = 'LOCKED'
FROM [COLLSYS.MAPPING.LOAN] [SOURCE]
LEFT JOIN
	(
		SELECT
			[NEW_BSI_COLLECTION].[dbo].fx_cleanse_noloan('GOOGLE FORM', NOLOAN) AS NOLOAN
			,NOLOAN AS NOLOAN_FIXED
			,NOMORCIF
			,[TGL_AKTIF_AKHIR]
		FROM [NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_ONBS.COMPILE.JOIN.REKAP_NOLOAN.TGL_AKTIF]
		WHERE LEGACY = 'BSM'
	) [TGL_AKTIF]
	ON [SOURCE].NOLOAN_CLEANSE = [TGL_AKTIF].NOLOAN
WHERE [TGL_AKTIF].NOMORCIF IS NOT NULL
AND COALESCE([SOURCE].[UPDATE_STATUS], 'X') NOT IN ('LOCKED', 'INVALID FORMAT', 'MULTIPLE LOANS')
AND ([SOURCE].NOLOAN_FINAL IS NULL OR [SOURCE].NOLOAN = [SOURCE].NOLOAN_FINAL)
AND [SOURCE].SOURCE IN ('GOOGLE FORM')
AND [TGL_AKTIF].TGL_AKTIF_AKHIR != COALESCE([SOURCE].TGL_AKTIF_AKHIR, '1900-01-01');

UPDATE [COLLSYS.MAPPING.LOAN]
SET
	NOLOAN_FINAL = COALESCE(SOURCE.NOLOAN_FINAL, [TGL_AKTIF].NOLOAN_FIXED)
	,NOMORCIF = COALESCE(SOURCE.NOMORCIF, [TGL_AKTIF].NOMORCIF)
	,TGL_AKTIF_AKHIR = COALESCE(SOURCE.TGL_AKTIF_AKHIR, [TGL_AKTIF].TGL_AKTIF_AKHIR)
	,UPDATE_STATUS = 'LOCKED'
FROM [COLLSYS.MAPPING.LOAN] [SOURCE]
LEFT JOIN
	(
		SELECT
			[NEW_BSI_COLLECTION].[dbo].fx_cleanse_noloan('GOOGLE FORM', NOLOAN) AS NOLOAN
			,NOLOAN AS NOLOAN_FIXED
			,NOMORCIF
			,[TGL_AKTIF_AKHIR]
		FROM [NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_ONBS.COMPILE.JOIN.REKAP_NOLOAN.TGL_AKTIF]
		WHERE LEGACY = 'BSM'
	) [TGL_AKTIF]
	ON [SOURCE].NOLOAN_CLEANSE = [TGL_AKTIF].NOLOAN
WHERE [TGL_AKTIF].NOMORCIF IS NOT NULL
AND COALESCE([SOURCE].[UPDATE_STATUS], 'X') NOT IN ('LOCKED', 'INVALID FORMAT', 'MULTIPLE LOANS')
AND ([SOURCE].NOLOAN_FINAL IS NULL OR [SOURCE].NOLOAN = [SOURCE].NOLOAN_FINAL)
AND [SOURCE].SOURCE IN ('SMS BLAST', 'VOICE BLAST', 'WA BLAST')
AND [TGL_AKTIF].TGL_AKTIF_AKHIR != COALESCE([SOURCE].TGL_AKTIF_AKHIR, '1900-01-01');

----------------------------------------------------------------------------------------------------------------

UPDATE [COLLSYS.MAPPING.LOAN]
SET
	[NOLOAN_FINAL] = [NOLOAN]
WHERE [NOLOAN_FINAL] IS NULL

----------------------------------------------------------------------------------------------------------------

UPDATE [COLLSYS.MAPPING.LOAN]
SET
	NOLOAN_FINAL = [MUTASI].NOLOAN_AKHIR
	,NOMORCIF = COALESCE(MUTASI.NOCIF_AKHIR, SOURCE.NOMORCIF)
FROM [COLLSYS.MAPPING.LOAN] [SOURCE]
LEFT JOIN
		(
			SELECT
			NOLOAN_CURRENT
			,NOCIF_CURRENT
			,NOLOAN_AKHIR
			,NOCIF_AKHIR
			FROM
			[NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_ONBS.MAPPING.JOIN.REKAP_NOLOAN.MUTASI_NOLOAN_CURRENT]
		)[MUTASI]
	ON [SOURCE].NOLOAN_CLEANSE = [MUTASI].NOLOAN_CURRENT
	AND [SOURCE].NOMORCIF = [MUTASI].NOCIF_CURRENT
WHERE [MUTASI].NOLOAN_CURRENT IS NOT NULL
AND ([SOURCE].NOLOAN_FINAL IS NULL OR [SOURCE].NOLOAN = [SOURCE].NOLOAN_FINAL);

----------------------------------------------------------------------------------------------------------------

UPDATE [COLLSYS.MAPPING.LOAN]
SET
	NOLOAN_FINAL = COALESCE([MUTASI].NOLOAN_AKHIR, SOURCE.NOLOAN_FINAL)
	,NOMORCIF = COALESCE(MUTASI.NOCIF_AKHIR, SOURCE.NOMORCIF)
FROM [COLLSYS.MAPPING.LOAN] [SOURCE]
LEFT JOIN
		(
			SELECT
			NOLOAN_CURRENT
			,NOCIF_CURRENT
			,NOLOAN_AKHIR
			,NOCIF_AKHIR
			FROM
			[NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_ONBS.MAPPING.JOIN.REKAP_NOLOAN.MUTASI_NOLOAN_CURRENT]
		)[MUTASI]
	ON [SOURCE].NOLOAN_FINAL = [MUTASI].NOLOAN_CURRENT
	AND [SOURCE].NOMORCIF = [MUTASI].NOCIF_CURRENT
WHERE [MUTASI].NOLOAN_CURRENT IS NOT NULL
AND
	(
		COALESCE([MUTASI].NOLOAN_AKHIR, 'X') != COALESCE([SOURCE].NOLOAN_FINAL, 'X')
		OR COALESCE([MUTASI].NOCIF_AKHIR, 'X') != COALESCE([SOURCE].NOMORCIF, 'X')
	);

----------------------------------------------------------------------------------------------------------------

UPDATE [COLLSYS.MAPPING.LOAN]
SET
	[KODECABANG_BSI] = COALESCE([REMAPPING].[KODEOUTLET], [SOURCE].[KODECABANG_BSI])
	,[DIVISI_BSI] = COALESCE([REMAPPING].[DIVISI], [SOURCE].[DIVISI_BSI])
	,[FLAG_DATA] = 'ONBS'
FROM [COLLSYS.MAPPING.LOAN] [SOURCE]
LEFT JOIN [NEW_BSI_DEV].[dbo].[PORTOFOLIO.ONBS.LOAN_DETAIL] [REMAPPING]
	ON [SOURCE].[NOLOAN_FINAL] = [REMAPPING].[NOLOAN]
	AND [SOURCE].[NOMORCIF] = [REMAPPING].[NOMORCIF]
WHERE [REMAPPING].[KODEOUTLET] IS NOT NULL;

----------------------------------------------------------------------------------------------------------------

UPDATE [COLLSYS.MAPPING.LOAN]
SET
	[KODECABANG_BSI] = COALESCE([REMAPPING].[KODE OUTLET BSI], [SOURCE].[KODECABANG_BSI])
	,[DIVISI_BSI] = COALESCE([REMAPPING].[DIVISI], [SOURCE].[DIVISI_BSI])
	,[FLAG_DATA] = 'WO'
FROM [COLLSYS.MAPPING.LOAN] [SOURCE]
LEFT JOIN [NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_WO.GENERATED.JOIN.WO_CURRENT] [REMAPPING]
	ON [SOURCE].[NOLOAN_FINAL] = [REMAPPING].[NOLOAN]
	AND [SOURCE].[NOMORCIF] = [REMAPPING].[CIF]
WHERE [REMAPPING].[KODE OUTLET BSI] IS NOT NULL;

----------------------------------------------------------------------------------------------------------------

UPDATE [dbo].[COLLSYS.MAPPING.LOAN] SET UPDATE_STATUS = 'INVALID FORMAT' WHERE NOLOAN NOT LIKE '%[0-9]%' AND UPDATE_STATUS IS NULL;
UPDATE [dbo].[COLLSYS.MAPPING.LOAN] SET UPDATE_STATUS = 'INVALID FORMAT' WHERE NOLOAN LIKE 'TAD%' AND UPDATE_STATUS IS NULL;
UPDATE [dbo].[COLLSYS.MAPPING.LOAN] SET UPDATE_STATUS = 'INVALID FORMAT' WHERE NOLOAN LIKE '%[,.+-&/\]%' AND NOLOAN LIKE '%[0-9]%' AND UPDATE_STATUS IS NULL;
UPDATE [dbo].[COLLSYS.MAPPING.LOAN] SET UPDATE_STATUS = 'INVALID FORMAT' WHERE (LEN(NOLOAN) <= 7 OR LEN(NOLOAN) >= 21) AND SOURCE = 'GOOGLE FORM' AND UPDATE_STATUS IS NULL;

UPDATE [dbo].[COLLSYS.MAPPING.LOAN] SET UPDATE_STATUS = 'INVALID FORMAT'
FROM [dbo].[COLLSYS.MAPPING.LOAN] [SOURCE]
LEFT JOIN
	(
		SELECT
			NOMORCIF
		FROM [NEW_BSI_DEV].dbo.[PORTOFOLIO.ONBS.LOAN_DETAIL]
		GROUP BY
			NOMORCIF
	) [DETAIL]
	ON [SOURCE].NOLOAN = [DETAIL].NOMORCIF
WHERE LEN([SOURCE].NOLOAN) = 8
AND [DETAIL].NOMORCIF IS NOT NULL
AND UPDATE_STATUS IS NULL;

UPDATE [dbo].[COLLSYS.MAPPING.LOAN] SET UPDATE_STATUS = 'INVALID FORMAT'
WHERE LEN([NEW_BSI_COLLECTION].[dbo].[fx_common_remove_symbols](NOLOAN)) >= 13
AND NOLOAN LIKE '%LD%'
AND NOLOAN NOT LIKE 'PDLD%'
AND UPDATE_STATUS IS NULL;

----------------------------------------------------------------------------------------------------------------

UPDATE [COLLSYS.MAPPING.LOAN]
SET
	[KODECABANG_BSI] = COALESCE([REMAPPING].[KODE OUTLET PENAMPUNG], [SOURCE].[KODECABANG_BSI])
	,[NAMACABANG_BSI] = COALESCE([REMAPPING].[NAMA OUTLET PENAMPUNG], [SOURCE].[NAMACABANG_BSI])
FROM [COLLSYS.MAPPING.LOAN] [SOURCE]
LEFT JOIN [NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_JOIN.MAPPING.JOIN.CABANG_TUTUP] [REMAPPING]
	ON [SOURCE].[KODECABANG_BSI] = [REMAPPING].[KODEOUTLET]
WHERE [REMAPPING].[KODE OUTLET PENAMPUNG] IS NOT NULL;

----------------------------------------------------------------------------------------------------------------

UPDATE [COLLSYS.MAPPING.LOAN]
SET
	NamaCabang_BSI = COALESCE([SOURCE].[Nama Outlet], [TARGET].NamaCabang_BSI)
	,Area_BSI = COALESCE([SOURCE].[Nama Area], [TARGET].Area_BSI)
	,Region_BSI = COALESCE([SOURCE].[Nama RO], [TARGET].Region_BSI)
FROM [COLLSYS.MAPPING.LOAN] [TARGET]
LEFT JOIN [NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_JOIN.MAPPING.JOIN.CABANG_BSI_UPDATE] [SOURCE]
	ON [TARGET].KodeCabang_BSI = [SOURCE].[Kode Outlet];
