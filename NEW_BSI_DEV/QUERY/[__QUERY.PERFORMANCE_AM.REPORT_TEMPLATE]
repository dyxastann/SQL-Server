CREATE TABLE #TEMP_TB (
	REPORT_ID INT,
	PERIODE_PELAPORAN DATE,
	TGL_PELAPORAN DATE,
	SOURCE VARCHAR (255),
	[USERID] VARCHAR (255),
	[NOLOAN_INPUT] VARCHAR (255),
	[NOLOAN] VARCHAR (255),
	[NOMORCIF] VARCHAR (255),
	[NAMANASABAH] VARCHAR (255),
	[KODEOUTLET_BSI] VARCHAR(255),
	[NAMAOUTLET_BSI] VARCHAR(255),
	[AREA_BSI] VARCHAR(255),
	[REGION_BSI] VARCHAR(255),
	[DIVISI_BSI] VARCHAR(255),
	[PRODUK_BSI] VARCHAR(255),
	[HASIL_KUNJUNGAN] VARCHAR (255),
	[FLAG_PTP] VARCHAR (255),
	[TANGGAL_AWAL_PTP] DATE,
	[TANGGAL_AKHIR_PTP] DATE,
	[STATUS_PTP] VARCHAR (255),
	[KOL_LAST] VARCHAR(255),
	[KOL_FINAL] VARCHAR(255),
	[KOL_TERBURUK] VARCHAR(255),
	[KOL_PELAPORAN] VARCHAR(255)
)

--------------------------------------------------------------------------

INSERT INTO #TEMP_TB (
	PERIODE_PELAPORAN,
	TGL_PELAPORAN,
	SOURCE,
	[USERID],
	[NOLOAN_INPUT],
	[NOLOAN],
	[NOMORCIF],
	[HASIL_KUNJUNGAN],
	[FLAG_PTP]
)
SELECT
	EOMONTH ([MCS].[Submitted Date]) AS PERIODE_PELAPORAN,
	[MCS].[Submitted Date] AS TGL_PELAPORAN,
	'MCS' AS SOURCE,
	[MCS].[ARO ID],
	[MCS].[Agreement No],
	COALESCE (
		[MAPPING].[NOLOAN_FINAL],
		[MCS].[Agreement No]
	) AS [NOLOAN_FINAL],
	[MAPPING].[NOMORCIF],
	COALESCE (
		[MCS].[COLLECTION RESULT],
		[MCS].[COLLECTION RESULT_2]
	) AS HASIL_KUNJUNGAN,
	CASE
WHEN COALESCE (
	[MCS].[COLLECTION RESULT],
	[MCS].[COLLECTION RESULT_2]
) IN (
	'AUS | AMBIL UANG SETORAN',
	'AUS1 | AMBIL UANG SETORAN',
	'JB | JANJI BAYAR',
	'JB | JANJI BAYAR;JB | JANJI BAYAR'
) THEN
	'PTP'
ELSE
	'NON PTP'
END AS FLAG_PTP
FROM
	[NEW_BSI_COLLECTION].[dbo].[COLLSYS.REPORT.MCS.COMPILE] [MCS]
LEFT JOIN [NEW_BSI_DEV].[dbo].[COLLSYS.MAPPING.LOAN] [MAPPING] ON [MAPPING].[SOURCE] = 'MCS'
AND [MAPPING].[NOLOAN] = [MCS].[Agreement No]
WHERE
	EOMONTH ([MCS].[Submitted Date]) = EOMONTH ('2022-07-01')

--------------------------------------------------------------------------

INSERT INTO #TEMP_TB (
		PERIODE_PELAPORAN,
		TGL_PELAPORAN,
		SOURCE,
		[USERID],
		[NOLOAN_INPUT],
		[NOLOAN],
		[NOMORCIF],
		[HASIL_KUNJUNGAN],
		[FLAG_PTP]
	) SELECT
		EOMONTH ([DMS].[Tanggal Input]) AS PERIODE_PELAPORAN,
		[DMS].[Tanggal Input] AS TGL_PELAPORAN,
		'DMS' AS SOURCE,
		[DMS].[USERID],
		[DMS].[Nomor Loan],
		COALESCE (
			[MAPPING].[NOLOAN_FINAL],
			[DMS].[Nomor Loan]
		) AS [NOLOAN_FINAL],
		[MAPPING].[NOMORCIF],
		[DMS].[Hasil Kunjungan],
		CASE
	WHEN [DMS].[Hasil Kunjungan] IN ('Janji bayar') THEN
		'PTP'
	ELSE
		'NON PTP'
	END AS FLAG_PTP
	FROM
		[NEW_BSI_COLLECTION].[dbo].[COLLSYS.REPORT.DMS_FIELD.COMPILE] [DMS]
	LEFT JOIN [NEW_BSI_DEV].[dbo].[COLLSYS.MAPPING.LOAN] [MAPPING] ON [MAPPING].[SOURCE] = 'DMS'
	AND [MAPPING].[NOLOAN] = [DMS].[Nomor Loan]
	WHERE
		EOMONTH ([DMS].[Tanggal Input]) = EOMONTH ('2022-07-01')

--------------------------------------------------------------------------

INSERT INTO #TEMP_TB (
	PERIODE_PELAPORAN,
	TGL_PELAPORAN,
	SOURCE,
	[USERID],
	[NOLOAN_INPUT],
	[NOLOAN],
	[NOMORCIF],
	[HASIL_KUNJUNGAN],
	[FLAG_PTP]
)
SELECT
	EOMONTH ([GF].[Tanggal]) AS PERIODE_PELAPORAN,
	[GF].[Tanggal] AS TGL_PELAPORAN,
	'GOOGLE FORM' AS SOURCE,
	[GF].[User ID Koreksi],
	[GF].[Nomor Loan Nasabah sesuai Data Sistem],
	COALESCE (
		[MAPPING].[NOLOAN_FINAL],
		[GF].[Nomor Loan Nasabah sesuai Data Sistem]
	) AS [NOLOAN_FINAL],
	[MAPPING].[NOMORCIF],
	[GF].[COLLECTION RESULT] AS HASIL_KUNJUNGAN,
	CASE
WHEN [GF].[COLLECTION RESULT] IN (
	'AUS / Ambil Uang Setoran',
	'JB / Janji Bayar',
	'JB / Pickup Uang Setoran'
) THEN
	'PTP'
ELSE
	'NON PTP'
END AS FLAG_PTP
FROM
	[NEW_BSI_COLLECTION].[dbo].[COLLSYS.REPORT.GF.COMPILE] [GF]
LEFT JOIN [NEW_BSI_DEV].[dbo].[COLLSYS.MAPPING.LOAN] [MAPPING] ON [MAPPING].[SOURCE] = 'GOOGLE FORM'
AND [MAPPING].[NOLOAN] = [GF].[Nomor Loan Nasabah sesuai Data Sistem]
WHERE
	EOMONTH ([GF].[Tanggal]) = EOMONTH ('2022-07-01')

--------------------------------------------------------------------------

UPDATE CTE
	SET CTE.REPORT_ID = [CTE].ROW
FROM
	(
		SELECT
			REPORT_ID,
			ROW_NUMBER () OVER (
				ORDER BY
					TGL_PELAPORAN,
					NOLOAN,
					NOMORCIF,
					FLAG_PTP,
					CASE
						WHEN SOURCE = 'MCS' THEN 1
						WHEN SOURCE = 'DMS' THEN 2
						WHEN SOURCE = 'GOOGLE FORM' THEN 3
					END DESC
			) AS ROW
		FROM #TEMP_TB
	) [CTE]

--------------------------------------------------------------------------

UPDATE #TEMP_TB
SET
 [TANGGAL_AWAL_PTP] = [TGL_PELAPORAN]
 ,[TANGGAL_AKHIR_PTP] = DATEADD(DAY, 7, [TGL_PELAPORAN])
WHERE [FLAG_PTP] = 'PTP'

UPDATE #TEMP_TB
SET
 [TANGGAL_AKHIR_PTP] = (
		SELECT
			MIN(TANGGAL_AWAL_PTP) AS TANGGAL_AKHIR_PTP
		FROM
			(
				VALUES
					([MAIN].[TANGGAL_AKHIR_PTP]),
					(DATEADD(DAY, -1, [SUB].[TANGGAL_AWAL_PTP]))
			) AS TEMP_TB(TANGGAL_AWAL_PTP)
	)
FROM #TEMP_TB [MAIN]
OUTER APPLY (
	SELECT
		MIN(REPORT_ID) AS REPORT_ID
	FROM #TEMP_TB
	WHERE [FLAG_PTP] = 'PTP'
	AND [MAIN].[REPORT_ID] < [REPORT_ID]
	AND [MAIN].[NOLOAN] = [NOLOAN]
	AND [MAIN].[NOMORCIF] = [NOMORCIF]
) [MIN_ID]
LEFT JOIN
	(
		SELECT
			*
		FROM #TEMP_TB
		WHERE [FLAG_PTP] = 'PTP'
	) [SUB]
	ON [SUB].[REPORT_ID] = [MIN_ID].[REPORT_ID]
WHERE [MAIN].[FLAG_PTP] = 'PTP'
AND [SUB].[NOLOAN] IS NOT NULL

--------------------------------------------------------------------------

UPDATE #TEMP_TB
SET
	[NAMANASABAH] = [SOURCE].[NAMA]
	,[KODEOUTLET_BSI] = [SOURCE].[KODE OUTLET BSI]
	,[DIVISI_BSI] = [SOURCE].[DIVISI]
	,[PRODUK_BSI] = [SOURCE].[PRODUK BSI]
	,[KOL_LAST] = 'WO'
	,[KOL_FINAL] = 'WO'
	,[KOL_TERBURUK] = 'WO'
	,[KOL_PELAPORAN] = 'WO'
--	,[OS_POKOK_PELAPORAN_BULAN_SEBELUM] = [SOURCE].[OS Pokok Last Month Conversion]
--	,[OS_POKOK_PELAPORAN_CURRENT] = [SOURCE].[OS Pokok Current Conversion]
FROM #TEMP_TB [TARGET]
LEFT JOIN [NEW_BSI_STORAGE].[dbo].[WO.PORTOFOLIO_DAILY.2022-05-31] [SOURCE]
	ON [TARGET].[NOLOAN] = [SOURCE].[NOLOAN]
	AND [TARGET].[NOMORCIF] = [SOURCE].[CIF]
WHERE [SOURCE].[NOLOAN] IS NOT NULL

----------------------------------------------------------------------------------------

UPDATE #TEMP_TB
SET
	[KODEOUTLET_BSI] = [SOURCE].[KODEOUTLET]
	,[DIVISI_BSI] = [SOURCE].[DIVISI]
	,[PRODUK_BSI] = [SOURCE].[PRODUK]
FROM #TEMP_TB [TARGET]
LEFT JOIN [NEW_BSI_DEV].[dbo].[PORTOFOLIO.ONBS.LOAN_DETAIL] [SOURCE]
	ON [TARGET].[NOLOAN] = [SOURCE].[NOLOAN]
	AND [TARGET].[NOMORCIF] = [SOURCE].[NOMORCIF]
WHERE [SOURCE].[NOLOAN] IS NOT NULL

----------------------------------------------------------------------------------------

UPDATE #TEMP_TB
SET
	[NAMANASABAH] = [SOURCE].[NAMANASABAH]
FROM #TEMP_TB [TARGET]
LEFT JOIN [NEW_BSI_DEV].[dbo].[PORTOFOLIO.ONBS.CIF_DETAIL] [SOURCE]
	ON [TARGET].[NOMORCIF] = [SOURCE].[NOMORCIF]
WHERE [SOURCE].[NOMORCIF] IS NOT NULL

----------------------------------------------------------------------------------------

UPDATE #TEMP_TB
SET
	[NAMANASABAH] = COALESCE([SOURCE].[(SOURCE) NAMANASABAH], [TARGET].[NAMANASABAH])
	,[KODEOUTLET_BSI] = COALESCE([SOURCE].[(RCG) KODECABANG_BSI], [TARGET].[KODEOUTLET_BSI])
	,[DIVISI_BSI] = COALESCE([SOURCE].[(RCG) DIVISI_BSI], [TARGET].[DIVISI_BSI])
	,[PRODUK_BSI] = COALESCE([SOURCE].[(EDA) PRODUK], [TARGET].[PRODUK_BSI])
	,[KOL_LAST] = COALESCE([SOURCE].[(RCG) KOL_CIF_LAST_MONTH], [TARGET].[KOL_LAST])
	,[KOL_FINAL] = COALESCE([SOURCE].[(RCG) KOL_CIF_PECAH], [TARGET].[KOL_FINAL])
	--,[OS_POKOK_PELAPORAN_BULAN_SEBELUM] = COALESCE([SOURCE].[(RCG) OS_POKOK_PSAK_LAST_MONTH], [TARGET].[OS_POKOK_PELAPORAN_BULAN_SEBELUM])
	--,[OS_POKOK_PELAPORAN_CURRENT] = COALESCE([SOURCE].[(RCG) OS_POKOK_PSAK_CURRENT], [TARGET].[OS_POKOK_PELAPORAN_CURRENT])
FROM #TEMP_TB [TARGET]
LEFT JOIN
		(
			SELECT
				COALESCE([MUTASI].[NOLOAN_AKHIR], [PORTO].[(SOURCE) NOLOAN_CURRENT]) AS [(SOURCE) NOLOAN_CURRENT]
				,COALESCE([MUTASI].[NOCIF_AKHIR], [PORTO].[(SOURCE) NOMORCIF_CURRENT]) AS [(SOURCE) NOMORCIF_CURRENT]
				,[PORTO].[(SOURCE) NAMANASABAH]
				,[PORTO].[(RCG) KODECABANG_BSI]
				,[PORTO].[(RCG) DIVISI_BSI]
				,[PORTO].[(EDA) PRODUK]
				,[PORTO].[(RCG) KOL_CIF_LAST_MONTH]
				,[PORTO].[(RCG) KOL_CIF_PECAH]
				,[PORTO].[(RCG) OS_POKOK_PSAK_LAST_MONTH]
				,[PORTO].[(RCG) OS_POKOK_PSAK_CURRENT]
			FROM [NEW_BSI_STORAGE].[dbo].[BSI.PORTOFOLIO_DAILY.2022-05-31 (EDA)] [PORTO]
			LEFT JOIN [NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_ONBS.MAPPING.JOIN.REKAP_NOLOAN.MUTASI_NOLOAN_CURRENT] [MUTASI]
				ON [PORTO].[(SOURCE) NOLOAN_CURRENT] = [MUTASI].[NOLOAN_CURRENT]
				AND [PORTO].[(SOURCE) NOMORCIF_CURRENT] = [MUTASI].[NOCIF_CURRENT]
		)[SOURCE]
	ON [TARGET].[NOLOAN] = [SOURCE].[(SOURCE) NOLOAN_CURRENT]
	AND [TARGET].[NOMORCIF] = [SOURCE].[(SOURCE) NOMORCIF_CURRENT]
WHERE [SOURCE].[(SOURCE) NOLOAN_CURRENT] IS NOT NULL

----------------------------------------------------------------------------------------

UPDATE #TEMP_TB
SET
	NamaOutlet_BSI = COALESCE([SOURCE].[Nama Outlet], [TARGET].NamaOutlet_BSI)
	,Area_BSI = COALESCE([SOURCE].[Nama Area], [TARGET].Area_BSI)
	,Region_BSI = COALESCE([SOURCE].[Nama RO], [TARGET].Region_BSI)
FROM #TEMP_TB [TARGET]
LEFT JOIN [NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_JOIN.MAPPING.JOIN.CABANG_BSI_UPDATE] [SOURCE]
	ON [TARGET].KodeOutlet_BSI = [SOURCE].[Kode Outlet]
WHERE [SOURCE].[Kode Outlet] IS NOT NULL

----------------------------------------------------------------------------------------

UPDATE #TEMP_TB
SET
	KOL_LAST = COALESCE([SOURCE].[KOL_LAST], [TARGET].KOL_LAST)
	,KOL_FINAL = COALESCE([SOURCE].[KOL_CURRENT], [TARGET].KOL_FINAL)
	,KOL_TERBURUK = COALESCE([SOURCE].[KOL_TERBURUK_HARIAN], [TARGET].KOL_TERBURUK)
FROM #TEMP_TB [TARGET]
LEFT JOIN
		(
			SELECT
				COALESCE([MAPPING].NOLOAN_AKHIR, [SOURCE].[NOLOAN_AKHIR]) AS [NOLOAN_AKHIR]
				,COALESCE([MAPPING].NOCIF_AKHIR, [SOURCE].[NOMORCIF_CURRENT]) AS [NOMORCIF_AKHIR]
				,[SOURCE].[KOL_LAST]
				,[SOURCE].[KOL_CURRENT]
				,[SOURCE].[KOL_TERBURUK_HARIAN]
			FROM [NEW_BSI_STORAGE].[dbo].[BSI.KOL_DAILY.2022-05-31 (EDA)] [SOURCE]
			LEFT JOIN [NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_ONBS.MAPPING.JOIN.REKAP_NOLOAN.MUTASI_NOLOAN_CURRENT] [MAPPING]
				ON [SOURCE].[NOLOAN_CURRENT] = [MAPPING].[NOLOAN_CURRENT]
				AND [SOURCE].[NOMORCIF_CURRENT] = [MAPPING].[NOCIF_CURRENT]
		)[SOURCE]
	ON [TARGET].NOLOAN = [SOURCE].[NOLOAN_AKHIR]
	AND [TARGET].NOMORCIF = [SOURCE].[NOMORCIF_AKHIR]
WHERE [SOURCE].[NOLOAN_AKHIR] IS NOT NULL

----------------------------------------------------------------------------------------

UPDATE #TEMP_TB
SET
	KOL_PELAPORAN = COALESCE((
		SELECT MAX(KOL) AS KOL
		FROM (
			VALUES
			([SOURCE].[KOL_LAST])
			,(CASE WHEN RIGHT(DATEADD(DAY, -7, TANGGAL_AKHIR_PTP), 2) >= '01' THEN KOL_01 END)
			,(CASE WHEN RIGHT(DATEADD(DAY, -7, TANGGAL_AKHIR_PTP), 2) >= '02' THEN KOL_02 END)
			,(CASE WHEN RIGHT(DATEADD(DAY, -7, TANGGAL_AKHIR_PTP), 2) >= '03' THEN KOL_03 END)
			,(CASE WHEN RIGHT(DATEADD(DAY, -7, TANGGAL_AKHIR_PTP), 2) >= '04' THEN KOL_04 END)
			,(CASE WHEN RIGHT(DATEADD(DAY, -7, TANGGAL_AKHIR_PTP), 2) >= '05' THEN KOL_05 END)
			,(CASE WHEN RIGHT(DATEADD(DAY, -7, TANGGAL_AKHIR_PTP), 2) >= '06' THEN KOL_06 END)
			,(CASE WHEN RIGHT(DATEADD(DAY, -7, TANGGAL_AKHIR_PTP), 2) >= '07' THEN KOL_07 END)
			,(CASE WHEN RIGHT(DATEADD(DAY, -7, TANGGAL_AKHIR_PTP), 2) >= '08' THEN KOL_08 END)
			,(CASE WHEN RIGHT(DATEADD(DAY, -7, TANGGAL_AKHIR_PTP), 2) >= '09' THEN KOL_09 END)
			,(CASE WHEN RIGHT(DATEADD(DAY, -7, TANGGAL_AKHIR_PTP), 2) >= '10' THEN KOL_10 END)
			,(CASE WHEN RIGHT(DATEADD(DAY, -7, TANGGAL_AKHIR_PTP), 2) >= '11' THEN KOL_11 END)
			,(CASE WHEN RIGHT(DATEADD(DAY, -7, TANGGAL_AKHIR_PTP), 2) >= '12' THEN KOL_12 END)
			,(CASE WHEN RIGHT(DATEADD(DAY, -7, TANGGAL_AKHIR_PTP), 2) >= '13' THEN KOL_13 END)
			,(CASE WHEN RIGHT(DATEADD(DAY, -7, TANGGAL_AKHIR_PTP), 2) >= '14' THEN KOL_14 END)
			,(CASE WHEN RIGHT(DATEADD(DAY, -7, TANGGAL_AKHIR_PTP), 2) >= '15' THEN KOL_15 END)
			,(CASE WHEN RIGHT(DATEADD(DAY, -7, TANGGAL_AKHIR_PTP), 2) >= '16' THEN KOL_16 END)
			,(CASE WHEN RIGHT(DATEADD(DAY, -7, TANGGAL_AKHIR_PTP), 2) >= '17' THEN KOL_17 END)
			,(CASE WHEN RIGHT(DATEADD(DAY, -7, TANGGAL_AKHIR_PTP), 2) >= '18' THEN KOL_18 END)
			,(CASE WHEN RIGHT(DATEADD(DAY, -7, TANGGAL_AKHIR_PTP), 2) >= '19' THEN KOL_19 END)
			,(CASE WHEN RIGHT(DATEADD(DAY, -7, TANGGAL_AKHIR_PTP), 2) >= '20' THEN KOL_20 END)
			,(CASE WHEN RIGHT(DATEADD(DAY, -7, TANGGAL_AKHIR_PTP), 2) >= '21' THEN KOL_21 END)
			,(CASE WHEN RIGHT(DATEADD(DAY, -7, TANGGAL_AKHIR_PTP), 2) >= '22' THEN KOL_22 END)
			,(CASE WHEN RIGHT(DATEADD(DAY, -7, TANGGAL_AKHIR_PTP), 2) >= '23' THEN KOL_23 END)
			,(CASE WHEN RIGHT(DATEADD(DAY, -7, TANGGAL_AKHIR_PTP), 2) >= '24' THEN KOL_24 END)
			,(CASE WHEN RIGHT(DATEADD(DAY, -7, TANGGAL_AKHIR_PTP), 2) >= '25' THEN KOL_25 END)
			,(CASE WHEN RIGHT(DATEADD(DAY, -7, TANGGAL_AKHIR_PTP), 2) >= '26' THEN KOL_26 END)
			,(CASE WHEN RIGHT(DATEADD(DAY, -7, TANGGAL_AKHIR_PTP), 2) >= '27' THEN KOL_27 END)
			,(CASE WHEN RIGHT(DATEADD(DAY, -7, TANGGAL_AKHIR_PTP), 2) >= '28' THEN KOL_28 END)
			,(CASE WHEN RIGHT(DATEADD(DAY, -7, TANGGAL_AKHIR_PTP), 2) >= '29' THEN KOL_29 END)
			,(CASE WHEN RIGHT(DATEADD(DAY, -7, TANGGAL_AKHIR_PTP), 2) >= '30' THEN KOL_30 END)
			,(CASE WHEN RIGHT(DATEADD(DAY, -7, TANGGAL_AKHIR_PTP), 2) >= '31' THEN KOL_31 END)
		) AS TB_TEMP(KOL)
	), [TARGET].KOL_PELAPORAN)
FROM #TEMP_TB [TARGET]
LEFT JOIN
		(
			SELECT
				COALESCE([MAPPING].NOLOAN_AKHIR, [SOURCE].[NOLOAN_AKHIR]) AS [NOLOAN_AKHIR]
				,COALESCE([MAPPING].NOCIF_AKHIR, [SOURCE].[NOMORCIF_CURRENT]) AS [NOMORCIF_AKHIR]
				,[SOURCE].[KOL_LAST]
				,(NULLIF(NULLIF(NULLIF([SOURCE].[KOL_01], 'Lunas'), 'Suspect'), 'WO')) AS [KOL_01]
				,(NULLIF(NULLIF(NULLIF([SOURCE].[KOL_02], 'Lunas'), 'Suspect'), 'WO')) AS [KOL_02]
				,(NULLIF(NULLIF(NULLIF([SOURCE].[KOL_03], 'Lunas'), 'Suspect'), 'WO')) AS [KOL_03]
				,(NULLIF(NULLIF(NULLIF([SOURCE].[KOL_04], 'Lunas'), 'Suspect'), 'WO')) AS [KOL_04]
				,(NULLIF(NULLIF(NULLIF([SOURCE].[KOL_05], 'Lunas'), 'Suspect'), 'WO')) AS [KOL_05]
				,(NULLIF(NULLIF(NULLIF([SOURCE].[KOL_06], 'Lunas'), 'Suspect'), 'WO')) AS [KOL_06]
				,(NULLIF(NULLIF(NULLIF([SOURCE].[KOL_07], 'Lunas'), 'Suspect'), 'WO')) AS [KOL_07]
				,(NULLIF(NULLIF(NULLIF([SOURCE].[KOL_08], 'Lunas'), 'Suspect'), 'WO')) AS [KOL_08]
				,(NULLIF(NULLIF(NULLIF([SOURCE].[KOL_09], 'Lunas'), 'Suspect'), 'WO')) AS [KOL_09]
				,(NULLIF(NULLIF(NULLIF([SOURCE].[KOL_10], 'Lunas'), 'Suspect'), 'WO')) AS [KOL_10]
				,(NULLIF(NULLIF(NULLIF([SOURCE].[KOL_11], 'Lunas'), 'Suspect'), 'WO')) AS [KOL_11]
				,(NULLIF(NULLIF(NULLIF([SOURCE].[KOL_12], 'Lunas'), 'Suspect'), 'WO')) AS [KOL_12]
				,(NULLIF(NULLIF(NULLIF([SOURCE].[KOL_13], 'Lunas'), 'Suspect'), 'WO')) AS [KOL_13]
				,(NULLIF(NULLIF(NULLIF([SOURCE].[KOL_14], 'Lunas'), 'Suspect'), 'WO')) AS [KOL_14]
				,(NULLIF(NULLIF(NULLIF([SOURCE].[KOL_15], 'Lunas'), 'Suspect'), 'WO')) AS [KOL_15]
				,(NULLIF(NULLIF(NULLIF([SOURCE].[KOL_16], 'Lunas'), 'Suspect'), 'WO')) AS [KOL_16]
				,(NULLIF(NULLIF(NULLIF([SOURCE].[KOL_17], 'Lunas'), 'Suspect'), 'WO')) AS [KOL_17]
				,(NULLIF(NULLIF(NULLIF([SOURCE].[KOL_18], 'Lunas'), 'Suspect'), 'WO')) AS [KOL_18]
				,(NULLIF(NULLIF(NULLIF([SOURCE].[KOL_19], 'Lunas'), 'Suspect'), 'WO')) AS [KOL_19]
				,(NULLIF(NULLIF(NULLIF([SOURCE].[KOL_20], 'Lunas'), 'Suspect'), 'WO')) AS [KOL_20]
				,(NULLIF(NULLIF(NULLIF([SOURCE].[KOL_21], 'Lunas'), 'Suspect'), 'WO')) AS [KOL_21]
				,(NULLIF(NULLIF(NULLIF([SOURCE].[KOL_22], 'Lunas'), 'Suspect'), 'WO')) AS [KOL_22]
				,(NULLIF(NULLIF(NULLIF([SOURCE].[KOL_23], 'Lunas'), 'Suspect'), 'WO')) AS [KOL_23]
				,(NULLIF(NULLIF(NULLIF([SOURCE].[KOL_24], 'Lunas'), 'Suspect'), 'WO')) AS [KOL_24]
				,(NULLIF(NULLIF(NULLIF([SOURCE].[KOL_25], 'Lunas'), 'Suspect'), 'WO')) AS [KOL_25]
				,(NULLIF(NULLIF(NULLIF([SOURCE].[KOL_26], 'Lunas'), 'Suspect'), 'WO')) AS [KOL_26]
				,(NULLIF(NULLIF(NULLIF([SOURCE].[KOL_27], 'Lunas'), 'Suspect'), 'WO')) AS [KOL_27]
				,(NULLIF(NULLIF(NULLIF([SOURCE].[KOL_28], 'Lunas'), 'Suspect'), 'WO')) AS [KOL_28]
				,(NULLIF(NULLIF(NULLIF([SOURCE].[KOL_29], 'Lunas'), 'Suspect'), 'WO')) AS [KOL_29]
				,(NULLIF(NULLIF(NULLIF([SOURCE].[KOL_30], 'Lunas'), 'Suspect'), 'WO')) AS [KOL_30]
				,(NULLIF(NULLIF(NULLIF([SOURCE].[KOL_31], 'Lunas'), 'Suspect'), 'WO')) AS [KOL_31]
			FROM [NEW_BSI_STORAGE].[dbo].[BSI.KOL_DAILY.2022-05-31 (EDA)] [SOURCE]
			LEFT JOIN [NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_ONBS.MAPPING.JOIN.REKAP_NOLOAN.MUTASI_NOLOAN_CURRENT] [MAPPING]
				ON [SOURCE].[NOLOAN_CURRENT] = [MAPPING].[NOLOAN_CURRENT]
				AND [SOURCE].[NOMORCIF_CURRENT] = [MAPPING].[NOCIF_CURRENT]
		)[SOURCE]
	ON [TARGET].NOLOAN = [SOURCE].[NOLOAN_AKHIR]
	AND [TARGET].NOMORCIF = [SOURCE].[NOMORCIF_AKHIR]
WHERE [SOURCE].[NOLOAN_AKHIR] IS NOT NULL
AND [TARGET].TANGGAL_AWAL_PTP IS NOT NULL
AND [TARGET].TANGGAL_AKHIR_PTP IS NOT NULL

----------------------------------------------------------------------------------------

UPDATE #TEMP_TB
SET
	KOL_PELAPORAN = KOL_LAST
WHERE KOL_PELAPORAN IS NULL

--------------------------------------------------------------------------

UPDATE #TEMP_TB
SET
	[STATUS_PTP] = CASE WHEN TANGGAL_AKHIR_PTP >= TANGGAL_AWAL_PTP AND FLAG_PTP = 'PTP' THEN 'VALID' ELSE 'INVALID' END

SELECT
		*
	FROM
		#TEMP_TB
WHERE FLAG_PTP = 'PTP'
ORDER BY
	NOLOAN
	,NOMORCIF
	,TGL_PELAPORAN
	,REPORT_ID
