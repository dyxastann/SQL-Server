CREATE PROCEDURE [dbo].[sp_get_portofolio_daily]
(
	@tgl_data varchar(max) = NULL
	,@area varchar(max) = NULL
	,@region varchar(max) = NULL
	,@segmen varchar(max) = NULL
	,@divisi varchar(max) = NULL
	,@produk varchar(max) = NULL
	,@data_type varchar(max) = NULL
)
AS
BEGIN

	DECLARE @sql_query varchar(max), @TANGGAL_DATA date, @TANGGAL_BEFORE date;

	SELECT TOP 0 * INTO #TEMP_TB_CURRENT FROM [PORTOFOLIO.ONBS.CURRENT];
	SELECT TOP 0 * INTO #TEMP_TB_BEFORE FROM [PORTOFOLIO.ONBS.CURRENT];
	SELECT TOP 0 * INTO #TEMP_TB_LAST_MONTH FROM [PORTOFOLIO.ONBS.CURRENT];
	SELECT TOP 0 * INTO [#TEMP_TB_M-2] FROM [PORTOFOLIO.ONBS.CURRENT];
	SELECT TOP 0 * INTO [#TEMP_TB_M-3] FROM [PORTOFOLIO.ONBS.CURRENT];
	SELECT TOP 0 * INTO [#TEMP_TB_M-4] FROM [PORTOFOLIO.ONBS.CURRENT];
	SELECT TOP 0 * INTO [#TEMP_TB_M-5] FROM [PORTOFOLIO.ONBS.CURRENT];
	SELECT TOP 0 * INTO [#TEMP_TB_M-6] FROM [PORTOFOLIO.ONBS.CURRENT];

	
	IF NULLIF(@tgl_data, '') IS NOT NULL
	BEGIN
		SET @sql_query = CONCAT('SELECT * FROM [NEW_BSI_STORAGE].[dbo].[PORTOFOLIO.ONBS.', @tgl_data, ']');
	END ELSE
	BEGIN
		SET @sql_query = 'SELECT * FROM [PORTOFOLIO.ONBS.CURRENT]';
	END
	
	BEGIN TRY
		INSERT INTO #TEMP_TB_CURRENT exec (@sql_query);
	END TRY
	BEGIN CATCH
	END CATCH

-------------------------------------XXXX-------------------------------------

	CREATE TABLE #RESULT_TABLE
	(
		[TGL_CURRENT] DATE
		,[LEGACY] VARCHAR(255)
		,[NOLOAN] VARCHAR(255)
		,[NOMORCIF] VARCHAR(255)
		,[NAMANASABAH] VARCHAR(255)
		,[KODEOUTLET] VARCHAR(255)
		,[NAMAOUTLET] VARCHAR(255)
		,[AREA] VARCHAR(255)
		,[REGION] VARCHAR(255)
		,[SEGMEN] VARCHAR(255)
		,[DIVISI] VARCHAR(255)
		,[PRODUK] VARCHAR(255)
		,[PRODUK_DETAIL] VARCHAR(255)
		,[JENISPIUTANGPEMBIAYAAN] VARCHAR(255)
		,[DPD] INTEGER
		,[KOL_CIF_LAST_MONTH] VARCHAR(255)
		,[KOL_LOAN] VARCHAR(255)
		,[KOL_CIF] VARCHAR(255)
		,[OS_POKOK_PSAK_CURRENT] DECIMAL(20 ,2)
		,[OS_POKOK_CURRENT] DECIMAL(20 ,2)
		,[OS_MARGIN_CURRENT] DECIMAL(20 ,2)
		,[RBH_CURRENT] DECIMAL(20 ,2)
		,[PBH_CURRENT] DECIMAL(20 ,2)
		,[PAY_POKOK] DECIMAL(20 ,2)
		,[PAY_MARGIN] DECIMAL(20 ,2)
		,[PAY_BASIL] DECIMAL(20 ,2)
		,[PAY_TOTAL] DECIMAL(20 ,2)
		,[NO_HP] VARCHAR(255)
		,[NO_TELP] VARCHAR(255)
		,[KTP] VARCHAR(255)
		,[NPWP] VARCHAR(255)
		,[CYCLE] INTEGER
		,[AGING_KOL_LOAN] VARCHAR(255)
		,[FLAG_AGING_KOL_LOAN] VARCHAR(255)
		,[AGING_KOL_CIF] VARCHAR(255)
		,[FLAG_AGING_KOL_CIF] VARCHAR(255)
		,[MUTASI_HARIAN] VARCHAR(255)
		,[MUTASI_BULANAN] VARCHAR(255)
		,[(AGUNAN) TGL_UPDATE_DATA] DATE
		,[(AGUNAN) KODEAGUNANTERBESAR] VARCHAR(255)
		,[(AGUNAN) JENISAGUNANTERBESAR] VARCHAR(255)
		,[(AGUNAN) JENISPENGIKATANTERBESAR] VARCHAR(255)
		,[(AGUNAN) ALAMATAGUNANTERBESAR] VARCHAR(255)
		,[(AGUNAN) BUKTIKEPEMILIKANTERBESAR] VARCHAR(255)
		,[(AGUNAN) FlagAgunanLOAN] VARCHAR(255)
		,[(AGUNAN) FlagPembiayaan] VARCHAR(255)
		,[(AGUNAN) NILAIPASARALLOC] DECIMAL(20 ,2)
		,[(AGUNAN) NILAIPENGIKATANALLOC] DECIMAL(20 ,2)
		,[(AGUNAN) NILAILIKUIDITASALLOC] DECIMAL(20 ,2)
		,[(AGUNAN) NILAIASURANSIALLOC] DECIMAL(20 ,2)
		,[(AGUNAN) NILAIPASARFIXEDASSET] DECIMAL(20 ,2)
		,[(AGUNAN) NILAIPENGIKATANFIXEDASSET] DECIMAL(20 ,2)
		,[(AGUNAN) NILAILIKUIDITASFIXEDASSET] DECIMAL(20 ,2)
		,[(AGUNAN) NILAIASURANSIFIXEDASSET] DECIMAL(20 ,2)
		,[(AGUNAN) %_CCR] DECIMAL(20 ,4)
	);

-------------------------------------XXXX-------------------------------------

	INSERT INTO #RESULT_TABLE
		(
			[TGL_CURRENT]
			,[LEGACY]
			,[NOLOAN]
			,[NOMORCIF]
			,[KODEOUTLET]
			,[JENISPIUTANGPEMBIAYAAN]
			,[DPD]
			,[KOL_LOAN]
			,[KOL_CIF]
			,[OS_POKOK_PSAK_CURRENT]
			,[OS_POKOK_CURRENT]
			,[OS_MARGIN_CURRENT]
			,[RBH_CURRENT]
			,[PBH_CURRENT]
		)
	SELECT		
		[TGL_CURRENT]
		,[LEGACY]
		,[NOLOAN]
		,[NOMORCIF]
		,[KODECABANG]
		,[JENISPIUTANGPEMBIAYAAN]
		,[DPD]
		,[KOL_LOAN]
		,[KOL_CIF]
		,[OS_POKOK_PSAK_CURRENT]
		,[OS_POKOK_CURRENT]
		,[OS_MARGIN_CURRENT]
		,[RBH_CURRENT]
		,[PBH_CURRENT]
	FROM #TEMP_TB_CURRENT [CUR]

-------------------------------------XXXX-------------------------------------

	UPDATE #RESULT_TABLE
	SET
		[DIVISI] = COALESCE([SOURCE].[DIVISI], [TARGET].[DIVISI])
		,[PRODUK] = COALESCE([SOURCE].[PRODUK], [TARGET].[PRODUK])
		,[PRODUK_DETAIL] = COALESCE([SOURCE].[PRODUK_DETAIL], [TARGET].[PRODUK_DETAIL])
		,[JENISPIUTANGPEMBIAYAAN] = COALESCE([SOURCE].[JENISPIUTANGPEMBIAYAAN], [TARGET].[JENISPIUTANGPEMBIAYAAN])
		,[KODEOUTLET] = COALESCE([SOURCE].[KODEOUTLET], [TARGET].[KODEOUTLET])
		,[CYCLE] = COALESCE([NEW_BSI_COLLECTION].dbo.fx_adjustment_tglSched([SOURCE].[TANGGAL_JATUH_TEMPO], [TARGET].[TGL_CURRENT], [SOURCE].[SCHD_DT]), [TARGET].[CYCLE])
	FROM #RESULT_TABLE [TARGET]
	LEFT JOIN [PORTOFOLIO.ONBS.LOAN_DETAIL] [SOURCE]
		ON [TARGET].[LEGACY] = [SOURCE].[LEGACY]
		AND [TARGET].[NOLOAN] = [SOURCE].[NOLOAN]
		AND [TARGET].[NOMORCIF] = [SOURCE].[NOMORCIF];
	
-------------------------------------XXXX-------------------------------------

	UPDATE #RESULT_TABLE
	SET
		[NAMANASABAH] = COALESCE([SOURCE].[NAMANASABAH], [TARGET].[NAMANASABAH])
		,[NO_HP] = COALESCE([SOURCE].[NO_HP], [TARGET].[NO_HP])
		,[NO_TELP] = COALESCE([SOURCE].[NO_TELP], [TARGET].[NO_TELP])
		,[KTP] = COALESCE([SOURCE].[KTP], [TARGET].[KTP])
		,[NPWP] = COALESCE([SOURCE].[NPWP], [TARGET].[NPWP])
	FROM #RESULT_TABLE [TARGET]
	LEFT JOIN [PORTOFOLIO.ONBS.CIF_DETAIL] [SOURCE]
		ON [TARGET].[LEGACY] = [SOURCE].[LEGACY]
		AND [TARGET].[NOMORCIF] = [SOURCE].[NOMORCIF];
	
-------------------------------------XXXX-------------------------------------

	UPDATE #RESULT_TABLE
	SET
		[NAMAOUTLET] = COALESCE([SOURCE].[Nama Outlet], [TARGET].[NAMAOUTLET])
		,[AREA] = COALESCE([SOURCE].[Nama Area], [TARGET].[AREA])
		,[REGION] = COALESCE([SOURCE].[Nama RO], [TARGET].[REGION])
	FROM #RESULT_TABLE [TARGET]
	LEFT JOIN [NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_JOIN.MAPPING.JOIN.CABANG_BSI_UPDATE] [SOURCE]
		ON [TARGET].[KODEOUTLET] = [SOURCE].[kode outlet];

	DELETE FROM #RESULT_TABLE
	WHERE NOT
		(
			COALESCE([REGION], '') LIKE CONCAT('%', @region, '%')
			AND COALESCE([AREA], '') LIKE CONCAT('%', @area, '%')
			AND COALESCE([DIVISI], '') LIKE CONCAT('%', @divisi, '%')
			AND COALESCE([PRODUK], '') LIKE CONCAT('%', @produk, '%')
			AND COALESCE([SEGMEN], '') LIKE CONCAT('%', @segmen, '%')
		);
	
-------------------------------------XXXX-------------------------------------

	CREATE TABLE #TEMP (
		KOL VARCHAR(255)
	);

	IF(NULLIF(@data_type, '') IS NULL OR @data_type IN ('ONBS'))
	BEGIN
		INSERT INTO #TEMP VALUES('1');
	END

	IF(NULLIF(@data_type, '') IS NULL OR @data_type IN ('Kol 2', 'ONBS'))
	BEGIN
		INSERT INTO #TEMP VALUES('2'), ('2A'), ('2B'), ('2C');
	END

	IF(NULLIF(@data_type, '') IS NULL OR @data_type IN ('NPF', 'ONBS'))
	BEGIN
		INSERT INTO #TEMP VALUES('3'), ('3A'), ('3B'), ('3C'), ('4'), ('4A'), ('4B'), ('4C'), ('5'), ('5A'), ('5B'), ('5C');
	END

	IF(NULLIF(@data_type, '') IS NULL)
	BEGIN
		INSERT INTO #TEMP VALUES('WO'), ('Lunas'), ('Suspect');
	END

	DELETE FROM #RESULT_TABLE
	WHERE NOT
		(
			[KOL_CIF] IN (SELECT KOL FROM #TEMP)
		);

-------------------------------------XXXX-------------------------------------

	SET @TANGGAL_DATA = (SELECT MAX(TGL_CURRENT) FROM #TEMP_TB_CURRENT);
	SET @TANGGAL_BEFORE = (
		SELECT TOP 1
			TRY_CAST(LEFT(REPLACE(name, 'PORTOFOLIO.ONBS.', ''), 10) AS DATE) AS name
		FROM [NEW_BSI_STORAGE].[sys].[objects]
		WHERE type_desc = 'USER_TABLE'
		AND name LIKE 'PORTOFOLIO.ONBS.____-__-__%'
		AND TRY_CAST(LEFT(REPLACE(name, 'PORTOFOLIO.ONBS.', ''), 10) AS DATE) < @TANGGAL_DATA
	);

	IF EXISTS (SELECT name FROM [NEW_BSI_STORAGE].[sys].[objects] WHERE type_desc = 'USER_TABLE' AND name = CONCAT('PORTOFOLIO.ONBS.', @TANGGAL_BEFORE, ' (EDA)'))
	BEGIN
		SET @sql_query = CONCAT('SELECT [A].* FROM [NEW_BSI_STORAGE].[dbo].[PORTOFOLIO.ONBS.', @TANGGAL_BEFORE, ' (EDA)] [A]
			LEFT JOIN
				(
					SELECT
						LEGACY
						,NOLOAN
					FROM #RESULT_TABLE
					GROUP BY
						LEGACY
						,NOLOAN
				) [B]
				ON [A].[LEGACY] = [B].[LEGACY]
				AND [A].[NOLOAN] = [B].[NOLOAN]
			WHERE [B].[NOLOAN] IS NOT NULL
			OR [A].[NOMORCIF] IN (SELECT NOMORCIF FROM [#RESULT_TABLE] GROUP BY NOMORCIF)');
	END ELSE
	BEGIN
		SET @sql_query = CONCAT('SELECT [A].* FROM [NEW_BSI_STORAGE].[dbo].[PORTOFOLIO.ONBS.', @TANGGAL_BEFORE, '] [A]
			LEFT JOIN
				(
					SELECT
						LEGACY
						,NOLOAN
					FROM #RESULT_TABLE
					GROUP BY
						LEGACY
						,NOLOAN
				) [B]
				ON [A].[LEGACY] = [B].[LEGACY]
				AND [A].[NOLOAN] = [B].[NOLOAN]
			WHERE [B].[NOLOAN] IS NOT NULL
			OR [A].[NOMORCIF] IN (SELECT NOMORCIF FROM [#RESULT_TABLE] GROUP BY NOMORCIF)');
	END
	
	BEGIN TRY
		INSERT INTO #TEMP_TB_BEFORE EXEC(@sql_query);
	END TRY
	BEGIN CATCH
	END CATCH

	IF EXISTS (SELECT name FROM [NEW_BSI_STORAGE].[sys].[objects] WHERE type_desc = 'USER_TABLE' AND name = CONCAT('PORTOFOLIO.ONBS.', EOMONTH(DATEADD(MONTH, -1, @TANGGAL_DATA)), ' (EDA)'))
	BEGIN
		SET @sql_query = CONCAT('SELECT [A].* FROM [NEW_BSI_STORAGE].[dbo].[PORTOFOLIO.ONBS.', EOMONTH(DATEADD(MONTH, -1, @TANGGAL_DATA)), ' (EDA)] [A]
			LEFT JOIN
				(
					SELECT
						LEGACY
						,NOLOAN
					FROM #RESULT_TABLE
					GROUP BY
						LEGACY
						,NOLOAN
				) [B]
				ON [A].[LEGACY] = [B].[LEGACY]
				AND [A].[NOLOAN] = [B].[NOLOAN]
			WHERE [B].[NOLOAN] IS NOT NULL
			OR [A].[NOMORCIF] IN (SELECT NOMORCIF FROM [#RESULT_TABLE] GROUP BY NOMORCIF)');
	END ELSE
	BEGIN
		SET @sql_query = CONCAT('SELECT [A].* FROM [NEW_BSI_STORAGE].[dbo].[PORTOFOLIO.ONBS.', EOMONTH(DATEADD(MONTH, -1, @TANGGAL_DATA)), '] [A]
			LEFT JOIN
				(
					SELECT
						LEGACY
						,NOLOAN
					FROM #RESULT_TABLE
					GROUP BY
						LEGACY
						,NOLOAN
				) [B]
				ON [A].[LEGACY] = [B].[LEGACY]
				AND [A].[NOLOAN] = [B].[NOLOAN]
			WHERE [B].[NOLOAN] IS NOT NULL
			OR [A].[NOMORCIF] IN (SELECT NOMORCIF FROM [#RESULT_TABLE] GROUP BY NOMORCIF)');
	END
	
	BEGIN TRY
		INSERT INTO #TEMP_TB_LAST_MONTH EXEC(@sql_query);
	END TRY
	BEGIN CATCH
	END CATCH

	IF EXISTS (SELECT name FROM [NEW_BSI_STORAGE].[sys].[objects] WHERE type_desc = 'USER_TABLE' AND name = CONCAT('PORTOFOLIO.ONBS.', EOMONTH(DATEADD(MONTH, -2, @TANGGAL_DATA)), ' (EDA)'))
	BEGIN
		SET @sql_query = CONCAT('SELECT [A].* FROM [NEW_BSI_STORAGE].[dbo].[PORTOFOLIO.ONBS.', EOMONTH(DATEADD(MONTH, -2, @TANGGAL_DATA)), ' (EDA)] [A]
			LEFT JOIN
				(
					SELECT
						LEGACY
						,NOLOAN
					FROM #RESULT_TABLE
					GROUP BY
						LEGACY
						,NOLOAN
				) [B]
				ON [A].[LEGACY] = [B].[LEGACY]
				AND [A].[NOLOAN] = [B].[NOLOAN]
			WHERE [B].[NOLOAN] IS NOT NULL
			OR [A].[NOMORCIF] IN (SELECT NOMORCIF FROM [#RESULT_TABLE] GROUP BY NOMORCIF)');
	END ELSE
	BEGIN
		SET @sql_query = CONCAT('SELECT [A].* FROM [NEW_BSI_STORAGE].[dbo].[PORTOFOLIO.ONBS.', EOMONTH(DATEADD(MONTH, -2, @TANGGAL_DATA)), '] [A]
			LEFT JOIN
				(
					SELECT
						LEGACY
						,NOLOAN
					FROM #RESULT_TABLE
					GROUP BY
						LEGACY
						,NOLOAN
				) [B]
				ON [A].[LEGACY] = [B].[LEGACY]
				AND [A].[NOLOAN] = [B].[NOLOAN]
			WHERE [B].[NOLOAN] IS NOT NULL
			OR [A].[NOMORCIF] IN (SELECT NOMORCIF FROM [#RESULT_TABLE] GROUP BY NOMORCIF)');
	END
	
	BEGIN TRY
		INSERT INTO [#TEMP_TB_M-2] EXEC(@sql_query);
	END TRY
	BEGIN CATCH
	END CATCH

	IF EXISTS (SELECT name FROM [NEW_BSI_STORAGE].[sys].[objects] WHERE type_desc = 'USER_TABLE' AND name = CONCAT('PORTOFOLIO.ONBS.', EOMONTH(DATEADD(MONTH, -3, @TANGGAL_DATA)), ' (EDA)'))
	BEGIN
		SET @sql_query = CONCAT('SELECT [A].* FROM [NEW_BSI_STORAGE].[dbo].[PORTOFOLIO.ONBS.', EOMONTH(DATEADD(MONTH, -3, @TANGGAL_DATA)), ' (EDA)] [A]
			LEFT JOIN
				(
					SELECT
						LEGACY
						,NOLOAN
					FROM #RESULT_TABLE
					GROUP BY
						LEGACY
						,NOLOAN
				) [B]
				ON [A].[LEGACY] = [B].[LEGACY]
				AND [A].[NOLOAN] = [B].[NOLOAN]
			WHERE [B].[NOLOAN] IS NOT NULL');
	END ELSE
	BEGIN
		SET @sql_query = CONCAT('SELECT [A].* FROM [NEW_BSI_STORAGE].[dbo].[PORTOFOLIO.ONBS.', EOMONTH(DATEADD(MONTH, -3, @TANGGAL_DATA)), '] [A]
			LEFT JOIN
				(
					SELECT
						LEGACY
						,NOLOAN
					FROM #RESULT_TABLE
					GROUP BY
						LEGACY
						,NOLOAN
				) [B]
				ON [A].[LEGACY] = [B].[LEGACY]
				AND [A].[NOLOAN] = [B].[NOLOAN]
			WHERE [B].[NOLOAN] IS NOT NULL');
	END
	
	BEGIN TRY
		INSERT INTO [#TEMP_TB_M-3] EXEC(@sql_query);
	END TRY
	BEGIN CATCH
	END CATCH

	IF EXISTS (SELECT name FROM [NEW_BSI_STORAGE].[sys].[objects] WHERE type_desc = 'USER_TABLE' AND name = CONCAT('PORTOFOLIO.ONBS.', EOMONTH(DATEADD(MONTH, -4, @TANGGAL_DATA)), ' (EDA)'))
	BEGIN
		SET @sql_query = CONCAT('SELECT [A].* FROM [NEW_BSI_STORAGE].[dbo].[PORTOFOLIO.ONBS.', EOMONTH(DATEADD(MONTH, -4, @TANGGAL_DATA)), ' (EDA)] [A]
			LEFT JOIN
				(
					SELECT
						LEGACY
						,NOLOAN
					FROM #RESULT_TABLE
					GROUP BY
						LEGACY
						,NOLOAN
				) [B]
				ON [A].[LEGACY] = [B].[LEGACY]
				AND [A].[NOLOAN] = [B].[NOLOAN]
			WHERE [B].[NOLOAN] IS NOT NULL');
	END ELSE
	BEGIN
		SET @sql_query = CONCAT('SELECT [A].* FROM [NEW_BSI_STORAGE].[dbo].[PORTOFOLIO.ONBS.', EOMONTH(DATEADD(MONTH, -4, @TANGGAL_DATA)), '] [A]
			LEFT JOIN
				(
					SELECT
						LEGACY
						,NOLOAN
					FROM #RESULT_TABLE
					GROUP BY
						LEGACY
						,NOLOAN
				) [B]
				ON [A].[LEGACY] = [B].[LEGACY]
				AND [A].[NOLOAN] = [B].[NOLOAN]
			WHERE [B].[NOLOAN] IS NOT NULL');
	END
	
	BEGIN TRY
		INSERT INTO [#TEMP_TB_M-4] EXEC(@sql_query);
	END TRY
	BEGIN CATCH
	END CATCH

	IF EXISTS (SELECT name FROM [NEW_BSI_STORAGE].[sys].[objects] WHERE type_desc = 'USER_TABLE' AND name = CONCAT('PORTOFOLIO.ONBS.', EOMONTH(DATEADD(MONTH, -5, @TANGGAL_DATA)), ' (EDA)'))
	BEGIN
		SET @sql_query = CONCAT('SELECT [A].* FROM [NEW_BSI_STORAGE].[dbo].[PORTOFOLIO.ONBS.', EOMONTH(DATEADD(MONTH, -5, @TANGGAL_DATA)), ' (EDA)] [A]
			LEFT JOIN
				(
					SELECT
						LEGACY
						,NOLOAN
					FROM #RESULT_TABLE
					GROUP BY
						LEGACY
						,NOLOAN
				) [B]
				ON [A].[LEGACY] = [B].[LEGACY]
				AND [A].[NOLOAN] = [B].[NOLOAN]
			WHERE [B].[NOLOAN] IS NOT NULL');
	END ELSE
	BEGIN
		SET @sql_query = CONCAT('SELECT [A].* FROM [NEW_BSI_STORAGE].[dbo].[PORTOFOLIO.ONBS.', EOMONTH(DATEADD(MONTH, -5, @TANGGAL_DATA)), '] [A]
			LEFT JOIN
				(
					SELECT
						LEGACY
						,NOLOAN
					FROM #RESULT_TABLE
					GROUP BY
						LEGACY
						,NOLOAN
				) [B]
				ON [A].[LEGACY] = [B].[LEGACY]
				AND [A].[NOLOAN] = [B].[NOLOAN]
			WHERE [B].[NOLOAN] IS NOT NULL');
	END
	
	BEGIN TRY
		INSERT INTO [#TEMP_TB_M-5] EXEC(@sql_query);
	END TRY
	BEGIN CATCH
	END CATCH

	IF EXISTS (SELECT name FROM [NEW_BSI_STORAGE].[sys].[objects] WHERE type_desc = 'USER_TABLE' AND name = CONCAT('PORTOFOLIO.ONBS.', EOMONTH(DATEADD(MONTH, -6, @TANGGAL_DATA)), ' (EDA)'))
	BEGIN
		SET @sql_query = CONCAT('SELECT [A].* FROM [NEW_BSI_STORAGE].[dbo].[PORTOFOLIO.ONBS.', EOMONTH(DATEADD(MONTH, -6, @TANGGAL_DATA)), ' (EDA)] [A]
			LEFT JOIN
				(
					SELECT
						LEGACY
						,NOLOAN
					FROM #RESULT_TABLE
					GROUP BY
						LEGACY
						,NOLOAN
				) [B]
				ON [A].[LEGACY] = [B].[LEGACY]
				AND [A].[NOLOAN] = [B].[NOLOAN]
			WHERE [B].[NOLOAN] IS NOT NULL');
	END ELSE
	BEGIN
		SET @sql_query = CONCAT('SELECT [A].* FROM [NEW_BSI_STORAGE].[dbo].[PORTOFOLIO.ONBS.', EOMONTH(DATEADD(MONTH, -6, @TANGGAL_DATA)), '] [A]
			LEFT JOIN
				(
					SELECT
						LEGACY
						,NOLOAN
					FROM #RESULT_TABLE
					GROUP BY
						LEGACY
						,NOLOAN
				) [B]
				ON [A].[LEGACY] = [B].[LEGACY]
				AND [A].[NOLOAN] = [B].[NOLOAN]
			WHERE [B].[NOLOAN] IS NOT NULL');
	END
	
	BEGIN TRY
		INSERT INTO [#TEMP_TB_M-6] EXEC(@sql_query);
	END TRY
	BEGIN CATCH
	END CATCH

-------------------------------------XXXX-------------------------------------

	UPDATE #RESULT_TABLE
	SET
		KOL_CIF_LAST_MONTH = COALESCE([SOURCE_CIF].[KOL], [SOURCE_LOAN].[KOL], [TARGET].[KOL_CIF_LAST_MONTH])
		,MUTASI_BULANAN =
			CASE
				WHEN (COALESCE([SOURCE_CIF].[KOL], [SOURCE_LOAN].[KOL], [TARGET].[KOL_CIF_LAST_MONTH]) IS NULL OR COALESCE([SOURCE_CIF].[KOL], [SOURCE_LOAN].[KOL], [TARGET].[KOL_CIF_LAST_MONTH]) IN ('1')) AND [TARGET].[KOL_CIF] IN ('1') THEN ('Stay Kol 1')
				WHEN (COALESCE([SOURCE_CIF].[KOL], [SOURCE_LOAN].[KOL], [TARGET].[KOL_CIF_LAST_MONTH]) IS NULL OR COALESCE([SOURCE_CIF].[KOL], [SOURCE_LOAN].[KOL], [TARGET].[KOL_CIF_LAST_MONTH]) IN ('1')) AND [TARGET].[KOL_CIF] IN ('2', '2A', '2B', '2C') THEN ('Down. Kol 1 ke Kol 2')
				WHEN (COALESCE([SOURCE_CIF].[KOL], [SOURCE_LOAN].[KOL], [TARGET].[KOL_CIF_LAST_MONTH]) IS NULL OR COALESCE([SOURCE_CIF].[KOL], [SOURCE_LOAN].[KOL], [TARGET].[KOL_CIF_LAST_MONTH]) IN ('1'))
					AND [TARGET].[KOL_CIF] IN ('3', '3A', '3B', '3C', '4', '4A', '4B', '4C', '5') THEN ('Down. Kol 1 ke NPF')
				WHEN COALESCE([SOURCE_CIF].[KOL], [SOURCE_LOAN].[KOL], [TARGET].[KOL_CIF_LAST_MONTH]) IN ('2', '2A', '2B', '2C') AND [TARGET].[KOL_CIF] IN ('2', '2A', '2B', '2C') THEN ('Stay Kol 2')
				WHEN COALESCE([SOURCE_CIF].[KOL], [SOURCE_LOAN].[KOL], [TARGET].[KOL_CIF_LAST_MONTH]) IN ('2', '2A', '2B', '2C') AND [TARGET].[KOL_CIF] IN ('1') THEN ('Upg. Kol 2 ke Kol 1')
				WHEN COALESCE([SOURCE_CIF].[KOL], [SOURCE_LOAN].[KOL], [TARGET].[KOL_CIF_LAST_MONTH]) IN ('2', '2A', '2B', '2C')
					AND [TARGET].[KOL_CIF] IN ('3', '3A', '3B', '3C', '4', '4A', '4B', '4C', '5') THEN ('Down. Kol 2 ke NPF')
				WHEN COALESCE([SOURCE_CIF].[KOL], [SOURCE_LOAN].[KOL], [TARGET].[KOL_CIF_LAST_MONTH]) IN ('3', '3A', '3B', '3C', '4', '4A', '4B', '4C', '5')
					AND [TARGET].[KOL_CIF] IN ('3', '3A', '3B', '3C', '4', '4A', '4B', '4C', '5') THEN ('Stay NPF')
				WHEN COALESCE([SOURCE_CIF].[KOL], [SOURCE_LOAN].[KOL], [TARGET].[KOL_CIF_LAST_MONTH]) IN ('3', '3A', '3B', '3C', '4', '4A', '4B', '4C', '5')
					AND [TARGET].[KOL_CIF] IN ('1') THEN ('Upg. NPF ke Kol 1')
				WHEN COALESCE([SOURCE_CIF].[KOL], [SOURCE_LOAN].[KOL], [TARGET].[KOL_CIF_LAST_MONTH]) IN ('3', '3A', '3B', '3C', '4', '4A', '4B', '4C', '5')
					AND [TARGET].[KOL_CIF] IN ('2', '2A', '2B', '2C') THEN ('Upg. NPF ke Kol 2')
				ELSE [TARGET].[KOL_CIF]
			END
	FROM #RESULT_TABLE [TARGET]
	LEFT JOIN
		(
			SELECT
				LEGACY
				,NOLOAN
				,MAX(KOL_LOAN) AS KOL
			FROM [#TEMP_TB_LAST_MONTH]
			WHERE KOL_CIF NOT IN ('Lunas', 'Suspect', 'WO')
			GROUP BY
				LEGACY
				,NOLOAN
		) [SOURCE_LOAN]
		ON [TARGET].[LEGACY] = [SOURCE_LOAN].[LEGACY]
		AND [TARGET].[NOLOAN] = [SOURCE_LOAN].[NOLOAN]
	LEFT JOIN
		(
			SELECT
				LEGACY
				,NOMORCIF
				,MAX(KOL_CIF) AS KOL
			FROM [#TEMP_TB_LAST_MONTH]
			WHERE KOL_CIF NOT IN ('Lunas', 'Suspect', 'WO')
			AND [DIVISI] NOT IN ('Pawning', 'Hasanah Card')
			GROUP BY
				LEGACY
				,NOMORCIF
		) [SOURCE_CIF]
		ON [TARGET].[LEGACY] = [SOURCE_CIF].[LEGACY]
		AND [TARGET].[NOMORCIF] = [SOURCE_CIF].[NOMORCIF]
		AND [TARGET].[DIVISI] NOT IN ('Pawning', 'Hasanah Card');

-------------------------------------XXXX-------------------------------------

	UPDATE #RESULT_TABLE
	SET
		MUTASI_HARIAN =
			CASE
				WHEN (COALESCE([SOURCE_CIF].[KOL], [SOURCE_LOAN].[KOL], [TARGET].[KOL_CIF_LAST_MONTH]) IS NULL OR COALESCE([SOURCE_CIF].[KOL], [SOURCE_LOAN].[KOL], [TARGET].[KOL_CIF_LAST_MONTH]) IN ('1')) AND [TARGET].[KOL_CIF] IN ('1') THEN ('Stay Kol 1')
				WHEN (COALESCE([SOURCE_CIF].[KOL], [SOURCE_LOAN].[KOL], [TARGET].[KOL_CIF_LAST_MONTH]) IS NULL OR COALESCE([SOURCE_CIF].[KOL], [SOURCE_LOAN].[KOL], [TARGET].[KOL_CIF_LAST_MONTH]) IN ('1')) AND [TARGET].[KOL_CIF] IN ('2', '2A', '2B', '2C') THEN ('Down. Kol 1 ke Kol 2')
				WHEN (COALESCE([SOURCE_CIF].[KOL], [SOURCE_LOAN].[KOL], [TARGET].[KOL_CIF_LAST_MONTH]) IS NULL OR COALESCE([SOURCE_CIF].[KOL], [SOURCE_LOAN].[KOL], [TARGET].[KOL_CIF_LAST_MONTH]) IN ('1'))
					AND [TARGET].[KOL_CIF] IN ('3', '3A', '3B', '3C', '4', '4A', '4B', '4C', '5') THEN ('Down. Kol 1 ke NPF')
				WHEN COALESCE([SOURCE_CIF].[KOL], [SOURCE_LOAN].[KOL], [TARGET].[KOL_CIF_LAST_MONTH]) IN ('2', '2A', '2B', '2C') AND [TARGET].[KOL_CIF] IN ('2', '2A', '2B', '2C') THEN ('Stay Kol 2')
				WHEN COALESCE([SOURCE_CIF].[KOL], [SOURCE_LOAN].[KOL], [TARGET].[KOL_CIF_LAST_MONTH]) IN ('2', '2A', '2B', '2C') AND [TARGET].[KOL_CIF] IN ('1') THEN ('Upg. Kol 2 ke Kol 1')
				WHEN COALESCE([SOURCE_CIF].[KOL], [SOURCE_LOAN].[KOL], [TARGET].[KOL_CIF_LAST_MONTH]) IN ('2', '2A', '2B', '2C')
					AND [TARGET].[KOL_CIF] IN ('3', '3A', '3B', '3C', '4', '4A', '4B', '4C', '5') THEN ('Down. Kol 2 ke NPF')
				WHEN COALESCE([SOURCE_CIF].[KOL], [SOURCE_LOAN].[KOL], [TARGET].[KOL_CIF_LAST_MONTH]) IN ('3', '3A', '3B', '3C', '4', '4A', '4B', '4C', '5')
					AND [TARGET].[KOL_CIF] IN ('3', '3A', '3B', '3C', '4', '4A', '4B', '4C', '5') THEN ('Stay NPF')
				WHEN COALESCE([SOURCE_CIF].[KOL], [SOURCE_LOAN].[KOL], [TARGET].[KOL_CIF_LAST_MONTH]) IN ('3', '3A', '3B', '3C', '4', '4A', '4B', '4C', '5')
					AND [TARGET].[KOL_CIF] IN ('1') THEN ('Upg. NPF ke Kol 1')
				WHEN COALESCE([SOURCE_CIF].[KOL], [SOURCE_LOAN].[KOL], [TARGET].[KOL_CIF_LAST_MONTH]) IN ('3', '3A', '3B', '3C', '4', '4A', '4B', '4C', '5')
					AND [TARGET].[KOL_CIF] IN ('2', '2A', '2B', '2C') THEN ('Upg. NPF ke Kol 2')
				ELSE [TARGET].[KOL_CIF]
			END
	FROM #RESULT_TABLE [TARGET]
	LEFT JOIN
		(
			SELECT
				LEGACY
				,NOLOAN
				,MAX(KOL_LOAN) AS KOL
			FROM [#TEMP_TB_BEFORE]
			WHERE KOL_CIF NOT IN ('Lunas', 'Suspect', 'WO')
			GROUP BY
				LEGACY
				,NOLOAN
		) [SOURCE_LOAN]
		ON [TARGET].[LEGACY] = [SOURCE_LOAN].[LEGACY]
		AND [TARGET].[NOLOAN] = [SOURCE_LOAN].[NOLOAN]
	LEFT JOIN
		(
			SELECT
				LEGACY
				,NOMORCIF
				,MAX(KOL_CIF) AS KOL
			FROM [#TEMP_TB_BEFORE]
			WHERE KOL_CIF NOT IN ('Lunas', 'Suspect', 'WO')
			AND [DIVISI] NOT IN ('Pawning', 'Hasanah Card')
			GROUP BY
				LEGACY
				,NOMORCIF
		) [SOURCE_CIF]
		ON [TARGET].[LEGACY] = [SOURCE_CIF].[LEGACY]
		AND [TARGET].[NOMORCIF] = [SOURCE_CIF].[NOMORCIF]
		AND [TARGET].[DIVISI] NOT IN ('Pawning', 'Hasanah Card');

-------------------------------------XXXX-------------------------------------

	UPDATE #RESULT_TABLE
	SET
		PAY_POKOK = [NEW_BSI_COLLECTION].[dbo].[fx_calc_payment_pokok](NULLIF(NULLIF(NULLIF([TARGET].[KOL_CIF], 'Lunas'), 'Suspect'), 'WO'), [TARGET].[KOL_CIF], [SOURCE].[OS_POKOK_CURRENT], [TARGET].[OS_POKOK_CURRENT])
		,PAY_MARGIN = [NEW_BSI_COLLECTION].[dbo].[fx_calc_payment_pokok](NULLIF(NULLIF(NULLIF([TARGET].[KOL_CIF], 'Lunas'), 'Suspect'), 'WO'), [TARGET].[KOL_CIF], [SOURCE].[OS_MARGIN_CURRENT], [TARGET].[OS_MARGIN_CURRENT])
		,PAY_BASIL = [NEW_BSI_COLLECTION].[dbo].[fx_calc_payment_pokok](NULLIF(NULLIF(NULLIF([TARGET].[KOL_CIF], 'Lunas'), 'Suspect'), 'WO'), [TARGET].[KOL_CIF], [SOURCE].[RBH_CURRENT], [TARGET].[RBH_CURRENT])
	FROM [#RESULT_TABLE] [TARGET]
	LEFT JOIN [#TEMP_TB_LAST_MONTH] [SOURCE]
		ON [TARGET].[LEGACY] = [SOURCE].[LEGACY]
		AND [TARGET].[NOLOAN] = [SOURCE].[NOLOAN];

	UPDATE #RESULT_TABLE
	SET
		PAY_TOTAL = COALESCE(PAY_POKOK, 0.00) + COALESCE(PAY_MARGIN, 0.00) + COALESCE(PAY_BASIL, 0.00);

-------------------------------------XXXX-------------------------------------

	UPDATE #RESULT_TABLE
	SET
		AGING_KOL_LOAN = CONCAT([M-6].[Kol], ' - ', [M-5].[Kol], ' - ', [M-4].[Kol], ' - ', [M-3].[Kol], ' - ', [M-2].[Kol], ' - ', [M-1].[Kol])
		,FLAG_AGING_KOL_LOAN =
			CASE
				WHEN
					(SELECT SUM(POINTER) FROM(VALUES
						(CASE WHEN [M-6].[Kol] IS NULL THEN 1 ELSE 0 END)
						,(CASE WHEN [M-5].[Kol] IS NULL THEN 1 ELSE 0 END)
						,(CASE WHEN [M-4].[Kol] IS NULL THEN 1 ELSE 0 END)
						,(CASE WHEN [M-3].[Kol] IS NULL THEN 1 ELSE 0 END)
						,(CASE WHEN [M-2].[Kol] IS NULL THEN 1 ELSE 0 END)
						,(CASE WHEN [M-1].[Kol] IS NULL THEN 1 ELSE 0 END)
					)[TEMP_TB](POINTER)) >= 4
				THEN 'New Booking'
				WHEN
					(SELECT SUM(POINTER) FROM(VALUES
						(CASE WHEN COALESCE([M-6].[Kol], '1') > COALESCE([M-5].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-5].[Kol], '1') > COALESCE([M-4].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-4].[Kol], '1') > COALESCE([M-3].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-3].[Kol], '1') > COALESCE([M-2].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-2].[Kol], '1') > COALESCE([M-1].[Kol], '1') THEN 1 ELSE 0 END)
					)[TEMP_TB](POINTER)) >= 3
				THEN 'Membaik'
				WHEN
					(SELECT SUM(POINTER) FROM(VALUES
						(CASE WHEN COALESCE([M-6].[Kol], '1') < COALESCE([M-5].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-5].[Kol], '1') < COALESCE([M-4].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-4].[Kol], '1') < COALESCE([M-3].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-3].[Kol], '1') < COALESCE([M-2].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-2].[Kol], '1') < COALESCE([M-1].[Kol], '1') THEN 1 ELSE 0 END)
					)[TEMP_TB](POINTER)) >= 3
				THEN 'Memburuk'
				WHEN
					(SELECT SUM(POINTER) FROM(VALUES
						(CASE WHEN COALESCE([M-6].[Kol], '1') = COALESCE([M-5].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-5].[Kol], '1') = COALESCE([M-4].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-4].[Kol], '1') = COALESCE([M-3].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-3].[Kol], '1') = COALESCE([M-2].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-2].[Kol], '1') = COALESCE([M-1].[Kol], '1') THEN 1 ELSE 0 END)
					)[TEMP_TB](POINTER)) >= 4
				THEN 'Stay'
				WHEN
					(SELECT SUM(POINTER) FROM(VALUES
						(CASE WHEN COALESCE([M-6].[Kol], '1') > COALESCE([M-5].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-5].[Kol], '1') > COALESCE([M-4].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-4].[Kol], '1') > COALESCE([M-3].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-3].[Kol], '1') > COALESCE([M-2].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-2].[Kol], '1') > COALESCE([M-1].[Kol], '1') THEN 1 ELSE 0 END)
					)[TEMP_TB](POINTER)) >= 2
					AND (SELECT SUM(POINTER) FROM(VALUES
						(CASE WHEN COALESCE([M-6].[Kol], '1') < COALESCE([M-5].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-5].[Kol], '1') < COALESCE([M-4].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-4].[Kol], '1') < COALESCE([M-3].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-3].[Kol], '1') < COALESCE([M-2].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-2].[Kol], '1') < COALESCE([M-1].[Kol], '1') THEN 1 ELSE 0 END)
					)[TEMP_TB](POINTER)) >= 2
				THEN 'Fluktuatif'
				WHEN
					(SELECT SUM(POINTER) FROM(VALUES
						(CASE WHEN COALESCE([M-6].[Kol], '1') < COALESCE([M-5].[Kol], '1') THEN -1 WHEN COALESCE([M-6].[Kol], '1') = COALESCE([M-5].[Kol], '1') THEN 0 WHEN COALESCE([M-6].[Kol], '1') > COALESCE([M-5].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-5].[Kol], '1') < COALESCE([M-4].[Kol], '1') THEN -1 WHEN COALESCE([M-5].[Kol], '1') = COALESCE([M-4].[Kol], '1') THEN 0 WHEN COALESCE([M-5].[Kol], '1') > COALESCE([M-4].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-4].[Kol], '1') < COALESCE([M-3].[Kol], '1') THEN -1 WHEN COALESCE([M-4].[Kol], '1') = COALESCE([M-3].[Kol], '1') THEN 0 WHEN COALESCE([M-4].[Kol], '1') > COALESCE([M-3].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-3].[Kol], '1') < COALESCE([M-2].[Kol], '1') THEN -1 WHEN COALESCE([M-3].[Kol], '1') = COALESCE([M-2].[Kol], '1') THEN 0 WHEN COALESCE([M-3].[Kol], '1') > COALESCE([M-2].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-2].[Kol], '1') < COALESCE([M-1].[Kol], '1') THEN -1 WHEN COALESCE([M-2].[Kol], '1') = COALESCE([M-1].[Kol], '1') THEN 0 WHEN COALESCE([M-2].[Kol], '1') > COALESCE([M-1].[Kol], '1') THEN 1 ELSE 0 END)
					)[TEMP_TB](POINTER)) > 0
				THEN 'Membaik'
				WHEN
					(SELECT SUM(POINTER) FROM(VALUES
						(CASE WHEN COALESCE([M-6].[Kol], '1') < COALESCE([M-5].[Kol], '1') THEN -1 WHEN COALESCE([M-6].[Kol], '1') = COALESCE([M-5].[Kol], '1') THEN 0 WHEN COALESCE([M-6].[Kol], '1') > COALESCE([M-5].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-5].[Kol], '1') < COALESCE([M-4].[Kol], '1') THEN -1 WHEN COALESCE([M-5].[Kol], '1') = COALESCE([M-4].[Kol], '1') THEN 0 WHEN COALESCE([M-5].[Kol], '1') > COALESCE([M-4].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-4].[Kol], '1') < COALESCE([M-3].[Kol], '1') THEN -1 WHEN COALESCE([M-4].[Kol], '1') = COALESCE([M-3].[Kol], '1') THEN 0 WHEN COALESCE([M-4].[Kol], '1') > COALESCE([M-3].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-3].[Kol], '1') < COALESCE([M-2].[Kol], '1') THEN -1 WHEN COALESCE([M-3].[Kol], '1') = COALESCE([M-2].[Kol], '1') THEN 0 WHEN COALESCE([M-3].[Kol], '1') > COALESCE([M-2].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-2].[Kol], '1') < COALESCE([M-1].[Kol], '1') THEN -1 WHEN COALESCE([M-2].[Kol], '1') = COALESCE([M-1].[Kol], '1') THEN 0 WHEN COALESCE([M-2].[Kol], '1') > COALESCE([M-1].[Kol], '1') THEN 1 ELSE 0 END)
					)[TEMP_TB](POINTER)) = 0
				THEN 'Stay'
				WHEN
					(SELECT SUM(POINTER) FROM(VALUES
						(CASE WHEN COALESCE([M-6].[Kol], '1') < COALESCE([M-5].[Kol], '1') THEN -1 WHEN COALESCE([M-6].[Kol], '1') = COALESCE([M-5].[Kol], '1') THEN 0 WHEN COALESCE([M-6].[Kol], '1') > COALESCE([M-5].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-5].[Kol], '1') < COALESCE([M-4].[Kol], '1') THEN -1 WHEN COALESCE([M-5].[Kol], '1') = COALESCE([M-4].[Kol], '1') THEN 0 WHEN COALESCE([M-5].[Kol], '1') > COALESCE([M-4].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-4].[Kol], '1') < COALESCE([M-3].[Kol], '1') THEN -1 WHEN COALESCE([M-4].[Kol], '1') = COALESCE([M-3].[Kol], '1') THEN 0 WHEN COALESCE([M-4].[Kol], '1') > COALESCE([M-3].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-3].[Kol], '1') < COALESCE([M-2].[Kol], '1') THEN -1 WHEN COALESCE([M-3].[Kol], '1') = COALESCE([M-2].[Kol], '1') THEN 0 WHEN COALESCE([M-3].[Kol], '1') > COALESCE([M-2].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-2].[Kol], '1') < COALESCE([M-1].[Kol], '1') THEN -1 WHEN COALESCE([M-2].[Kol], '1') = COALESCE([M-1].[Kol], '1') THEN 0 WHEN COALESCE([M-2].[Kol], '1') > COALESCE([M-1].[Kol], '1') THEN 1 ELSE 0 END)
					)[TEMP_TB](POINTER)) < 0
				THEN 'Memburuk'
				ELSE 'Unidentified'
			END
	FROM #RESULT_TABLE [CUR]
	LEFT JOIN
		(
			SELECT
				LEGACY
				,NOLOAN
				,MAX(KOL_CIF) AS KOL
			FROM [#TEMP_TB_LAST_MONTH]
			WHERE KOL_CIF NOT IN ('Lunas', 'Suspect', 'WO')
			GROUP BY
				LEGACY
				,NOLOAN
		) [M-1]
		ON [CUR].[LEGACY] = [M-1].[LEGACY]
		AND [CUR].[NOLOAN] = [M-1].[NOLOAN]
	LEFT JOIN
		(
			SELECT
				LEGACY
				,NOLOAN
				,MAX(KOL_CIF) AS KOL
			FROM [#TEMP_TB_M-2]
			WHERE KOL_CIF NOT IN ('Lunas', 'Suspect', 'WO')
			GROUP BY
				LEGACY
				,NOLOAN
		) [M-2]
		ON [CUR].[LEGACY] = [M-2].[LEGACY]
		AND [CUR].[NOLOAN] = [M-2].[NOLOAN]
	LEFT JOIN
		(
			SELECT
				LEGACY
				,NOLOAN
				,MAX(KOL_CIF) AS KOL
			FROM [#TEMP_TB_M-3]
			WHERE KOL_CIF NOT IN ('Lunas', 'Suspect', 'WO')
			GROUP BY
				LEGACY
				,NOLOAN
		) [M-3]
		ON [CUR].[LEGACY] = [M-3].[LEGACY]
		AND [CUR].[NOLOAN] = [M-3].[NOLOAN]
	LEFT JOIN
		(
			SELECT
				LEGACY
				,NOLOAN
				,MAX(KOL_CIF) AS KOL
			FROM [#TEMP_TB_M-4]
			WHERE KOL_CIF NOT IN ('Lunas', 'Suspect', 'WO')
			GROUP BY
				LEGACY
				,NOLOAN
		) [M-4]
		ON [CUR].[LEGACY] = [M-4].[LEGACY]
		AND [CUR].[NOLOAN] = [M-4].[NOLOAN]
	LEFT JOIN
		(
			SELECT
				LEGACY
				,NOLOAN
				,MAX(KOL_CIF) AS KOL
			FROM [#TEMP_TB_M-5]
			WHERE KOL_CIF NOT IN ('Lunas', 'Suspect', 'WO')
			GROUP BY
				LEGACY
				,NOLOAN
		) [M-5]
		ON [CUR].[LEGACY] = [M-5].[LEGACY]
		AND [CUR].[NOLOAN] = [M-5].[NOLOAN]
	LEFT JOIN
		(
			SELECT
				LEGACY
				,NOLOAN
				,MAX(KOL_CIF) AS KOL
			FROM [#TEMP_TB_M-6]
			WHERE KOL_CIF NOT IN ('Lunas', 'Suspect', 'WO')
			GROUP BY
				LEGACY
				,NOLOAN
		) [M-6]
		ON [CUR].[LEGACY] = [M-6].[LEGACY]
		AND [CUR].[NOLOAN] = [M-6].[NOLOAN];

------------------------------------------------------------------------------------------

	UPDATE #RESULT_TABLE
	SET
		AGING_KOL_CIF = AGING_KOL_LOAN
		,FLAG_AGING_KOL_CIF = FLAG_AGING_KOL_LOAN
	--WHERE [DIVISI] IN ('Pawning', 'Hasanah Card');

------------------------------------------------------------------------------------------

	UPDATE #RESULT_TABLE
	SET
		AGING_KOL_CIF = CONCAT([M-6].[Kol], ' - ', [M-5].[Kol], ' - ', [M-4].[Kol], ' - ', [M-3].[Kol], ' - ', [M-2].[Kol], ' - ', [M-1].[Kol])
		,FLAG_AGING_KOL_CIF = COALESCE(
			CASE
				WHEN
					(SELECT SUM(POINTER) FROM(VALUES
						(CASE WHEN [M-6].[Kol] IS NULL THEN 1 ELSE 0 END)
						,(CASE WHEN [M-5].[Kol] IS NULL THEN 1 ELSE 0 END)
						,(CASE WHEN [M-4].[Kol] IS NULL THEN 1 ELSE 0 END)
						,(CASE WHEN [M-3].[Kol] IS NULL THEN 1 ELSE 0 END)
						,(CASE WHEN [M-2].[Kol] IS NULL THEN 1 ELSE 0 END)
						,(CASE WHEN [M-1].[Kol] IS NULL THEN 1 ELSE 0 END)
					)[TEMP_TB](POINTER)) >= 4
				THEN 'New Booking'
				WHEN
					(SELECT SUM(POINTER) FROM(VALUES
						(CASE WHEN COALESCE([M-6].[Kol], '1') > COALESCE([M-5].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-5].[Kol], '1') > COALESCE([M-4].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-4].[Kol], '1') > COALESCE([M-3].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-3].[Kol], '1') > COALESCE([M-2].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-2].[Kol], '1') > COALESCE([M-1].[Kol], '1') THEN 1 ELSE 0 END)
					)[TEMP_TB](POINTER)) >= 3
				THEN 'Membaik'
				WHEN
					(SELECT SUM(POINTER) FROM(VALUES
						(CASE WHEN COALESCE([M-6].[Kol], '1') < COALESCE([M-5].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-5].[Kol], '1') < COALESCE([M-4].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-4].[Kol], '1') < COALESCE([M-3].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-3].[Kol], '1') < COALESCE([M-2].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-2].[Kol], '1') < COALESCE([M-1].[Kol], '1') THEN 1 ELSE 0 END)
					)[TEMP_TB](POINTER)) >= 3
				THEN 'Memburuk'
				WHEN
					(SELECT SUM(POINTER) FROM(VALUES
						(CASE WHEN COALESCE([M-6].[Kol], '1') = COALESCE([M-5].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-5].[Kol], '1') = COALESCE([M-4].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-4].[Kol], '1') = COALESCE([M-3].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-3].[Kol], '1') = COALESCE([M-2].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-2].[Kol], '1') = COALESCE([M-1].[Kol], '1') THEN 1 ELSE 0 END)
					)[TEMP_TB](POINTER)) >= 4
				THEN 'Stay'
				WHEN
					(SELECT SUM(POINTER) FROM(VALUES
						(CASE WHEN COALESCE([M-6].[Kol], '1') > COALESCE([M-5].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-5].[Kol], '1') > COALESCE([M-4].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-4].[Kol], '1') > COALESCE([M-3].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-3].[Kol], '1') > COALESCE([M-2].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-2].[Kol], '1') > COALESCE([M-1].[Kol], '1') THEN 1 ELSE 0 END)
					)[TEMP_TB](POINTER)) >= 2
					AND (SELECT SUM(POINTER) FROM(VALUES
						(CASE WHEN COALESCE([M-6].[Kol], '1') < COALESCE([M-5].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-5].[Kol], '1') < COALESCE([M-4].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-4].[Kol], '1') < COALESCE([M-3].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-3].[Kol], '1') < COALESCE([M-2].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-2].[Kol], '1') < COALESCE([M-1].[Kol], '1') THEN 1 ELSE 0 END)
					)[TEMP_TB](POINTER)) >= 2
				THEN 'Fluktuatif'
				WHEN
					(SELECT SUM(POINTER) FROM(VALUES
						(CASE WHEN COALESCE([M-6].[Kol], '1') < COALESCE([M-5].[Kol], '1') THEN -1 WHEN COALESCE([M-6].[Kol], '1') = COALESCE([M-5].[Kol], '1') THEN 0 WHEN COALESCE([M-6].[Kol], '1') > COALESCE([M-5].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-5].[Kol], '1') < COALESCE([M-4].[Kol], '1') THEN -1 WHEN COALESCE([M-5].[Kol], '1') = COALESCE([M-4].[Kol], '1') THEN 0 WHEN COALESCE([M-5].[Kol], '1') > COALESCE([M-4].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-4].[Kol], '1') < COALESCE([M-3].[Kol], '1') THEN -1 WHEN COALESCE([M-4].[Kol], '1') = COALESCE([M-3].[Kol], '1') THEN 0 WHEN COALESCE([M-4].[Kol], '1') > COALESCE([M-3].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-3].[Kol], '1') < COALESCE([M-2].[Kol], '1') THEN -1 WHEN COALESCE([M-3].[Kol], '1') = COALESCE([M-2].[Kol], '1') THEN 0 WHEN COALESCE([M-3].[Kol], '1') > COALESCE([M-2].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-2].[Kol], '1') < COALESCE([M-1].[Kol], '1') THEN -1 WHEN COALESCE([M-2].[Kol], '1') = COALESCE([M-1].[Kol], '1') THEN 0 WHEN COALESCE([M-2].[Kol], '1') > COALESCE([M-1].[Kol], '1') THEN 1 ELSE 0 END)
					)[TEMP_TB](POINTER)) > 0
				THEN 'Membaik'
				WHEN
					(SELECT SUM(POINTER) FROM(VALUES
						(CASE WHEN COALESCE([M-6].[Kol], '1') < COALESCE([M-5].[Kol], '1') THEN -1 WHEN COALESCE([M-6].[Kol], '1') = COALESCE([M-5].[Kol], '1') THEN 0 WHEN COALESCE([M-6].[Kol], '1') > COALESCE([M-5].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-5].[Kol], '1') < COALESCE([M-4].[Kol], '1') THEN -1 WHEN COALESCE([M-5].[Kol], '1') = COALESCE([M-4].[Kol], '1') THEN 0 WHEN COALESCE([M-5].[Kol], '1') > COALESCE([M-4].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-4].[Kol], '1') < COALESCE([M-3].[Kol], '1') THEN -1 WHEN COALESCE([M-4].[Kol], '1') = COALESCE([M-3].[Kol], '1') THEN 0 WHEN COALESCE([M-4].[Kol], '1') > COALESCE([M-3].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-3].[Kol], '1') < COALESCE([M-2].[Kol], '1') THEN -1 WHEN COALESCE([M-3].[Kol], '1') = COALESCE([M-2].[Kol], '1') THEN 0 WHEN COALESCE([M-3].[Kol], '1') > COALESCE([M-2].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-2].[Kol], '1') < COALESCE([M-1].[Kol], '1') THEN -1 WHEN COALESCE([M-2].[Kol], '1') = COALESCE([M-1].[Kol], '1') THEN 0 WHEN COALESCE([M-2].[Kol], '1') > COALESCE([M-1].[Kol], '1') THEN 1 ELSE 0 END)
					)[TEMP_TB](POINTER)) = 0
				THEN 'Stay'
				WHEN
					(SELECT SUM(POINTER) FROM(VALUES
						(CASE WHEN COALESCE([M-6].[Kol], '1') < COALESCE([M-5].[Kol], '1') THEN -1 WHEN COALESCE([M-6].[Kol], '1') = COALESCE([M-5].[Kol], '1') THEN 0 WHEN COALESCE([M-6].[Kol], '1') > COALESCE([M-5].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-5].[Kol], '1') < COALESCE([M-4].[Kol], '1') THEN -1 WHEN COALESCE([M-5].[Kol], '1') = COALESCE([M-4].[Kol], '1') THEN 0 WHEN COALESCE([M-5].[Kol], '1') > COALESCE([M-4].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-4].[Kol], '1') < COALESCE([M-3].[Kol], '1') THEN -1 WHEN COALESCE([M-4].[Kol], '1') = COALESCE([M-3].[Kol], '1') THEN 0 WHEN COALESCE([M-4].[Kol], '1') > COALESCE([M-3].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-3].[Kol], '1') < COALESCE([M-2].[Kol], '1') THEN -1 WHEN COALESCE([M-3].[Kol], '1') = COALESCE([M-2].[Kol], '1') THEN 0 WHEN COALESCE([M-3].[Kol], '1') > COALESCE([M-2].[Kol], '1') THEN 1 ELSE 0 END)
						,(CASE WHEN COALESCE([M-2].[Kol], '1') < COALESCE([M-1].[Kol], '1') THEN -1 WHEN COALESCE([M-2].[Kol], '1') = COALESCE([M-1].[Kol], '1') THEN 0 WHEN COALESCE([M-2].[Kol], '1') > COALESCE([M-1].[Kol], '1') THEN 1 ELSE 0 END)
					)[TEMP_TB](POINTER)) < 0
				THEN 'Memburuk'
			END, [CUR].[FLAG_AGING_KOL_CIF])
	FROM #RESULT_TABLE [CUR]
	LEFT JOIN
		(
			SELECT
				LEGACY
				,NOMORCIF
				,MAX(KOL_CIF) AS KOL
			FROM [#TEMP_TB_LAST_MONTH]
			WHERE KOL_CIF NOT IN ('Lunas', 'Suspect', 'WO')
			AND DIVISI NOT IN ('Pawning', 'Hasanah Card')
			GROUP BY
				LEGACY
				,NOMORCIF
		) [M-1]
		ON [CUR].[LEGACY] = [M-1].[LEGACY]
		AND [CUR].[NOMORCIF] = [M-1].[NOMORCIF]
	LEFT JOIN
		(
			SELECT
				LEGACY
				,NOMORCIF
				,MAX(KOL_CIF) AS KOL
			FROM [#TEMP_TB_M-2]
			WHERE KOL_CIF NOT IN ('Lunas', 'Suspect', 'WO')
			AND DIVISI NOT IN ('Pawning', 'Hasanah Card')
			GROUP BY
				LEGACY
				,NOMORCIF
		) [M-2]
		ON [CUR].[LEGACY] = [M-2].[LEGACY]
		AND [CUR].[NOMORCIF] = [M-2].[NOMORCIF]
	LEFT JOIN
		(
			SELECT
				LEGACY
				,NOMORCIF
				,MAX(KOL_CIF) AS KOL
			FROM [#TEMP_TB_M-3]
			WHERE KOL_CIF NOT IN ('Lunas', 'Suspect', 'WO')
			AND DIVISI NOT IN ('Pawning', 'Hasanah Card')
			GROUP BY
				LEGACY
				,NOMORCIF
		) [M-3]
		ON [CUR].[LEGACY] = [M-3].[LEGACY]
		AND [CUR].[NOMORCIF] = [M-3].[NOMORCIF]
	LEFT JOIN
		(
			SELECT
				LEGACY
				,NOMORCIF
				,MAX(KOL_CIF) AS KOL
			FROM [#TEMP_TB_M-4]
			WHERE KOL_CIF NOT IN ('Lunas', 'Suspect', 'WO')
			AND DIVISI NOT IN ('Pawning', 'Hasanah Card')
			GROUP BY
				LEGACY
				,NOMORCIF
		) [M-4]
		ON [CUR].[LEGACY] = [M-4].[LEGACY]
		AND [CUR].[NOMORCIF] = [M-4].[NOMORCIF]
	LEFT JOIN
		(
			SELECT
				LEGACY
				,NOMORCIF
				,MAX(KOL_CIF) AS KOL
			FROM [#TEMP_TB_M-5]
			WHERE KOL_CIF NOT IN ('Lunas', 'Suspect', 'WO')
			AND DIVISI NOT IN ('Pawning', 'Hasanah Card')
			GROUP BY
				LEGACY
				,NOMORCIF
		) [M-5]
		ON [CUR].[LEGACY] = [M-5].[LEGACY]
		AND [CUR].[NOMORCIF] = [M-5].[NOMORCIF]
	LEFT JOIN
		(
			SELECT
				LEGACY
				,NOMORCIF
				,MAX(KOL_CIF) AS KOL
			FROM [#TEMP_TB_M-6]
			WHERE KOL_CIF NOT IN ('Lunas', 'Suspect', 'WO')
			AND DIVISI NOT IN ('Pawning', 'Hasanah Card')
			GROUP BY
				LEGACY
				,NOMORCIF
		) [M-6]
		ON [CUR].[LEGACY] = [M-6].[LEGACY]
		AND [CUR].[NOMORCIF] = [M-6].[NOMORCIF]
	WHERE [CUR].[DIVISI] NOT IN ('Pawning', 'Hasanah Card');




---------------------------------------UPDATE OUTLET TUTUP---------------------------------------

	UPDATE #RESULT_TABLE
	SET
		[KODEOUTLET] = COALESCE([REMAPPING].[KODE OUTLET PENAMPUNG], [SOURCE].[KODEOUTLET])
		,[NAMAOUTLET] = COALESCE([REMAPPING].[NAMA OUTLET PENAMPUNG], [SOURCE].[NAMAOUTLET])
	FROM #RESULT_TABLE [SOURCE]
	LEFT JOIN [NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_JOIN.MAPPING.JOIN.CABANG_TUTUP] [REMAPPING]
		ON [SOURCE].[KODEOUTLET] = [REMAPPING].[KODEOUTLET]
	WHERE [REMAPPING].[KODE OUTLET PENAMPUNG] IS NOT NULL;

	UPDATE #RESULT_TABLE
	SET
		[NAMAOUTLET] = COALESCE([REMAPPING].[Nama Outlet], [SOURCE].[NAMAOUTLET])
		,[AREA] = COALESCE([REMAPPING].[Nama Area], [SOURCE].[AREA])
		,[REGION] = COALESCE([REMAPPING].[Nama RO], [SOURCE].[REGION])
	FROM #RESULT_TABLE [SOURCE]
	LEFT JOIN [NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_JOIN.MAPPING.JOIN.CABANG_BSI_UPDATE] [REMAPPING]
		ON [SOURCE].[KODEOUTLET] = [REMAPPING].[Kode Outlet];

---------------------------------------RINCIAN AGUNAN---------------------------------------

	SELECT
		MAX([DETAIL].AS_OF_DT) AS TGL_UPDATE_DATA
		,[LINK].NOLOAN
		,MIN(
		CASE
			WHEN [DETAIL].JENISAGUNAN IN (
				'Apartemen / Rumah Susun'
				,'Rumah Tinggal'
				,'Tanah/Bangunan - Bangunan Gudang'
				,'Tanah/Bangunan - Bangunan Pabrik'
				,'Tanah/Bangunan - Gdg Perktr/Pertoko'
				,'Tanah/Bangunan - Ruko/Rukan'
				,'Tanah/Bangunan - Rumah/Rusun/Mess'
				,'Tanah/Bangunan - Tanah'
			)
			OR [DETAIL].JENISAGUNAN IN (
				'Kendaraan - Kapal Laut < 20m3'
				,'Kendaraan - Kapal Laut > 20m3'
				,'Kendaraan - Kendaraan Lainnya'
				,'Kendaraan - Mesin-mesin'
				,'Kendaraan - Mobil'
				,'Kendaraan - Pesawat'
				,'Kendaraan Komersil (Mobil Box, Truk'
				,'Kendaraan Pribadi'
				,'Kendaran - Motor'
			)
			OR [DETAIL].JENISAGUNAN IN ('CC - Emas (Logam Mulia)', 'CC - Emas (Non Logam Mulia)') THEN 'Fixed Asset'
			ELSE 'Non Fixed Asset'
		END) AS FlagAgunan

		,MIN(
		CASE
			WHEN
				(
					[DETAIL].JENISAGUNAN IN (
						'Apartemen / Rumah Susun'
						,'Rumah Tinggal'
						,'Tanah/Bangunan - Bangunan Gudang'
						,'Tanah/Bangunan - Bangunan Pabrik'
						,'Tanah/Bangunan - Gdg Perktr/Pertoko'
						,'Tanah/Bangunan - Ruko/Rukan'
						,'Tanah/Bangunan - Rumah/Rusun/Mess'
						,'Tanah/Bangunan - Tanah'
					)
					AND [DETAIL].JENISPENGIKATAN = 'Hak Tanggungan'
				)
			OR
				(
						[DETAIL].JENISAGUNAN IN (
						'Kendaraan - Kapal Laut < 20m3'
						,'Kendaraan - Kapal Laut > 20m3'
						,'Kendaraan - Kendaraan Lainnya'
						,'Kendaraan - Mesin-mesin'
						,'Kendaraan - Mobil'
						,'Kendaraan - Pesawat'
						,'Kendaraan Komersil (Mobil Box, Truk'
						,'Kendaraan Pribadi'
						,'Kendaran - Motor'
					)
					AND [DETAIL].JENISPENGIKATAN = 'Fiduciare Eigendom Overdracht (FEO)'
				)
			OR ([DETAIL].JENISAGUNAN IN ('CC - Emas (Logam Mulia)', 'CC - Emas (Non Logam Mulia)') AND [DETAIL].JENISPENGIKATAN = 'Gadai')
			THEN 'Secured'
			ELSE 'Unsecured'
		END) AS FlagPembiayaan
		,CAST(SUM([DETAIL].NILAIPASAR*([LINK].PERCENALLOC/100.00)) AS DECIMAL(32, 2)) AS NILAIPASARALLOC
		,CAST(SUM([DETAIL].NILAIPENGIKATAN*([LINK].PERCENALLOC/100.00)) AS DECIMAL(32, 2)) AS NILAIPENGIKATANALLOC
		,CAST(SUM([DETAIL].NILAILIKUIDITAS*([LINK].PERCENALLOC/100.00)) AS DECIMAL(32, 2)) AS NILAILIKUIDITASALLOC
		,CAST(SUM([DETAIL].NILAIASURANSI*([LINK].PERCENALLOC/100.00)) AS DECIMAL(32, 2)) AS NILAIASURANSIALLOC
		,CAST(SUM(
			CASE
				WHEN [DETAIL].JENISAGUNAN IN (
					'Apartemen / Rumah Susun'
					,'Rumah Tinggal'
					,'Tanah/Bangunan - Bangunan Gudang'
					,'Tanah/Bangunan - Bangunan Pabrik'
					,'Tanah/Bangunan - Gdg Perktr/Pertoko'
					,'Tanah/Bangunan - Ruko/Rukan'
					,'Tanah/Bangunan - Rumah/Rusun/Mess'
					,'Tanah/Bangunan - Tanah'
				)
				OR [DETAIL].JENISAGUNAN IN (
					'Kendaraan - Kapal Laut < 20m3'
					,'Kendaraan - Kapal Laut > 20m3'
					,'Kendaraan - Kendaraan Lainnya'
					,'Kendaraan - Mesin-mesin'
					,'Kendaraan - Mobil'
					,'Kendaraan - Pesawat'
					,'Kendaraan Komersil (Mobil Box, Truk'
					,'Kendaraan Pribadi'
					,'Kendaran - Motor'
				)
				OR [DETAIL].JENISAGUNAN IN ('CC - Emas (Logam Mulia)', 'CC - Emas (Non Logam Mulia)') THEN [DETAIL].NILAIPASAR*([LINK].PERCENALLOC/100.00)
			END
		) AS DECIMAL(32, 2)) AS NILAIPASARFIXEDASSET
		,CAST(SUM(
			CASE
				WHEN [DETAIL].JENISAGUNAN IN (
					'Apartemen / Rumah Susun'
					,'Rumah Tinggal'
					,'Tanah/Bangunan - Bangunan Gudang'
					,'Tanah/Bangunan - Bangunan Pabrik'
					,'Tanah/Bangunan - Gdg Perktr/Pertoko'
					,'Tanah/Bangunan - Ruko/Rukan'
					,'Tanah/Bangunan - Rumah/Rusun/Mess'
					,'Tanah/Bangunan - Tanah'
				)
				OR [DETAIL].JENISAGUNAN IN (
					'Kendaraan - Kapal Laut < 20m3'
					,'Kendaraan - Kapal Laut > 20m3'
					,'Kendaraan - Kendaraan Lainnya'
					,'Kendaraan - Mesin-mesin'
					,'Kendaraan - Mobil'
					,'Kendaraan - Pesawat'
					,'Kendaraan Komersil (Mobil Box, Truk'
					,'Kendaraan Pribadi'
					,'Kendaran - Motor'
				)
				OR [DETAIL].JENISAGUNAN IN ('CC - Emas (Logam Mulia)', 'CC - Emas (Non Logam Mulia)') THEN [DETAIL].NILAIPENGIKATAN*([LINK].PERCENALLOC/100.00)
			END
		) AS DECIMAL(32, 2)) AS NILAIPENGIKATANFIXEDASSET
		,CAST(SUM(
			CASE
				WHEN [DETAIL].JENISAGUNAN IN (
					'Apartemen / Rumah Susun'
					,'Rumah Tinggal'
					,'Tanah/Bangunan - Bangunan Gudang'
					,'Tanah/Bangunan - Bangunan Pabrik'
					,'Tanah/Bangunan - Gdg Perktr/Pertoko'
					,'Tanah/Bangunan - Ruko/Rukan'
					,'Tanah/Bangunan - Rumah/Rusun/Mess'
					,'Tanah/Bangunan - Tanah'
				)
				OR [DETAIL].JENISAGUNAN IN (
					'Kendaraan - Kapal Laut < 20m3'
					,'Kendaraan - Kapal Laut > 20m3'
					,'Kendaraan - Kendaraan Lainnya'
					,'Kendaraan - Mesin-mesin'
					,'Kendaraan - Mobil'
					,'Kendaraan - Pesawat'
					,'Kendaraan Komersil (Mobil Box, Truk'
					,'Kendaraan Pribadi'
					,'Kendaran - Motor'
				)
				OR [DETAIL].JENISAGUNAN IN ('CC - Emas (Logam Mulia)', 'CC - Emas (Non Logam Mulia)') THEN [DETAIL].NILAILIKUIDITAS*([LINK].PERCENALLOC/100.00)
			END
		) AS DECIMAL(32, 2)) AS NILAILIKUIDITASFIXEDASSET
		,CAST(SUM(
			CASE
				WHEN [DETAIL].JENISAGUNAN IN (
					'Apartemen / Rumah Susun'
					,'Rumah Tinggal'
					,'Tanah/Bangunan - Bangunan Gudang'
					,'Tanah/Bangunan - Bangunan Pabrik'
					,'Tanah/Bangunan - Gdg Perktr/Pertoko'
					,'Tanah/Bangunan - Ruko/Rukan'
					,'Tanah/Bangunan - Rumah/Rusun/Mess'
					,'Tanah/Bangunan - Tanah'
				)
				OR [DETAIL].JENISAGUNAN IN (
					'Kendaraan - Kapal Laut < 20m3'
					,'Kendaraan - Kapal Laut > 20m3'
					,'Kendaraan - Kendaraan Lainnya'
					,'Kendaraan - Mesin-mesin'
					,'Kendaraan - Mobil'
					,'Kendaraan - Pesawat'
					,'Kendaraan Komersil (Mobil Box, Truk'
					,'Kendaraan Pribadi'
					,'Kendaran - Motor'
				)
				OR [DETAIL].JENISAGUNAN IN ('CC - Emas (Logam Mulia)', 'CC - Emas (Non Logam Mulia)') THEN [DETAIL].NILAIASURANSI*([LINK].PERCENALLOC/100.00)
			END
		) AS DECIMAL(32, 2)) AS NILAIASURANSIFIXEDASSET
		
		,COUNT([DETAIL].IDCOLL) AS JMLAGUNAN
	INTO #TEMP_AGUNAN
	FROM
		[NEW_BSI_COLLECTION].dbo.[PORTOFOLIO_ONBS.DATABASE.BSM.AGUNAN_LINK] [LINK]
	LEFT JOIN
		[NEW_BSI_COLLECTION].dbo.[PORTOFOLIO_ONBS.DATABASE.BSM.AGUNAN_DETAIL] [DETAIL]
		ON [LINK].IDCOLL = [DETAIL].IDCOLL
	GROUP BY
		[LINK].NOLOAN;

	WITH CTE AS
	(
		SELECT
			[LINK].NOLOAN
			,[DETAIL].IDCOLL
			,[DETAIL].JENISAGUNAN
			,[DETAIL].JENISPENGIKATAN
			,[DETAIL].ALAMAT_AGUNAN
			,[DETAIL].BUKTIKEPEMILIKAN
			,ROW_NUMBER() OVER (
				PARTITION BY
					[LINK].NOLOAN
				ORDER BY
					[DETAIL].AS_OF_DT DESC
					,[DETAIL].NILAIPASAR*([LINK].PERCENALLOC/100.00) DESC
			) AS ACCT

		FROM
			[NEW_BSI_COLLECTION].dbo.[PORTOFOLIO_ONBS.DATABASE.BSM.AGUNAN_LINK] [LINK]
		LEFT JOIN
			[NEW_BSI_COLLECTION].dbo.[PORTOFOLIO_ONBS.DATABASE.BSM.AGUNAN_DETAIL] [DETAIL]
			ON [LINK].IDCOLL = [DETAIL].IDCOLL
	) SELECT * INTO #AGUNAN_TERBESAR FROM CTE WHERE ACCT = 1;

	UPDATE #RESULT_TABLE
	SET
		[(AGUNAN) TGL_UPDATE_DATA] = [AGUNAN].TGL_UPDATE_DATA
		,[(AGUNAN) KODEAGUNANTERBESAR] = [MAX_AGUNAN].IDCOLL
		,[(AGUNAN) JENISAGUNANTERBESAR] = [MAX_AGUNAN].JENISAGUNAN
		,[(AGUNAN) JENISPENGIKATANTERBESAR] = [MAX_AGUNAN].JENISPENGIKATAN
		,[(AGUNAN) ALAMATAGUNANTERBESAR] = [MAX_AGUNAN].ALAMAT_AGUNAN
		,[(AGUNAN) BUKTIKEPEMILIKANTERBESAR] = [MAX_AGUNAN].BUKTIKEPEMILIKAN
		,[(AGUNAN) FlagAgunanLOAN] = COALESCE([AGUNAN].FlagAgunan, 'Tidak Ada Agunan')
		,[(AGUNAN) FlagPembiayaan] = COALESCE([AGUNAN].FlagPembiayaan, 'Tidak Ada Agunan')
		,[(AGUNAN) NILAIPASARALLOC] = [AGUNAN].NILAIPASARALLOC
		,[(AGUNAN) NILAIPENGIKATANALLOC] = [AGUNAN].NILAIPENGIKATANALLOC
		,[(AGUNAN) NILAILIKUIDITASALLOC] = [AGUNAN].NILAILIKUIDITASALLOC
		,[(AGUNAN) NILAIASURANSIALLOC] = [AGUNAN].NILAIASURANSIALLOC
		,[(AGUNAN) NILAIPASARFIXEDASSET] = [AGUNAN].NILAIPASARFIXEDASSET
		,[(AGUNAN) NILAIPENGIKATANFIXEDASSET] = [AGUNAN].NILAIPENGIKATANFIXEDASSET
		,[(AGUNAN) NILAILIKUIDITASFIXEDASSET] = [AGUNAN].NILAILIKUIDITASFIXEDASSET
		,[(AGUNAN) NILAIASURANSIFIXEDASSET] = [AGUNAN].NILAIASURANSIFIXEDASSET
		,[(AGUNAN) %_CCR] = [AGUNAN].NILAIPASARALLOC / NULLIF(CAST(NULLIF([PORTO].[OS_POKOK_PSAK_CURRENT], 0) AS DECIMAL(32, 2)), CAST(1 AS NUMERIC(32, 2)))
	FROM
		#RESULT_TABLE [PORTO]
	LEFT JOIN #TEMP_AGUNAN [AGUNAN]
		ON [PORTO].[NOLOAN] = [AGUNAN].NOLOAN
	LEFT JOIN #AGUNAN_TERBESAR [MAX_AGUNAN]
		ON [PORTO].[NOLOAN] = [MAX_AGUNAN].NOLOAN;

	DROP TABLE #TEMP_AGUNAN;
	DROP TABLE #AGUNAN_TERBESAR;
	
-------------------------------------XXXX-------------------------------------

	SELECT
		*
	FROM #RESULT_TABLE

  -- routine body goes here, e.g.
  -- SELECT 'Navicat for SQL Server'
END
GO
