BEGIN TRY
	CREATE TABLE [report].[NOMINASI_WO.UPDATE] (
		[TGL_BL] DATE
		,[TGL_UPDATE] DATE
		,[NOLOAN] VARCHAR(255)
		,[NOMORCIF] VARCHAR(255)
		,[SUPERCIF] VARCHAR(255)
		,[NAMANASABAH] VARCHAR(255)
		,[KODECABANG_BSI] VARCHAR(255)
		,[NAMACABANG_BSI] VARCHAR(255)
		,[AREA_BSI] VARCHAR(255)
		,[REGION_BSI] VARCHAR(255)
		,[DIVISI_BSI] VARCHAR(255)
		,[PRODUK] VARCHAR(255)
		,[PRODUK_DETAIL] VARCHAR(255)
		,[DPD_BL] INTEGER
		,[TANGGAL_CAIR_BL] DATE
		,[TANGGAL_RESTRUKTUR_BL] DATE
		,[FLAG_RESTRUKTUR_BL] VARCHAR(255)
		,[KOL_LOAN_BL] VARCHAR(255)
		,[KOL_CIF_BL] VARCHAR(255)
		,[KOL_SUPERCIF_BL] VARCHAR(255)
		,[KOL_TERBAIK_SUPERCIF_BL] VARCHAR(255)
		,[OS_POKOK_PSAK_BL] DECIMAL(20, 2)
		,[OS_POKOK_BL] DECIMAL(20, 2)
		,[CKPN_BL] DECIMAL(20, 2)
		,[NPWP_BL] VARCHAR(255)
		,[DPD_SUPERCIF_BL] INTEGER
		,[TANGGAL_CAIR_SUPERCIF_BL] DATE
		,[TANGGAL_RESTRUKTUR_SUPERCIF_BL] DATE
		,[OS_POKOK_PSAK_SUPERCIF_BL] DECIMAL(20, 2)
		,[OS_POKOK_SUPERCIF_BL] DECIMAL(20, 2)
		,[CKPN_SUPERCIF_BL] DECIMAL(20, 2)
		,[FLAG_NPWP_SUPERCIF_BL] VARCHAR(255)
		,[FLAG_RASIO_CKPN_SUPERCIF_BL] DECIMAL(20, 10)
		,[FLAG_REKOMENDASI_BL] VARCHAR(255)
		,[FLAG_KETERANGAN_REKOMENDASI_BL] VARCHAR(255)
		,[DPD_UPDATE] INTEGER
		,[TANGGAL_CAIR_UPDATE] DATE
		,[TANGGAL_RESTRUKTUR_UPDATE] DATE
		,[FLAG_RESTRUKTUR_UPDATE] VARCHAR(255)
		,[KOL_LOAN_UPDATE] VARCHAR(255)
		,[KOL_CIF_UPDATE] VARCHAR(255)
		,[KOL_SUPERCIF_UPDATE] VARCHAR(255)
		,[KOL_TERBAIK_SUPERCIF_UPDATE] VARCHAR(255)
		,[OS_POKOK_PSAK_UPDATE] DECIMAL(20, 2)
		,[OS_POKOK_UPDATE] DECIMAL(20, 2)
		,[CKPN_UPDATE] DECIMAL(20, 2)
		,[NPWP_UPDATE] VARCHAR(255)
		,[DPD_SUPERCIF_UPDATE] INTEGER
		,[TANGGAL_CAIR_SUPERCIF_UPDATE] DATE
		,[TANGGAL_RESTRUKTUR_SUPERCIF_UPDATE] DATE
		,[FLAG_RESTRUKTUR SCIF] VARCHAR(255)
		,[OS_POKOK_PSAK_SUPERCIF_UPDATE] DECIMAL(20, 2)
		,[OS_POKOK_SUPERCIF_UPDATE] DECIMAL(20, 2)
		,[CKPN_SUPERCIF_UPDATE] DECIMAL(20, 2)
		,[FLAG_NPWP_SUPERCIF_UPDATE] VARCHAR(255)
		,[FLAG_RASIO_CKPN_SUPERCIF_UPDATE] DECIMAL(20, 10)
		,[FLAG_REKOMENDASI_UPDATE] VARCHAR(255)
		,[FLAG_KETERANGAN_REKOMENDASI_UPDATE] VARCHAR(255)
		,[FLAG_REKOMENDASI_UPDATE SCIF] VARCHAR(255)
		,[FLAG_KETERANGAN_REKOMENDASI_UPDATE SCIF] VARCHAR(255)
		,[Flag CKPN BL SCIF] VARCHAR(255)
		,[Flag BtB] VARCHAR(255)
		,[Flag OS Sys khusus Flag BtB] VARCHAR(255)
		,[Keterangan Nota] VARCHAR(255)
		,[Flag OS Sys SCIF] VARCHAR(255)
		,[Flag Pawning] VARCHAR(255)
	);
END TRY
BEGIN CATCH
END CATCH

TRUNCATE TABLE [report].[NOMINASI_WO.UPDATE];

INSERT INTO [report].[NOMINASI_WO.UPDATE]
SELECT
	[BL].[TGL_DATA] [TGL_BL]
	,[CUR].[TGL_DATA] [TGL_UPDATE]
	,COALESCE([CUR].[NOLOAN], [BL].[NOLOAN]) [NOLOAN]
	,COALESCE([CUR].[NOMORCIF], [BL].[NOMORCIF]) [NOMORCIF]
	,COALESCE([CUR].[SUPERCIF], [BL].[SUPERCIF]) [SUPERCIF]
	,COALESCE([CUR].[NAMANASABAH], [BL].[NAMANASABAH]) [NAMANASABAH]
	,COALESCE([CUR].[KODECABANG], [BL].[KODECABANG]) [KODECABANG_BSI]
	,COALESCE([CUR].[NAMACABANG], [BL].[NAMACABANG]) [NAMACABANG_BSI]
	,COALESCE([CUR].[AREA], [BL].[AREA]) [AREA_BSI]
	,COALESCE([CUR].[REGION], [BL].[REGION]) [REGION_BSI]
	,COALESCE([CUR].[DIVISI], [BL].[DIVISI]) [DIVISI_BSI]
	,COALESCE([CUR].[PRODUK], [BL].[PRODUK]) [PRODUK]
	,COALESCE([CUR].[PRODUK_DETAIL], [BL].[PRODUK_DETAIL]) [PRODUK_DETAIL]
	,[BL].[DPD] [DPD_BL]
	,[BL].[TANGGAL_CAIR] [TANGGAL_CAIR_BL]
	,NULL [TANGGAL_RESTRUKTUR_BL]
	,NULL [FLAG_RESTRUKTUR_BL]
	,COALESCE([BL].[KOL_LOAN], 'CAIR BARU') [KOL_LOAN_BL]
	,COALESCE([BL].[KOL_CIF], 'CAIR BARU') [KOL_CIF_BL]
	,COALESCE([BL].[KOL_SUPERCIF], [M_1].[KOL_SUPERCIF], 'CAIR BARU') [KOL_SUPERCIF_BL]
	,NULL [KOL_TERBAIK_SUPERCIF_BL]
	,[BL].[OS_POKOK_PSAK] [OS_POKOK_PSAK_BL]
	,[BL].[OS_POKOK_PSAK] [OS_POKOK_BL]
	,[BL].[CKPN] [CKPN_BL]
	,NULL [NPWP_BL]
	,NULL [DPD_SUPERCIF_BL]
	,NULL [TANGGAL_CAIR_SUPERCIF_BL]
	,NULL [TANGGAL_RESTRUKTUR_SUPERCIF_BL]
	,NULL [OS_POKOK_PSAK_SUPERCIF_BL]
	,NULL [OS_POKOK_SUPERCIF_BL]
	,NULL [CKPN_SUPERCIF_BL]
	,NULL [FLAG_NPWP_SUPERCIF_BL]
	,NULL [FLAG_RASIO_CKPN_SUPERCIF_BL]
	,NULL [FLAG_REKOMENDASI_BL]
	,NULL [FLAG_KETERANGAN_REKOMENDASI_BL]
	,[CUR].[DPD] [DPD_UPDATE]
	,[CUR].[TANGGAL_CAIR] [TANGGAL_CAIR_UPDATE]
	,NULL [TANGGAL_RESTRUKTUR_UPDATE]
	,NULL [FLAG_RESTRUKTUR_UPDATE]
	,COALESCE([CUR].[KOL_LOAN], [CHECK_BUKA_TUTUP].[FLAG], [CHECK_WO].[FLAG], 'Lunas') [KOL_LOAN_UPDATE]
	,COALESCE([CUR].[KOL_CIF], [CHECK_BUKA_TUTUP].[FLAG], [CHECK_WO].[FLAG], 'Lunas') [KOL_CIF_UPDATE]
	,COALESCE([CUR].[KOL_SUPERCIF], [CHECK_BUKA_TUTUP].[FLAG], [CHECK_WO].[FLAG], 'Lunas') [KOL_SUPERCIF_UPDATE]
	,NULL[KOL_TERBAIK_SUPERCIF_UPDATE]
	,[CUR].[OS_POKOK_PSAK] [OS_POKOK_PSAK_UPDATE]
	,[CUR].[OS_POKOK] [OS_POKOK_UPDATE]
	,[CUR].[CKPN] [CKPN_UPDATE]
	,NULL [NPWP_UPDATE]
	,NULL [DPD_SUPERCIF_UPDATE]
	,NULL [TANGGAL_CAIR_SUPERCIF_UPDATE]
	,NULL [TANGGAL_RESTRUKTUR_SUPERCIF_UPDATE]
	,NULL [FLAG_RESTRUKTUR SCIF_UPDATE]
	,NULL [OS_POKOK_PSAK_SUPERCIF_UPDATE]
	,NULL [OS_POKOK_SUPERCIF_UPDATE]
	,NULL [CKPN_SUPERCIF_UPDATE]
	,NULL [FLAG_NPWP_SUPERCIF_UPDATE]
	,NULL [FLAG_RASIO_CKPN_SUPERCIF_UPDATE]
	,NULL [FLAG_REKOMENDASI_UPDATE]
	,NULL [FLAG_KETERANGAN_REKOMENDASI_UPDATE]
	,NULL [FLAG_REKOMENDASI_UPDATE SCIF]
	,NULL [FLAG_KETERANGAN_REKOMENDASI_UPDATE SCIF]
	,NULL [Flag CKPN BL SCIF]
	,NULL [Flag BtB]
	,NULL [Flag OS Sys khusus Flag BtB]
	,NULL [Keterangan Nota]
	,NULL [Flag OS Sys SCIF]
	,NULL [Flag Pawning]
FROM [series].[RCG.LOAN_DAILY.2023-08-06] [CUR]
FULL OUTER JOIN [series].[RCG.LOAN_DAILY.2023-07-31 (FINAL)] [BL]
	ON [CUR].[NOLOAN] IN ([BL].[NOLOAN])
OUTER APPLY (
	SELECT
		MAX(CASE WHEN [NOLOAN_BARU] IS NOT NULL THEN 'BUKA TUTUP' END) [FLAG]
	FROM [mapping].[PORTOFOLIO_ONBS.COMPILE.JOIN.REKAP_NOLOAN.MUTASI_NOLOAN]
	WHERE [NOLOAN_LAMA] = [BL].[NOLOAN]
	AND COALESCE([KETERANGAN], 'X') NOT IN ('Invalid', 'EKSEKUSI WO')
) [CHECK_BUKA_TUTUP]
OUTER APPLY (
	SELECT
		MAX(CASE WHEN [NOLOAN_WO] IS NOT NULL THEN 'EKSEKUSI WO' END) [FLAG]
		,SUM(CASE WHEN [NOLOAN_WO] IS NOT NULL THEN [BAKI_DEBET_IDR] END) [EKSEKUSI_WO]
	FROM [mapping].[PORTOFOLIO_ONBS.DATABASE.JOIN.EKSEKUSI_WO]
	WHERE [NOLOAN] = [BL].[NOLOAN]
	AND [NOCIF] = [BL].[NOMORCIF]
) [CHECK_WO]
OUTER APPLY (
	SELECT
		COALESCE(MAX([BY_LOAN]), MAX([BY_CIF]) , MAX([BY_SUPERCIF])) [KOL_SUPERCIF]
	FROM (
		SELECT
			CASE WHEN [NOLOAN] IN (
				SELECT
					[NOLOAN_LAMA]
				FROM [mapping].[PORTOFOLIO_ONBS.COMPILE.JOIN.REKAP_NOLOAN.MUTASI_NOLOAN]
				WHERE [NOLOAN_BARU] = [CUR].[NOLOAN]
				AND COALESCE([KETERANGAN], 'X') NOT IN ('Invalid')
			) OR [NOLOAN] = COALESCE([CUR].[NOLOAN], 'X') THEN [KOL_SUPERCIF] END [BY_LOAN]
			,CASE WHEN [NOMORCIF] = [CUR].[NOMORCIF] THEN [KOL_SUPERCIF] END [BY_CIF]
			,[KOL_SUPERCIF] [BY_SUPERCIF]
		FROM [series].[RCG.LOAN_DAILY.2023-07-31 (FINAL)]
		WHERE [CUR].[SUPERCIF] = [SUPERCIF]
			AND [CUR].[DIVISI] = [DIVISI]
	) [SUB]
) [M_1]
WHERE COALESCE([CUR].[SUPERCIF], [BL].[SUPERCIF]) IN (
	SELECT
		[SUPERCIF]
	FROM [series].[RCG.LOAN_DAILY.2023-08-06]
	WHERE COALESCE(LEFT([KOL_SUPERCIF], 1), '1') IN ('3', '4', '5') AND [DIVISI] IN ('Hasanah Card', 'Konsumer', 'Pawning', 'SME', 'Mikro')
	GROUP BY
		[SUPERCIF]
	
	UNION
	
	SELECT
		[SUPERCIF]
	FROM [series].[RCG.LOAN_DAILY.2023-07-31 (FINAL)]
	WHERE COALESCE(LEFT([KOL_SUPERCIF], 1), '1') IN ('3', '4', '5') AND [DIVISI] IN ('Hasanah Card', 'Konsumer', 'Pawning', 'SME', 'Mikro')
	GROUP BY
		[SUPERCIF]
)
OR COALESCE([CUR].[NOMORCIF], [BL].[NOMORCIF]) IN (
	SELECT
		[NOMORCIF]
	FROM [series].[RCG.LOAN_DAILY.2023-08-06]
	WHERE COALESCE(LEFT([KOL_SUPERCIF], 1), '1') IN ('3', '4', '5') AND [DIVISI] IN ('Hasanah Card', 'Konsumer', 'Pawning', 'SME', 'Mikro')
	GROUP BY
		[NOMORCIF]
	
	UNION
	
	SELECT
		[NOMORCIF]
	FROM [series].[RCG.LOAN_DAILY.2023-07-31 (FINAL)]
	WHERE COALESCE(LEFT([KOL_SUPERCIF], 1), '1') IN ('3', '4', '5') AND [DIVISI] IN ('Hasanah Card', 'Konsumer', 'Pawning', 'SME', 'Mikro')
	GROUP BY
		[NOMORCIF]
)
OR COALESCE([CUR].[NOLOAN], [BL].[NOLOAN]) IN (
	SELECT
		[NOLOAN]
	FROM [series].[RCG.LOAN_DAILY.2023-08-06]
	WHERE COALESCE(LEFT([KOL_SUPERCIF], 1), '1') IN ('3', '4', '5') AND [DIVISI] IN ('Hasanah Card', 'Konsumer', 'Pawning', 'SME', 'Mikro')
	GROUP BY
		[NOLOAN]
	
	UNION
	
	SELECT
		[NOLOAN]
	FROM [series].[RCG.LOAN_DAILY.2023-07-31 (FINAL)]
	WHERE COALESCE(LEFT([KOL_SUPERCIF], 1), '1') IN ('3', '4', '5') AND [DIVISI] IN ('Hasanah Card', 'Konsumer', 'Pawning', 'SME', 'Mikro')
	GROUP BY
		[NOLOAN]
);

--------------------------------------------------------------------------------

UPDATE [report].[NOMINASI_WO.UPDATE]
SET
	[NPWP_BL] = [IFOIS].[TAX_ID]
	,[TANGGAL_RESTRUKTUR_BL] = TRY_CAST([IFOIS].[RESTRUCTDATE] AS DATE)
FROM [report].[NOMINASI_WO.UPDATE] [TARGET]
LEFT JOIN [series].[IFOIS.LOAN_DAILY.2023-07-31] [IFOIS]
	ON [TARGET].[NOLOAN] = [IFOIS].[NOLOAN];

UPDATE [report].[NOMINASI_WO.UPDATE]
SET
	[NPWP_UPDATE] = [IFOIS].[TAX_ID]
	,[TANGGAL_RESTRUKTUR_UPDATE] = TRY_CAST([IFOIS].[RESTRUCTDATE] AS DATE)
FROM [report].[NOMINASI_WO.UPDATE] [TARGET]
LEFT JOIN [series].[IFOIS.LOAN_DAILY.2023-08-06] [IFOIS]
	ON [TARGET].[NOLOAN] = [IFOIS].[NOLOAN];

--------------------------------------------------------------------------------

UPDATE [report].[NOMINASI_WO.UPDATE]
SET
	[TANGGAL_RESTRUKTUR_BL] = COALESCE([TARGET].[TANGGAL_RESTRUKTUR_BL], CASE WHEN [SOURCE].[RESTRUCTDATE] <= [TGL_BL] THEN [SOURCE].[RESTRUCTDATE] END)
	,[TANGGAL_RESTRUKTUR_UPDATE] = COALESCE([TARGET].[TANGGAL_RESTRUKTUR_UPDATE], CASE WHEN [SOURCE].[RESTRUCTDATE] <= [TGL_UPDATE] THEN [SOURCE].[RESTRUCTDATE] END)
FROM [report].[NOMINASI_WO.UPDATE] [TARGET]
OUTER APPLY (
	SELECT
		MAX(RESTRUCTDATE) AS RESTRUCTDATE
	FROM [NEW_BSI_COLLECTION].[dbo].[PORTOFOLIO_ONBS.COMPILE.JOIN.REKAP_NOLOAN.RESTRU]
	WHERE [TARGET].[NOLOAN] = [NOLOAN]
	AND [LEGACY] = 'BSM'
	GROUP BY
		[NOLOAN]
	) [SOURCE];

--------------------------------------------------------------------------------

UPDATE [report].[NOMINASI_WO.UPDATE]
SET
	[FLAG_RESTRUKTUR_BL] = [CRG].[Data_Restru_LSMK]
	,[TANGGAL_RESTRUKTUR_BL] = CASE WHEN [CRG].[Data_Restru_LSMK] IS NOT NULL THEN [TARGET].[TANGGAL_RESTRUKTUR_BL] END
FROM [report].[NOMINASI_WO.UPDATE] [TARGET]
LEFT JOIN [series].[CRG.LOAN_DAILY.2023-07-31] [CRG]
	ON [TARGET].[NOLOAN] = [CRG].[NOLOAN];

UPDATE [report].[NOMINASI_WO.UPDATE]
SET
	[FLAG_RESTRUKTUR_UPDATE] = [CRG].[Data_Restru_LSMK]
	,[TANGGAL_RESTRUKTUR_UPDATE] = CASE WHEN [CRG].[Data_Restru_LSMK] IS NOT NULL THEN [TARGET].[TANGGAL_RESTRUKTUR_UPDATE] END
FROM [report].[NOMINASI_WO.UPDATE] [TARGET]
LEFT JOIN [series].[CRG.LOAN_DAILY.2023-07-31] [CRG]
	ON [TARGET].[NOLOAN] = [CRG].[NOLOAN];

--------------------------------------------------------------------------------

UPDATE [report].[NOMINASI_WO.UPDATE]
SET
	[KOL_TERBAIK_SUPERCIF_BL] = COALESCE([SUPERCIF].[KOL_SUPERCIF_MIN], [TARGET].[KOL_SUPERCIF_BL])
	,[DPD_SUPERCIF_BL] = [SUPERCIF].[DPD]
	,[TANGGAL_CAIR_SUPERCIF_BL] = [SUPERCIF].[TANGGAL_CAIR]
	,[TANGGAL_RESTRUKTUR_SUPERCIF_BL] = [SUPERCIF].[TANGGAL_RESTRUKTUR]
	,[OS_POKOK_PSAK_SUPERCIF_BL] = [SUPERCIF].[OS_POKOK_PSAK]
	,[OS_POKOK_SUPERCIF_BL] = [SUPERCIF].[OS_POKOK]
	,[CKPN_SUPERCIF_BL] = [SUPERCIF].[CKPN]
	,[FLAG_NPWP_SUPERCIF_BL] = [SUPERCIF].[NPWP]
FROM [report].[NOMINASI_WO.UPDATE] [TARGET]
OUTER APPLY
	(
		SELECT
			SUM([SOURCE].[OS_POKOK_PSAK_BL]) AS [OS_POKOK_PSAK]
			,SUM([SOURCE].[OS_POKOK_BL]) AS [OS_POKOK]
			,SUM([SOURCE].[CKPN_BL]) AS [CKPN]
			,MAX([SOURCE].[DPD_BL]) AS [DPD]
			,MAX([SOURCE].[TANGGAL_CAIR_BL]) AS [TANGGAL_CAIR]
			,MAX([SOURCE].[TANGGAL_RESTRUKTUR_BL]) AS [TANGGAL_RESTRUKTUR]
			,MIN([SOURCE].[KOL_SUPERCIF_BL]) AS [KOL_SUPERCIF_MIN]
			,MIN([FLAG].[NPWP]) AS [NPWP]
		FROM [report].[NOMINASI_WO.UPDATE] [SOURCE]
		OUTER APPLY (
			SELECT
				CASE
					WHEN [SOURCE].NPWP_BL IN (SELECT NPWP FROM [NEW_BSI_DEV].[dbo].[FILTER.ANOMALI.INVALID_NPWP]) THEN '02. NPWP Invalid'
					WHEN [SOURCE].NPWP_BL IS NOT NULL THEN '01. Ada NPWP'
					ELSE '03. Tidak ada NPWP'
				END AS [NPWP]
		) [FLAG]
		WHERE [TARGET].[SUPERCIF] = [SOURCE].[SUPERCIF]
		AND LEFT([SOURCE].[KOL_SUPERCIF_BL], 1) IN ('1', '2', '3', '4', '5')
		GROUP BY
			[SOURCE].[SUPERCIF]
	) [SUPERCIF];
	
UPDATE [report].[NOMINASI_WO.UPDATE]
SET
	FLAG_RASIO_CKPN_SUPERCIF_BL = [CKPN_SUPERCIF_BL] / COALESCE(NULLIF([OS_POKOK_PSAK_SUPERCIF_BL], 0.00), NULLIF([CKPN_SUPERCIF_BL], 0.00), 1.00);
	
-----------------------------------------FLAGGING-----------------------------------------

UPDATE [report].[NOMINASI_WO.UPDATE]
SET
	FLAG_REKOMENDASI_BL =
		CASE
			WHEN LEFT(KOL_SUPERCIF_BL, 1) IN ('1', '2', '3', '4') THEN '01. Tidak Eligible WO'
			WHEN LEFT(KOL_SUPERCIF_BL, 1) IN ('5') AND LEFT(KOL_TERBAIK_SUPERCIF_BL, 1) IN ('1') THEN '01. Tidak Eligible WO'
			WHEN TANGGAL_RESTRUKTUR_SUPERCIF_BL BETWEEN DATEADD(MONTH, -6, TGL_BL) AND TGL_BL THEN '01. Tidak Eligible WO'
			WHEN KOL_LOAN_BL IN ('Lunas') THEN '01. Tidak Eligible WO'
			WHEN TANGGAL_CAIR_SUPERCIF_BL >= TRY_CAST(CONCAT(LEFT(DATEADD(YEAR, -2, TGL_BL), 4), '-01-01') AS DATE) THEN '01. Tidak Eligible WO'
			WHEN FLAG_NPWP_SUPERCIF_BL IN ('03. Tidak ada NPWP') THEN '01. Tidak Eligible WO'
			WHEN FLAG_NPWP_SUPERCIF_BL IN ('02. NPWP Invalid') THEN '01. Tidak Eligible WO'
			WHEN LEFT(KOL_SUPERCIF_BL, 1) IN ('5')
			AND TANGGAL_RESTRUKTUR_SUPERCIF_BL < DATEADD(MONTH, -6, TGL_BL)
			AND TANGGAL_CAIR_SUPERCIF_BL < TRY_CAST(CONCAT(LEFT(DATEADD(YEAR, -2, TGL_BL), 4), '-01-01') AS DATE)
			AND FLAG_RASIO_CKPN_SUPERCIF_BL >= 1.00
			AND FLAG_NPWP_SUPERCIF_BL IN ('01. Ada NPWP') THEN '02. Eligible 1'
			WHEN LEFT(KOL_SUPERCIF_BL, 1) IN ('5')
			AND TANGGAL_RESTRUKTUR_SUPERCIF_BL < DATEADD(MONTH, -6, TGL_BL)
			AND TANGGAL_CAIR_SUPERCIF_BL < TRY_CAST(CONCAT(LEFT(DATEADD(YEAR, -2, TGL_BL), 4), '-01-01') AS DATE)
			AND FLAG_RASIO_CKPN_SUPERCIF_BL BETWEEN 0.75 AND 1.00
			AND FLAG_NPWP_SUPERCIF_BL IN ('01. Ada NPWP') THEN '03. Eligible 2'
			WHEN LEFT(KOL_SUPERCIF_BL, 1) IN ('5')
			AND TANGGAL_RESTRUKTUR_SUPERCIF_BL < DATEADD(MONTH, -6, TGL_BL)
			AND TANGGAL_CAIR_SUPERCIF_BL < TRY_CAST(CONCAT(LEFT(DATEADD(YEAR, -2, TGL_BL), 4), '-01-01') AS DATE)
			AND FLAG_RASIO_CKPN_SUPERCIF_BL <= 0.75
			AND FLAG_NPWP_SUPERCIF_BL IN ('01. Ada NPWP') THEN '04. Eligible 3'
			ELSE 'Unidentified'
		END
	,FLAG_KETERANGAN_REKOMENDASI_BL = 
		CASE
			WHEN LEFT(KOL_SUPERCIF_BL, 1) IN ('1', '2', '3', '4') THEN 'CIF <Kol 5'
			WHEN LEFT(KOL_SUPERCIF_BL, 1) IN ('5') AND LEFT(KOL_TERBAIK_SUPERCIF_BL, 1) IN ('1') THEN 'CIF Kol 5 tapi memiliki loan dengan kolektibilitas 1'
			WHEN TANGGAL_RESTRUKTUR_SUPERCIF_BL BETWEEN DATEADD(MONTH, -6, TGL_BL) AND TGL_BL THEN 'CIF dalam masa Restruktur di 6 bulan terakhir'
			WHEN KOL_LOAN_BL IN ('Lunas') THEN 'Loan Sudah Lunas'
			WHEN TANGGAL_CAIR_SUPERCIF_BL >= TRY_CAST(CONCAT(LEFT(DATEADD(YEAR, -2, TGL_BL), 4), '-01-01') AS DATE) THEN 'CIF tahun cair ≥2021'
			WHEN FLAG_NPWP_SUPERCIF_BL IN ('03. Tidak ada NPWP') THEN 'Tidak ada NPWP'
			WHEN FLAG_NPWP_SUPERCIF_BL IN ('02. NPWP Invalid') THEN 'NPWP Invalid'
			WHEN TANGGAL_RESTRUKTUR_SUPERCIF_BL BETWEEN DATEADD(MONTH, -6, TGL_BL) AND TGL_BL THEN 'CIF dalam masa Restruktur di 6 bulan terakhir'
			WHEN KOL_LOAN_BL IN ('Lunas') THEN 'Loan Sudah Lunas'
			WHEN TANGGAL_CAIR_SUPERCIF_BL >= TRY_CAST(CONCAT(LEFT(DATEADD(YEAR, -2, TGL_BL), 4), '-01-01') AS DATE) THEN 'CIF tahun cair ≥2021'
			WHEN FLAG_NPWP_SUPERCIF_BL IN ('03. Tidak ada NPWP') THEN 'Tidak ada NPWP'
			ELSE 'Unidentified'
		END;

--------------------------------------------------------------------------------

UPDATE [report].[NOMINASI_WO.UPDATE]
SET
	[KOL_TERBAIK_SUPERCIF_UPDATE] = COALESCE([SUPERCIF].[KOL_SUPERCIF_MIN], [TARGET].[KOL_SUPERCIF_UPDATE])
	,[DPD_SUPERCIF_UPDATE] = [SUPERCIF].[DPD]
	,[TANGGAL_CAIR_SUPERCIF_UPDATE] = [SUPERCIF].[TANGGAL_CAIR]
	,[TANGGAL_RESTRUKTUR_SUPERCIF_UPDATE] = [SUPERCIF].[TANGGAL_RESTRUKTUR]
	,[OS_POKOK_PSAK_SUPERCIF_UPDATE] = [SUPERCIF].[OS_POKOK_PSAK]
	,[OS_POKOK_SUPERCIF_UPDATE] = [SUPERCIF].[OS_POKOK]
	,[CKPN_SUPERCIF_UPDATE] = [SUPERCIF].[CKPN]
	,[FLAG_NPWP_SUPERCIF_UPDATE] = [SUPERCIF].[NPWP]
FROM [report].[NOMINASI_WO.UPDATE] [TARGET]
OUTER APPLY
	(
		SELECT
			SUM([SOURCE].[OS_POKOK_PSAK_UPDATE]) AS [OS_POKOK_PSAK]
			,SUM([SOURCE].[OS_POKOK_UPDATE]) AS [OS_POKOK]
			,SUM([SOURCE].[CKPN_UPDATE]) AS [CKPN]
			,MAX([SOURCE].[DPD_UPDATE]) AS [DPD]
			,MAX([SOURCE].[TANGGAL_CAIR_UPDATE]) AS [TANGGAL_CAIR]
			,MAX([SOURCE].[TANGGAL_RESTRUKTUR_UPDATE]) AS [TANGGAL_RESTRUKTUR]
			,MIN([SOURCE].[KOL_SUPERCIF_UPDATE]) AS [KOL_SUPERCIF_MIN]
			,MIN([FLAG].[NPWP]) AS [NPWP]
		FROM [report].[NOMINASI_WO.UPDATE] [SOURCE]
		OUTER APPLY (
			SELECT
				CASE
					WHEN [SOURCE].NPWP_UPDATE IN (SELECT NPWP FROM [NEW_BSI_DEV].[dbo].[FILTER.ANOMALI.INVALID_NPWP]) THEN '02. NPWP Invalid'
					WHEN [SOURCE].NPWP_UPDATE IS NOT NULL THEN '01. Ada NPWP'
					ELSE '03. Tidak ada NPWP'
				END AS [NPWP]
		) [FLAG]
		WHERE [TARGET].[SUPERCIF] = [SOURCE].[SUPERCIF]
		AND LEFT([SOURCE].[KOL_SUPERCIF_UPDATE], 1) IN ('1', '2', '3', '4', '5')
		GROUP BY
			[SOURCE].[SUPERCIF]
	) [SUPERCIF];
	
UPDATE [report].[NOMINASI_WO.UPDATE]
SET
	FLAG_RASIO_CKPN_SUPERCIF_UPDATE = [CKPN_SUPERCIF_UPDATE] / COALESCE(NULLIF([OS_POKOK_PSAK_SUPERCIF_UPDATE], 0.00), NULLIF([CKPN_SUPERCIF_UPDATE], 0.00), 1.00);
	
-----------------------------------------FLAGGING-----------------------------------------

UPDATE [report].[NOMINASI_WO.UPDATE]
SET
	FLAG_REKOMENDASI_UPDATE =
		CASE
			WHEN LEFT(KOL_SUPERCIF_UPDATE, 1) IN ('1', '2', '3', '4') THEN '01. Tidak Eligible WO'
			WHEN LEFT(KOL_SUPERCIF_UPDATE, 1) IN ('5') AND LEFT(KOL_TERBAIK_SUPERCIF_UPDATE, 1) IN ('1') THEN '01. Tidak Eligible WO'
			WHEN TANGGAL_RESTRUKTUR_SUPERCIF_UPDATE BETWEEN DATEADD(MONTH, -6, TGL_UPDATE) AND TGL_UPDATE THEN '01. Tidak Eligible WO'
			WHEN KOL_LOAN_UPDATE IN ('Lunas') THEN '01. Tidak Eligible WO'
			WHEN TANGGAL_CAIR_SUPERCIF_UPDATE >= TRY_CAST(CONCAT(LEFT(DATEADD(YEAR, -2, TGL_UPDATE), 4), '-01-01') AS DATE) THEN '01. Tidak Eligible WO'
			WHEN FLAG_NPWP_SUPERCIF_UPDATE IN ('03. Tidak ada NPWP') THEN '01. Tidak Eligible WO'
			WHEN FLAG_NPWP_SUPERCIF_UPDATE IN ('02. NPWP Invalid') THEN '01. Tidak Eligible WO'
			WHEN LEFT(KOL_SUPERCIF_UPDATE, 1) IN ('5')
			AND TANGGAL_RESTRUKTUR_SUPERCIF_UPDATE < DATEADD(MONTH, -6, TGL_UPDATE)
			AND TANGGAL_CAIR_SUPERCIF_UPDATE < TRY_CAST(CONCAT(LEFT(DATEADD(YEAR, -2, TGL_UPDATE), 4), '-01-01') AS DATE)
			AND FLAG_RASIO_CKPN_SUPERCIF_UPDATE >= 1.00
			AND FLAG_NPWP_SUPERCIF_UPDATE IN ('01. Ada NPWP') THEN '02. Eligible 1'
			WHEN LEFT(KOL_SUPERCIF_UPDATE, 1) IN ('5')
			AND TANGGAL_RESTRUKTUR_SUPERCIF_UPDATE < DATEADD(MONTH, -6, TGL_UPDATE)
			AND TANGGAL_CAIR_SUPERCIF_UPDATE < TRY_CAST(CONCAT(LEFT(DATEADD(YEAR, -2, TGL_UPDATE), 4), '-01-01') AS DATE)
			AND FLAG_RASIO_CKPN_SUPERCIF_UPDATE BETWEEN 0.75 AND 1.00
			AND FLAG_NPWP_SUPERCIF_UPDATE IN ('01. Ada NPWP') THEN '03. Eligible 2'
			WHEN LEFT(KOL_SUPERCIF_UPDATE, 1) IN ('5')
			AND TANGGAL_RESTRUKTUR_SUPERCIF_UPDATE < DATEADD(MONTH, -6, TGL_UPDATE)
			AND TANGGAL_CAIR_SUPERCIF_UPDATE < TRY_CAST(CONCAT(LEFT(DATEADD(YEAR, -2, TGL_UPDATE), 4), '-01-01') AS DATE)
			AND FLAG_RASIO_CKPN_SUPERCIF_UPDATE <= 0.75
			AND FLAG_NPWP_SUPERCIF_UPDATE IN ('01. Ada NPWP') THEN '04. Eligible 3'
			ELSE 'Unidentified'
		END
	,FLAG_KETERANGAN_REKOMENDASI_UPDATE = 
		CASE
			WHEN LEFT(KOL_SUPERCIF_UPDATE, 1) IN ('1', '2', '3', '4') THEN 'CIF <Kol 5'
			WHEN LEFT(KOL_SUPERCIF_UPDATE, 1) IN ('5') AND LEFT(KOL_TERBAIK_SUPERCIF_UPDATE, 1) IN ('1') THEN 'CIF Kol 5 tapi memiliki loan dengan kolektibilitas 1'
			WHEN TANGGAL_RESTRUKTUR_SUPERCIF_UPDATE BETWEEN DATEADD(MONTH, -6, TGL_UPDATE) AND TGL_UPDATE THEN 'CIF dalam masa Restruktur di 6 bulan terakhir'
			WHEN KOL_LOAN_UPDATE IN ('Lunas') THEN 'Loan Sudah Lunas'
			WHEN TANGGAL_CAIR_SUPERCIF_UPDATE >= TRY_CAST(CONCAT(LEFT(DATEADD(YEAR, -2, TGL_UPDATE), 4), '-01-01') AS DATE) THEN 'CIF tahun cair ≥2021'
			WHEN FLAG_NPWP_SUPERCIF_UPDATE IN ('03. Tidak ada NPWP') THEN 'Tidak ada NPWP'
			WHEN FLAG_NPWP_SUPERCIF_UPDATE IN ('02. NPWP Invalid') THEN 'NPWP Invalid'
			WHEN TANGGAL_RESTRUKTUR_SUPERCIF_UPDATE BETWEEN DATEADD(MONTH, -6, TGL_UPDATE) AND TGL_UPDATE THEN 'CIF dalam masa Restruktur di 6 bulan terakhir'
			WHEN KOL_LOAN_UPDATE IN ('Lunas') THEN 'Loan Sudah Lunas'
			WHEN TANGGAL_CAIR_SUPERCIF_UPDATE >= TRY_CAST(CONCAT(LEFT(DATEADD(YEAR, -2, TGL_UPDATE), 4), '-01-01') AS DATE) THEN 'CIF tahun cair ≥2021'
			WHEN FLAG_NPWP_SUPERCIF_UPDATE IN ('03. Tidak ada NPWP') THEN 'Tidak ada NPWP'
			ELSE 'Unidentified'
		END;
		
-----------------------------------------FLAGGING-----------------------------------------

UPDATE [report].[NOMINASI_WO.UPDATE]
SET
	[Flag CKPN BL SCIF] =
		CASE
			WHEN FLAG_RASIO_CKPN_SUPERCIF_BL < 0.75 THEN '< 75%'
			WHEN FLAG_RASIO_CKPN_SUPERCIF_BL >= 0.75 AND FLAG_RASIO_CKPN_SUPERCIF_BL < 1 THEN '75%<x<100%'
			WHEN FLAG_RASIO_CKPN_SUPERCIF_BL >=  1 THEN '≥ 100%'
		END
	,[Flag BtB] = CASE WHEN [PRODUK] IN ('Linkage') THEN 'BtB' END;
	
UPDATE [report].[NOMINASI_WO.UPDATE]
SET
	[Flag OS Sys khusus Flag BtB] =
		CASE
			WHEN [TARGET].[Flag BtB] IN ('BtB') AND [SUPERCIF].[OS_POKOK_BtB] < 1500000000 THEN '< 1.5M'
			WHEN [TARGET].[Flag BtB] IN ('BtB') AND [SUPERCIF].[OS_POKOK_BtB] >= 1500000000 THEN '≥ 1.5M'
		END
	,[Keterangan Nota] =
		CASE
			WHEN [SUPERCIF].[OS_POKOK_BtB] < 1500000000 THEN 'Tidak Butuh Nota'
			WHEN [SUPERCIF].[OS_POKOK_BtB] >= 1500000000 THEN 'Butuh Nota'
		END
	,[Flag OS Sys SCIF] = 
		CASE
			WHEN [SUPERCIF].[OS_POKOK] < 1500000000 THEN '< 1.5M'
			WHEN [SUPERCIF].[OS_POKOK] >= 1500000000 THEN '≥ 1.5M'
		END
	,[Flag Pawning] = [SUPERCIF].[FLAG_PAWNING]
FROM [report].[NOMINASI_WO.UPDATE] [TARGET]
OUTER APPLY (
	SELECT
		SUM(CASE WHEN [Flag BtB] IN ('BtB') THEN [OS_POKOK_UPDATE] END) [OS_POKOK_BtB]
		,SUM([OS_POKOK_UPDATE]) [OS_POKOK]
		,MAX(CASE WHEN [DIVISI_BSI] IN ('Pawning') AND [KOL_LOAN_UPDATE] IN ('1') THEN 'One Obligor Pawning' END) [FLAG_PAWNING]
	FROM [report].[NOMINASI_WO.UPDATE]
	WHERE [SUPERCIF] = [TARGET].[SUPERCIF]
) [SUPERCIF]