BEGIN TRY
	CREATE TABLE [report].[FLOW_IN_FLOW_OUT] (
		[FLAG_DATA] VARCHAR(255)
		,[TGL_BEFORE] DATE
		,[TGL_CURRENT] DATE
		,[PERIODE] VARCHAR(7)
		,[TGL] INT
		,[AREA] VARCHAR(255)
		,[REGION] VARCHAR(255)
		,[DIVISI] VARCHAR(255)
		,[PRODUK] VARCHAR(255)
		,[PRODUK_DETAIL] VARCHAR(255)
		,[OS_POKOK_PSAK_BEFORE] DECIMAL(20, 2)
		,[ACCT_BEFORE] INT
		,[OS_POKOK_PSAK_CURRENT] DECIMAL(20, 2)
		,[ACCT_CURRENT] INT
		,[FLAG_PERGERAKAN] VARCHAR(255)
		,[NOMINAL_PERGERAKAN] DECIMAL(20, 2)
		,[ACCT_PERGERAKAN] INT
	);
END TRY
BEGIN CATCH
END CATCH

DECLARE @SQL_QUERY varchar(max), @TARGET DATE = '2023-07-31', @EOMONTH_MODIFIER VARCHAR(MAX) = '', @POINTER INT = 1;

WHILE @POINTER <= 7
BEGIN
	DELETE FROM [report].[FLOW_IN_FLOW_OUT] WHERE TGL_CURRENT = @TARGET AND FLAG_DATA = 'KOL 2';

	SET @SQL_QUERY = CONCAT(
		'SELECT
			''KOL 2'' [FLAG_DATA]
			,[TGL_BEFORE].[TGL_DATA] [TGL_BEFORE]
			,''', @TARGET, ''' [TGL_CURRENT]
			,LEFT(''', @TARGET, ''', 7) [PERIODE]
			,RIGHT(''', @TARGET, ''', 2) [TGL]
			,COALESCE([TARGET].[AREA], [SOURCE].[AREA]) [AREA]
			,COALESCE([TARGET].[REGION], [SOURCE].[REGION]) [REGION]
			,COALESCE([TARGET].[DIVISI], [SOURCE].[DIVISI]) [DIVISI]
			,COALESCE([TARGET].[PRODUK], [SOURCE].[PRODUK]) [PRODUK]
			,COALESCE([TARGET].[PRODUK_DETAIL], [SOURCE].[PRODUK_DETAIL]) [PRODUK_DETAIL]
			,SUM(CASE WHEN LEFT([SOURCE].[KOL_SUPERCIF], 1) IN (''2'') THEN [SOURCE].[OS_POKOK_PSAK] ELSE 0.00 END) [OS_POKOK_PSAK_BEFORE]
			,SUM(CASE WHEN LEFT([SOURCE].[KOL_SUPERCIF], 1) IN (''2'') THEN 1 ELSE 0 END) [ACCT_BEFORE]
			,SUM(CASE WHEN LEFT([TARGET].[KOL_SUPERCIF], 1) IN (''2'') THEN [TARGET].[OS_POKOK_PSAK] ELSE 0.00 END) [OS_POKOK_PSAK_CURRENT]
			,SUM(CASE WHEN LEFT([TARGET].[KOL_SUPERCIF], 1) IN (''2'') THEN 1 ELSE 0 END) [ACCT_CURRENT]
			,CASE
				WHEN [SOURCE].[KOL_SUPERCIF] IS NULL THEN ''01. KOL 2 OTHERS''
				WHEN LEFT([SOURCE].[KOL_SUPERCIF], 1) IN (''1'') THEN ''02. DOWNGRADE KOL 1 KE KOL 2''
				WHEN LEFT([SOURCE].[KOL_SUPERCIF], 1) IN (''3'', ''4'', ''5'') THEN ''03. UPGRADE NPF KE KOL 2''
				WHEN [TARGET].[KOL_SUPERCIF] IS NULL THEN ''04. RUN OFF''
				WHEN LEFT([TARGET].[KOL_SUPERCIF], 1) IN (''1'') THEN ''05. UPGRADE KOL 2 KE KOL 1''
				WHEN LEFT([TARGET].[KOL_SUPERCIF], 1) IN (''3'', ''4'', ''5'') THEN ''06. DOWNGRADE KOL 2 KE NPF''
				WHEN LEFT([TARGET].[KOL_SUPERCIF], 1) IN (''2'') AND LEFT([SOURCE].[KOL_SUPERCIF], 1) IN (''2'') THEN ''07. STAY/PAY KOL 2''
				ELSE ''08. Unidentified''
			END [FLAG_PERGERAKAN]
			,SUM(
			CASE WHEN LEFT([TARGET].[KOL_SUPERCIF], 1) IN (''2'') THEN [TARGET].[OS_POKOK_PSAK] ELSE 0.00 END -
			CASE WHEN LEFT([SOURCE].[KOL_SUPERCIF], 1) IN (''2'') THEN [SOURCE].[OS_POKOK_PSAK] ELSE 0.00 END
			) [NOMINAL_PERGERAKAN]
			,SUM(
			CASE WHEN LEFT([TARGET].[KOL_SUPERCIF], 1) IN (''2'') THEN 1 ELSE 0 END -
			CASE WHEN LEFT([SOURCE].[KOL_SUPERCIF], 1) IN (''2'') THEN 1 ELSE 0 END
			) [ACCT_PERGERAKAN]
		FROM [series].[RCG.LOAN_DAILY.', LEFT(@TARGET, 10), CASE WHEN @TARGET = EOMONTH(@TARGET) THEN @EOMONTH_MODIFIER END, '] [TARGET]
		FULL OUTER JOIN [series].[RCG.LOAN_DAILY.', LEFT(DATEADD(DAY, -1, @TARGET), 10), CASE WHEN DATEADD(DAY, -1, @TARGET) = EOMONTH(DATEADD(DAY, -1, @TARGET)) THEN @EOMONTH_MODIFIER END, '] [SOURCE]
			ON [TARGET].[NOLOAN] = [SOURCE].[NOLOAN]
			AND [TARGET].[NOMORCIF] = [SOURCE].[NOMORCIF]
		OUTER APPLY (
			SELECT
				MAX([TGL_DATA]) [TGL_DATA]
				,LEFT(MAX([TGL_DATA]), 7) [PERIODE]
				,RIGHT(MAX([TGL_DATA]), 2) [TGL]
			FROM [series].[RCG.LOAN_DAILY.', LEFT(DATEADD(DAY, -1, @TARGET), 10), CASE WHEN DATEADD(DAY, -1, @TARGET) = EOMONTH(DATEADD(DAY, -1, @TARGET)) THEN @EOMONTH_MODIFIER END, ']
		) [TGL_BEFORE]
		WHERE
			(
				LEFT([TARGET].[KOL_SUPERCIF], 1) IN (''2'')
				OR LEFT([SOURCE].[KOL_SUPERCIF], 1) IN (''2'')
			)
		AND COALESCE([TARGET].[DIVISI], [SOURCE].[DIVISI]) IN (''Konsumer'', ''SME'', ''Mikro'', ''Pawning'', ''Hasanah Card'')
		GROUP BY
			[TGL_BEFORE].[TGL_DATA]
			,COALESCE([TARGET].[AREA], [SOURCE].[AREA])
			,COALESCE([TARGET].[REGION], [SOURCE].[REGION])
			,COALESCE([TARGET].[DIVISI], [SOURCE].[DIVISI])
			,COALESCE([TARGET].[PRODUK], [SOURCE].[PRODUK])
			,COALESCE([TARGET].[PRODUK_DETAIL], [SOURCE].[PRODUK_DETAIL])
			,CASE
				WHEN [SOURCE].[KOL_SUPERCIF] IS NULL THEN ''01. KOL 2 OTHERS''
				WHEN LEFT([SOURCE].[KOL_SUPERCIF], 1) IN (''1'') THEN ''02. DOWNGRADE KOL 1 KE KOL 2''
				WHEN LEFT([SOURCE].[KOL_SUPERCIF], 1) IN (''3'', ''4'', ''5'') THEN ''03. UPGRADE NPF KE KOL 2''
				WHEN [TARGET].[KOL_SUPERCIF] IS NULL THEN ''04. RUN OFF''
				WHEN LEFT([TARGET].[KOL_SUPERCIF], 1) IN (''1'') THEN ''05. UPGRADE KOL 2 KE KOL 1''
				WHEN LEFT([TARGET].[KOL_SUPERCIF], 1) IN (''3'', ''4'', ''5'') THEN ''06. DOWNGRADE KOL 2 KE NPF''
				WHEN LEFT([TARGET].[KOL_SUPERCIF], 1) IN (''2'') AND LEFT([SOURCE].[KOL_SUPERCIF], 1) IN (''2'') THEN ''07. STAY/PAY KOL 2''
				ELSE ''08. Unidentified''
			END;'
	);

	INSERT INTO [report].[FLOW_IN_FLOW_OUT] EXEC(@SQL_QUERY);

	DELETE FROM [report].[FLOW_IN_FLOW_OUT] WHERE TGL_CURRENT = @TARGET AND FLAG_DATA = 'NPF';

	SET @SQL_QUERY = CONCAT(
		'SELECT
			''NPF'' [FLAG_DATA]
			,[TGL_BEFORE].[TGL_DATA] [TGL_BEFORE]
			,''', @TARGET, ''' [TGL_CURRENT]
			,LEFT(''', @TARGET, ''', 7) [PERIODE]
			,RIGHT(''', @TARGET, ''', 2) [TGL]
			,COALESCE([TARGET].[AREA], [SOURCE].[AREA]) [AREA]
			,COALESCE([TARGET].[REGION], [SOURCE].[REGION]) [REGION]
			,COALESCE([TARGET].[DIVISI], [SOURCE].[DIVISI]) [DIVISI]
			,COALESCE([TARGET].[PRODUK], [SOURCE].[PRODUK]) [PRODUK]
			,COALESCE([TARGET].[PRODUK_DETAIL], [SOURCE].[PRODUK_DETAIL]) [PRODUK_DETAIL]
			,SUM(CASE WHEN LEFT([SOURCE].[KOL_SUPERCIF], 1) IN (''3'', ''4'', ''5'') THEN [SOURCE].[OS_POKOK_PSAK] ELSE 0.00 END) [OS_POKOK_PSAK_BEFORE]
			,SUM(CASE WHEN LEFT([SOURCE].[KOL_SUPERCIF], 1) IN (''3'', ''4'', ''5'') THEN 1 ELSE 0 END) [ACCT_BEFORE]
			,SUM(CASE WHEN LEFT([TARGET].[KOL_SUPERCIF], 1) IN (''3'', ''4'', ''5'') THEN [TARGET].[OS_POKOK_PSAK] ELSE 0.00 END) [OS_POKOK_PSAK_CURRENT]
			,SUM(CASE WHEN LEFT([TARGET].[KOL_SUPERCIF], 1) IN (''3'', ''4'', ''5'') THEN 1 ELSE 0 END) [ACCT_CURRENT]
			,CASE
				WHEN [SOURCE].[KOL_SUPERCIF] IS NULL THEN ''01. NPF OTHERS''
				WHEN LEFT([SOURCE].[KOL_SUPERCIF], 1) IN (''1'') THEN ''02. DOWNGRADE KOL 1 KE NPF''
				WHEN LEFT([SOURCE].[KOL_SUPERCIF], 1) IN (''2'') THEN ''03. DOWNGRADE KOL 2 KE NPF''
				WHEN [TARGET].[KOL_SUPERCIF] IS NULL THEN ''04. RUN OFF''
				WHEN LEFT([TARGET].[KOL_SUPERCIF], 1) IN (''1'') THEN ''05. UPGRADE NPF KE KOL 1''
				WHEN LEFT([TARGET].[KOL_SUPERCIF], 1) IN (''2'') THEN ''06. UPGRADE NPF KE KOL 2''
				WHEN LEFT([TARGET].[KOL_SUPERCIF], 1) IN (''3'', ''4'', ''5'') AND LEFT([SOURCE].[KOL_SUPERCIF], 1) IN (''3'', ''4'', ''5'') THEN ''07. STAY/PAY NPF''
				ELSE ''08. Unidentified''
			END [FLAG_PERGERAKAN]
			,SUM(
			CASE WHEN LEFT([TARGET].[KOL_SUPERCIF], 1) IN (''3'', ''4'', ''5'') THEN [TARGET].[OS_POKOK_PSAK] ELSE 0.00 END -
			CASE WHEN LEFT([SOURCE].[KOL_SUPERCIF], 1) IN (''3'', ''4'', ''5'') THEN [SOURCE].[OS_POKOK_PSAK] ELSE 0.00 END
			) [NOMINAL_PERGERAKAN]
			,SUM(
			CASE WHEN LEFT([TARGET].[KOL_SUPERCIF], 1) IN (''3'', ''4'', ''5'') THEN 1 ELSE 0 END -
			CASE WHEN LEFT([SOURCE].[KOL_SUPERCIF], 1) IN (''3'', ''4'', ''5'') THEN 1 ELSE 0 END
			) [ACCT_PERGERAKAN]
		FROM [series].[RCG.LOAN_DAILY.', LEFT(@TARGET, 10), CASE WHEN @TARGET = EOMONTH(@TARGET) THEN @EOMONTH_MODIFIER END, '] [TARGET]
		FULL OUTER JOIN [series].[RCG.LOAN_DAILY.', LEFT(DATEADD(DAY, -1, @TARGET), 10), CASE WHEN DATEADD(DAY, -1, @TARGET) = EOMONTH(DATEADD(DAY, -1, @TARGET)) THEN @EOMONTH_MODIFIER END, '] [SOURCE]
			ON [TARGET].[NOLOAN] = [SOURCE].[NOLOAN]
			AND [TARGET].[NOMORCIF] = [SOURCE].[NOMORCIF]
		OUTER APPLY (
			SELECT
				MAX([TGL_DATA]) [TGL_DATA]
				,LEFT(MAX([TGL_DATA]), 7) [PERIODE]
				,RIGHT(MAX([TGL_DATA]), 2) [TGL]
			FROM [series].[RCG.LOAN_DAILY.', LEFT(DATEADD(DAY, -1, @TARGET), 10), CASE WHEN DATEADD(DAY, -1, @TARGET) = EOMONTH(DATEADD(DAY, -1, @TARGET)) THEN @EOMONTH_MODIFIER END, ']
		) [TGL_BEFORE]
		WHERE
			(
				LEFT([TARGET].[KOL_SUPERCIF], 1) IN (''3'', ''4'', ''5'')
				OR LEFT([SOURCE].[KOL_SUPERCIF], 1) IN (''3'', ''4'', ''5'')
			)
		AND COALESCE([TARGET].[DIVISI], [SOURCE].[DIVISI]) IN (''Konsumer'', ''SME'', ''Mikro'', ''Pawning'', ''Hasanah Card'')
		GROUP BY
			[TGL_BEFORE].[TGL_DATA]
			,COALESCE([TARGET].[AREA], [SOURCE].[AREA])
			,COALESCE([TARGET].[REGION], [SOURCE].[REGION])
			,COALESCE([TARGET].[DIVISI], [SOURCE].[DIVISI])
			,COALESCE([TARGET].[PRODUK], [SOURCE].[PRODUK])
			,COALESCE([TARGET].[PRODUK_DETAIL], [SOURCE].[PRODUK_DETAIL])
			,CASE
				WHEN [SOURCE].[KOL_SUPERCIF] IS NULL THEN ''01. NPF OTHERS''
				WHEN LEFT([SOURCE].[KOL_SUPERCIF], 1) IN (''1'') THEN ''02. DOWNGRADE KOL 1 KE NPF''
				WHEN LEFT([SOURCE].[KOL_SUPERCIF], 1) IN (''2'') THEN ''03. DOWNGRADE KOL 2 KE NPF''
				WHEN [TARGET].[KOL_SUPERCIF] IS NULL THEN ''04. RUN OFF''
				WHEN LEFT([TARGET].[KOL_SUPERCIF], 1) IN (''1'') THEN ''05. UPGRADE NPF KE KOL 1''
				WHEN LEFT([TARGET].[KOL_SUPERCIF], 1) IN (''2'') THEN ''06. UPGRADE NPF KE KOL 2''
				WHEN LEFT([TARGET].[KOL_SUPERCIF], 1) IN (''3'', ''4'', ''5'') AND LEFT([SOURCE].[KOL_SUPERCIF], 1) IN (''3'', ''4'', ''5'') THEN ''07. STAY/PAY NPF''
				ELSE ''08. Unidentified''
			END;'
	);

	INSERT INTO [report].[FLOW_IN_FLOW_OUT] EXEC(@SQL_QUERY);
	
	SET @POINTER = @POINTER + 1;
	PRINT CONCAT(LEFT(@TARGET, 10), CASE WHEN @TARGET = EOMONTH(@TARGET) THEN @EOMONTH_MODIFIER END);
	SET @TARGET = DATEADD(DAY, 1, @TARGET);
END