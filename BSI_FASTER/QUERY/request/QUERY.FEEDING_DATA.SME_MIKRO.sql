BEGIN TRY
	DROP TABLE [request].[FEEDING_DATA.SME_MIKRO];
END TRY
BEGIN CATCH
END CATCH

CREATE TABLE [request].[FEEDING_DATA.SME_MIKRO](
	[TGL_DATA] date NULL,
	[NOLOAN] varchar(255) NULL,
	[NOMORCIF] varchar(255) NULL,
	[SUPERCIF] varchar(255) NULL,
	[NAMANASABAH] varchar(255) NULL,
	[KODECABANG] varchar(255) NULL,
	[NAMACABANG] varchar(255) NULL,
	[AREA] varchar(255) NULL,
	[REGION] varchar(255) NULL,
	[LOANTYPE] varchar(255) NULL,
	[DIVISI] varchar(255) NULL,
	[PRODUK] varchar(255) NULL,
	[PRODUK_DETAIL] varchar(255) NULL,
	[JENISPIUTANGPEMBIAYAAN] varchar(255) NULL,
	[TANGGAL_CAIR] date NULL,
	[TANGGAL_JATUH_TEMPO] date NULL,
	[CYCLE] int NULL,
	[DPD] int NULL,
	[KOL_SUPERCIF_LM] varchar(255) NULL,
	[KOL_SUPERCIF_LD] varchar(255) NULL,
	[KOL_LOAN] varchar(255) NULL,
	[KOL_CIF] varchar(255) NULL,
	[KOL_SUPERCIF] varchar(255) NULL,
	[OS_POKOK_PSAK] decimal(20,2) NULL,
	[OS_POKOK] decimal(20,2) NULL,
	[OS_MARGIN] decimal(20,2) NULL,
	[REALISASI_BAGIHASIL] decimal(20,2) NULL,
	[PROYEKSI_BAGIHASIL] decimal(20,2) NULL,
	[TUNGGAKAN_POKOK] decimal(20,2) NULL,
	[TUNGGAKAN_MARGIN] decimal(20,2) NULL,
	[ANGSURAN] decimal(20,2) NULL,
	[CKPN] decimal(20,2) NULL
	,[SCHEDULE_DATE] DATE NULL
	,[REK_PEMBAYARAN] varchar(255) NULL
	,[NO_HP] varchar(255) NULL
	,[ALAMAT_UTAMA] varchar(255) NULL
	,[RT_RW] varchar(255) NULL
	,[KELURAHAN] varchar(255) NULL
	,[KECAMATAN] varchar(255) NULL
	,[KABUPATEN] varchar(255) NULL
	,[PROVINSI] varchar(255) NULL
	,[KODE POS] varchar(255) NULL
	,[Kol iBSI] varchar(255) NULL
	,[Kol CIF Sistem] varchar(255) NULL
	,[Prov_Method] varchar(255) NULL
	,[MANUAL_AST_CLS] varchar(255) NULL
	,[Desc_CHG] varchar(255) NULL

	,[Mutasi Bulanan_SCIF] varchar(255) NULL
	,[Jenis Akad] varchar(255) NULL
	,[Flag JT Pembiayaan] varchar(255) NULL
	,[Tung_Gross] decimal(20,2) NULL
	,[X Tunggak] decimal(20,2) NULL
	,[Kekurangan angs Tertua] decimal(20,2) NULL
	,[Proyeksi X Tunggakan Current] decimal(20,2) NULL
	,[X Tunggakan Agar Naik] decimal(20,2) NULL
	,[Min Payment Ugrade] decimal(20,2) NULL
	,[Flag Min Payment] varchar(255) NULL
	,[Flag Hit NPF] varchar(255) NULL
	,[Prognosa DPD Akhir Bulan] int NULL

);

DECLARE
	@SQL_QUERY varchar(max)
	,@TARGET varchar(max)
	,@TARGET_BEFORE varchar(max)
	,@TARGET_M1 varchar(max)
	,@TARGET_M2 varchar(max)
	,@TARGET_M3 varchar(max)
	,@TARGET_M4 varchar(max)
	,@TARGET_M5 varchar(max)
	,@TARGET_M6 varchar(max)
	,@TARGET_IFOIS varchar(max)
	,@TARGET_JFAST varchar(max)
	,@tgl_data DATE = '2023-08-03';
	
SET @TARGET_BEFORE = (
	SELECT TOP 1
		CONCAT('[', SCHEMA_NAME(SCHEMA_ID), '].[', name, ']') AS NAME
	FROM [sys].[objects]
	WHERE type_desc = 'USER_TABLE'
	AND name LIKE 'RCG.LOAN_DAILY.____-__-__%'
	AND TRY_CAST(LEFT(REPLACE(name, 'RCG.LOAN_DAILY.', ''), 10) AS DATE) < @TGL_DATA
	ORDER BY
		TRY_CAST(LEFT(REPLACE(name, 'RCG.LOAN_DAILY.', ''), 10) AS DATE) DESC
		,CASE
			WHEN name LIKE ('%(FINAL)') THEN 1
			WHEN name LIKE ('%(QC)') THEN -1
			ELSE 0
		END DESC
);

SET @TARGET = (
	SELECT TOP 1
		CONCAT('[', SCHEMA_NAME(SCHEMA_ID), '].[', name, ']') AS NAME
	FROM [sys].[objects]
	WHERE type_desc = 'USER_TABLE'
	AND name LIKE 'RCG.LOAN_DAILY.____-__-__%'
	AND TRY_CAST(LEFT(REPLACE(name, 'RCG.LOAN_DAILY.', ''), 10) AS DATE) <= @TGL_DATA
	ORDER BY
		TRY_CAST(LEFT(REPLACE(name, 'RCG.LOAN_DAILY.', ''), 10) AS DATE) DESC
		,CASE
			WHEN name LIKE ('%(FINAL)') THEN 1
			WHEN name LIKE ('%(QC)') THEN -1
			ELSE 0
		END DESC
);

SET @TARGET_M1 = (
	SELECT TOP 1
		CONCAT('[', SCHEMA_NAME(SCHEMA_ID), '].[', name, ']') AS NAME
	FROM [sys].[objects]
	WHERE type_desc = 'USER_TABLE'
	AND name LIKE 'RCG.LOAN_DAILY.____-__-__%'
	AND TRY_CAST(LEFT(REPLACE(name, 'RCG.LOAN_DAILY.', ''), 10) AS DATE) <= EOMONTH(DATEADD(MONTH, -1, @TGL_DATA))
	ORDER BY
		TRY_CAST(LEFT(REPLACE(name, 'RCG.LOAN_DAILY.', ''), 10) AS DATE) DESC
		,CASE
			WHEN name LIKE ('%(FINAL)') THEN 1
			WHEN name LIKE ('%(QC)') THEN -1
			ELSE 0
		END DESC
);

SET @TARGET_M2 = (
	SELECT TOP 1
		CONCAT('[', SCHEMA_NAME(SCHEMA_ID), '].[', name, ']') AS NAME
	FROM [sys].[objects]
	WHERE type_desc = 'USER_TABLE'
	AND name LIKE 'RCG.LOAN_DAILY.____-__-__%'
	AND TRY_CAST(LEFT(REPLACE(name, 'RCG.LOAN_DAILY.', ''), 10) AS DATE) <= EOMONTH(DATEADD(MONTH, -2, @TGL_DATA))
	ORDER BY
		TRY_CAST(LEFT(REPLACE(name, 'RCG.LOAN_DAILY.', ''), 10) AS DATE) DESC
		,CASE
			WHEN name LIKE ('%(FINAL)') THEN 1
			WHEN name LIKE ('%(QC)') THEN -1
			ELSE 0
		END DESC
);

SET @TARGET_M3 = (
	SELECT TOP 1
		CONCAT('[', SCHEMA_NAME(SCHEMA_ID), '].[', name, ']') AS NAME
	FROM [sys].[objects]
	WHERE type_desc = 'USER_TABLE'
	AND name LIKE 'RCG.LOAN_DAILY.____-__-__%'
	AND TRY_CAST(LEFT(REPLACE(name, 'RCG.LOAN_DAILY.', ''), 10) AS DATE) <= EOMONTH(DATEADD(MONTH, -3, @TGL_DATA))
	ORDER BY
		TRY_CAST(LEFT(REPLACE(name, 'RCG.LOAN_DAILY.', ''), 10) AS DATE) DESC
		,CASE
			WHEN name LIKE ('%(FINAL)') THEN 1
			WHEN name LIKE ('%(QC)') THEN -1
			ELSE 0
		END DESC
);

SET @TARGET_M4 = (
	SELECT TOP 1
		CONCAT('[', SCHEMA_NAME(SCHEMA_ID), '].[', name, ']') AS NAME
	FROM [sys].[objects]
	WHERE type_desc = 'USER_TABLE'
	AND name LIKE 'RCG.LOAN_DAILY.____-__-__%'
	AND TRY_CAST(LEFT(REPLACE(name, 'RCG.LOAN_DAILY.', ''), 10) AS DATE) <= EOMONTH(DATEADD(MONTH, -4, @TGL_DATA))
	ORDER BY
		TRY_CAST(LEFT(REPLACE(name, 'RCG.LOAN_DAILY.', ''), 10) AS DATE) DESC
		,CASE
			WHEN name LIKE ('%(FINAL)') THEN 1
			WHEN name LIKE ('%(QC)') THEN -1
			ELSE 0
		END DESC
);

SET @TARGET_M5 = (
	SELECT TOP 1
		CONCAT('[', SCHEMA_NAME(SCHEMA_ID), '].[', name, ']') AS NAME
	FROM [sys].[objects]
	WHERE type_desc = 'USER_TABLE'
	AND name LIKE 'RCG.LOAN_DAILY.____-__-__%'
	AND TRY_CAST(LEFT(REPLACE(name, 'RCG.LOAN_DAILY.', ''), 10) AS DATE) <= EOMONTH(DATEADD(MONTH, -5, @TGL_DATA))
	ORDER BY
		TRY_CAST(LEFT(REPLACE(name, 'RCG.LOAN_DAILY.', ''), 10) AS DATE) DESC
		,CASE
			WHEN name LIKE ('%(FINAL)') THEN 1
			WHEN name LIKE ('%(QC)') THEN -1
			ELSE 0
		END DESC
);

SET @TARGET_M6 = (
	SELECT TOP 1
		CONCAT('[', SCHEMA_NAME(SCHEMA_ID), '].[', name, ']') AS NAME
	FROM [sys].[objects]
	WHERE type_desc = 'USER_TABLE'
	AND name LIKE 'RCG.LOAN_DAILY.____-__-__%'
	AND TRY_CAST(LEFT(REPLACE(name, 'RCG.LOAN_DAILY.', ''), 10) AS DATE) <= EOMONTH(DATEADD(MONTH, -6, @TGL_DATA))
	ORDER BY
		TRY_CAST(LEFT(REPLACE(name, 'RCG.LOAN_DAILY.', ''), 10) AS DATE) DESC
		,CASE
			WHEN name LIKE ('%(FINAL)') THEN 1
			WHEN name LIKE ('%(QC)') THEN -1
			ELSE 0
		END DESC
);

SET @TARGET_IFOIS = (
	SELECT TOP 1
		CONCAT('[', SCHEMA_NAME(SCHEMA_ID), '].[', name, ']') AS NAME
	FROM [sys].[objects]
	WHERE type_desc = 'USER_TABLE'
	AND name LIKE 'IFOIS.LOAN_DAILY.____-__-__%'
	AND TRY_CAST(LEFT(REPLACE(name, 'IFOIS.LOAN_DAILY.', ''), 10) AS DATE) <= @TGL_DATA
	ORDER BY
		TRY_CAST(LEFT(REPLACE(name, 'IFOIS.LOAN_DAILY.', ''), 10) AS DATE) DESC
		,CASE
			WHEN name LIKE ('%(FINAL)') THEN 1
			WHEN name LIKE ('%(QC)') THEN -1
			ELSE 0
		END DESC
);

SET @TARGET_JFAST = (
	SELECT TOP 1
		CONCAT('[', SCHEMA_NAME(SCHEMA_ID), '].[', name, ']') AS NAME
	FROM [sys].[objects]
	WHERE type_desc = 'USER_TABLE'
	AND name LIKE 'MIS.IFOS_JFAST.____-__-__%'
	AND TRY_CAST(LEFT(REPLACE(name, 'MIS.IFOS_JFAST.', ''), 10) AS DATE) <= @TGL_DATA
	ORDER BY
		TRY_CAST(LEFT(REPLACE(name, 'MIS.IFOS_JFAST.', ''), 10) AS DATE) DESC
		,CASE
			WHEN name LIKE ('%(FINAL)') THEN 1
			WHEN name LIKE ('%(QC)') THEN -1
			ELSE 0
		END DESC
);

SET @SQL_QUERY = CONCAT(
	'SELECT
		[TGL_DATA],
		[NOLOAN],
		[NOMORCIF],
		[SUPERCIF],
		[NAMANASABAH],
		[KODECABANG],
		[NAMACABANG],
		[AREA],
		[REGION],
		[LOANTYPE],
		[DIVISI],
		[PRODUK],
		[PRODUK_DETAIL],
		[JENISPIUTANGPEMBIAYAAN],
		[TANGGAL_CAIR],
		[TANGGAL_JATUH_TEMPO],
		[CYCLE],
		[DPD],
		[KOL_LOAN],
		[KOL_CIF],
		[KOL_SUPERCIF],
		[OS_POKOK_PSAK],
		[OS_POKOK],
		[OS_MARGIN],
		[REALISASI_BAGIHASIL],
		[PROYEKSI_BAGIHASIL],
		[TUNGGAKAN_POKOK],
		[TUNGGAKAN_MARGIN],
		[ANGSURAN],
		[CKPN],
		COALESCE([TUNGGAKAN_POKOK], 0.00) + COALESCE([TUNGGAKAN_MARGIN], 0.00) [TUNGGAKAN_GROSS]
	FROM ', @TARGET, '
	WHERE [SUPERCIF] IN (SELECT [SUPERCIF] FROM ', @TARGET, ' WHERE [DIVISI] IN (''SME'', ''Mikro'') GROUP BY [SUPERCIF]);'
);

BEGIN TRY
	INSERT INTO [request].[FEEDING_DATA.SME_MIKRO] (
		[TGL_DATA],
		[NOLOAN],
		[NOMORCIF],
		[SUPERCIF],
		[NAMANASABAH],
		[KODECABANG],
		[NAMACABANG],
		[AREA],
		[REGION],
		[LOANTYPE],
		[DIVISI],
		[PRODUK],
		[PRODUK_DETAIL],
		[JENISPIUTANGPEMBIAYAAN],
		[TANGGAL_CAIR],
		[TANGGAL_JATUH_TEMPO],
		[CYCLE],
		[DPD],
		[KOL_LOAN],
		[KOL_CIF],
		[KOL_SUPERCIF],
		[OS_POKOK_PSAK],
		[OS_POKOK],
		[OS_MARGIN],
		[REALISASI_BAGIHASIL],
		[PROYEKSI_BAGIHASIL],
		[TUNGGAKAN_POKOK],
		[TUNGGAKAN_MARGIN],
		[ANGSURAN],
		[CKPN],
		[Tung_Gross]
	)
	EXEC(@SQL_QUERY);
END TRY
BEGIN CATCH
	PRINT CONCAT('ERROR: ', ERROR_MESSAGE());
END CATCH

UPDATE [request].[FEEDING_DATA.SME_MIKRO]
SET
	[X Tunggak] = [Tung_Gross] / COALESCE(NULLIF([ANGSURAN], 0.00), NULLIF([Tung_Gross], 0.00), 1.00)
	,[Proyeksi X Tunggakan Current] = [Tung_Gross] / COALESCE(NULLIF([ANGSURAN], 0.00), NULLIF([Tung_Gross], 0.00), 1.00) + CASE WHEN [CYCLE] > TRY_CAST(RIGHT([TGL_DATA], 2) AS INTEGER) THEN 1 ELSE 0 END;
	
----------------------------------------------------


SET @SQL_QUERY = CONCAT(
	'UPDATE [request].[FEEDING_DATA.SME_MIKRO]
	SET
		[KOL_SUPERCIF_LM] = COALESCE([SOURCE].[KOL_SUPERCIF], [M_1].[KOL_SUPERCIF], ''Cair Baru'')
		,[Mutasi Bulanan_SCIF] = CONCAT(COALESCE([SOURCE].[KOL_SUPERCIF], [M_1].[KOL_SUPERCIF], ''Cair Baru''), ''-'', [TARGET].[KOL_SUPERCIF])
		,[Flag Hit NPF] = COALESCE([Flag Hit NPF], 0) + (CASE WHEN LEFT(COALESCE([SOURCE].[KOL_SUPERCIF], [M_1].[KOL_SUPERCIF], ''1''), 1) IN (''3'', ''4'', ''5'') THEN 1 ELSE 0 END)
	FROM [request].[FEEDING_DATA.SME_MIKRO] [TARGET]
	LEFT JOIN ', @TARGET_M1, ' [SOURCE]
		ON [TARGET].[NOLOAN] = [SOURCE].[NOLOAN]
	OUTER APPLY (
		SELECT
			COALESCE(MAX([BY_LOAN]), MAX([BY_CIF]) , MAX([BY_SUPERCIF])) [KOL_SUPERCIF]
		FROM (
			SELECT
				CASE WHEN [NOLOAN] IN (
					SELECT
						[NOLOAN_LAMA]
					FROM [mapping].[PORTOFOLIO_ONBS.COMPILE.JOIN.REKAP_NOLOAN.MUTASI_NOLOAN]
					WHERE [NOLOAN_BARU] = [TARGET].[NOLOAN]
					AND COALESCE([KETERANGAN], ''X'') NOT IN (''Invalid'')
				) OR [NOLOAN] = [TARGET].[NOLOAN] THEN [KOL_SUPERCIF]
				WHEN [TARGET].[DIVISI] IN (''Pawning'') THEN ''1'' END [BY_LOAN]
				,CASE WHEN [NOMORCIF] = [TARGET].[NOMORCIF] THEN [KOL_SUPERCIF] END [BY_CIF]
				,[KOL_SUPERCIF] [BY_SUPERCIF]
			FROM ', @TARGET_M1, '
			WHERE [TARGET].[SUPERCIF] = [SUPERCIF]
				AND
				(
					(
						[TARGET].[DIVISI] IN (''Hasanah Card'')
						AND [DIVISI] IN (''Hasanah Card'')
					)
					OR
					(
						[TARGET].[DIVISI] NOT IN (''Hasanah Card'')
						AND [DIVISI] NOT IN (''Hasanah Card'')
					)
				)
		) [SUB]
	) [M_1];'
);

BEGIN TRY
	EXEC(@SQL_QUERY);
END TRY
BEGIN CATCH
	PRINT CONCAT('ERROR: ', ERROR_MESSAGE());
END CATCH

SET @SQL_QUERY = CONCAT(
	'UPDATE [request].[FEEDING_DATA.SME_MIKRO]
	SET
		[Flag Hit NPF] = COALESCE([Flag Hit NPF], 0) + (CASE WHEN LEFT(COALESCE([SOURCE].[KOL_SUPERCIF], [M_2].[KOL_SUPERCIF], ''1''), 1) IN (''3'', ''4'', ''5'') THEN 1 ELSE 0 END)
	FROM [request].[FEEDING_DATA.SME_MIKRO] [TARGET]
	LEFT JOIN ', @TARGET_M2, ' [SOURCE]
		ON [TARGET].[NOLOAN] = [SOURCE].[NOLOAN]
	OUTER APPLY (
		SELECT
			COALESCE(MAX([BY_LOAN]), MAX([BY_CIF]) , MAX([BY_SUPERCIF])) [KOL_SUPERCIF]
		FROM (
			SELECT
				CASE WHEN [NOLOAN] IN (
					SELECT
						[NOLOAN_LAMA]
					FROM [mapping].[PORTOFOLIO_ONBS.COMPILE.JOIN.REKAP_NOLOAN.MUTASI_NOLOAN]
					WHERE [NOLOAN_BARU] = [TARGET].[NOLOAN]
					AND COALESCE([KETERANGAN], ''X'') NOT IN (''Invalid'')
				) OR [NOLOAN] = [TARGET].[NOLOAN] THEN [KOL_SUPERCIF]
				WHEN [TARGET].[DIVISI] IN (''Pawning'') THEN ''1'' END [BY_LOAN]
				,CASE WHEN [NOMORCIF] = [TARGET].[NOMORCIF] THEN [KOL_SUPERCIF] END [BY_CIF]
				,[KOL_SUPERCIF] [BY_SUPERCIF]
			FROM ', @TARGET_M2, '
			WHERE [TARGET].[SUPERCIF] = [SUPERCIF]
				AND
				(
					(
						[TARGET].[DIVISI] IN (''Hasanah Card'')
						AND [DIVISI] IN (''Hasanah Card'')
					)
					OR
					(
						[TARGET].[DIVISI] NOT IN (''Hasanah Card'')
						AND [DIVISI] NOT IN (''Hasanah Card'')
					)
				)
		) [SUB]
	) [M_2];'
);

BEGIN TRY
	EXEC(@SQL_QUERY);
END TRY
BEGIN CATCH
	PRINT CONCAT('ERROR: ', ERROR_MESSAGE());
END CATCH

SET @SQL_QUERY = CONCAT(
	'UPDATE [request].[FEEDING_DATA.SME_MIKRO]
	SET
		[Flag Hit NPF] = COALESCE([Flag Hit NPF], 0) + (CASE WHEN LEFT(COALESCE([SOURCE].[KOL_SUPERCIF], [M_3].[KOL_SUPERCIF], ''1''), 1) IN (''3'', ''4'', ''5'') THEN 1 ELSE 0 END)
	FROM [request].[FEEDING_DATA.SME_MIKRO] [TARGET]
	LEFT JOIN ', @TARGET_M3, ' [SOURCE]
		ON [TARGET].[NOLOAN] = [SOURCE].[NOLOAN]
	OUTER APPLY (
		SELECT
			COALESCE(MAX([BY_LOAN]), MAX([BY_CIF]) , MAX([BY_SUPERCIF])) [KOL_SUPERCIF]
		FROM (
			SELECT
				CASE WHEN [NOLOAN] IN (
					SELECT
						[NOLOAN_LAMA]
					FROM [mapping].[PORTOFOLIO_ONBS.COMPILE.JOIN.REKAP_NOLOAN.MUTASI_NOLOAN]
					WHERE [NOLOAN_BARU] = [TARGET].[NOLOAN]
					AND COALESCE([KETERANGAN], ''X'') NOT IN (''Invalid'')
				) OR [NOLOAN] = [TARGET].[NOLOAN] THEN [KOL_SUPERCIF]
				WHEN [TARGET].[DIVISI] IN (''Pawning'') THEN ''1'' END [BY_LOAN]
				,CASE WHEN [NOMORCIF] = [TARGET].[NOMORCIF] THEN [KOL_SUPERCIF] END [BY_CIF]
				,[KOL_SUPERCIF] [BY_SUPERCIF]
			FROM ', @TARGET_M3, '
			WHERE [TARGET].[SUPERCIF] = [SUPERCIF]
				AND
				(
					(
						[TARGET].[DIVISI] IN (''Hasanah Card'')
						AND [DIVISI] IN (''Hasanah Card'')
					)
					OR
					(
						[TARGET].[DIVISI] NOT IN (''Hasanah Card'')
						AND [DIVISI] NOT IN (''Hasanah Card'')
					)
				)
		) [SUB]
	) [M_3];'
);

BEGIN TRY
	EXEC(@SQL_QUERY);
END TRY
BEGIN CATCH
	PRINT CONCAT('ERROR: ', ERROR_MESSAGE());
END CATCH

SET @SQL_QUERY = CONCAT(
	'UPDATE [request].[FEEDING_DATA.SME_MIKRO]
	SET
		[Flag Hit NPF] = COALESCE([Flag Hit NPF], 0) + (CASE WHEN LEFT(COALESCE([SOURCE].[KOL_SUPERCIF], [M_4].[KOL_SUPERCIF], ''1''), 1) IN (''3'', ''4'', ''5'') THEN 1 ELSE 0 END)
	FROM [request].[FEEDING_DATA.SME_MIKRO] [TARGET]
	LEFT JOIN ', @TARGET_M4, ' [SOURCE]
		ON [TARGET].[NOLOAN] = [SOURCE].[NOLOAN]
	OUTER APPLY (
		SELECT
			COALESCE(MAX([BY_LOAN]), MAX([BY_CIF]) , MAX([BY_SUPERCIF])) [KOL_SUPERCIF]
		FROM (
			SELECT
				CASE WHEN [NOLOAN] IN (
					SELECT
						[NOLOAN_LAMA]
					FROM [mapping].[PORTOFOLIO_ONBS.COMPILE.JOIN.REKAP_NOLOAN.MUTASI_NOLOAN]
					WHERE [NOLOAN_BARU] = [TARGET].[NOLOAN]
					AND COALESCE([KETERANGAN], ''X'') NOT IN (''Invalid'')
				) OR [NOLOAN] = [TARGET].[NOLOAN] THEN [KOL_SUPERCIF]
				WHEN [TARGET].[DIVISI] IN (''Pawning'') THEN ''1'' END [BY_LOAN]
				,CASE WHEN [NOMORCIF] = [TARGET].[NOMORCIF] THEN [KOL_SUPERCIF] END [BY_CIF]
				,[KOL_SUPERCIF] [BY_SUPERCIF]
			FROM ', @TARGET_M4, '
			WHERE [TARGET].[SUPERCIF] = [SUPERCIF]
				AND
				(
					(
						[TARGET].[DIVISI] IN (''Hasanah Card'')
						AND [DIVISI] IN (''Hasanah Card'')
					)
					OR
					(
						[TARGET].[DIVISI] NOT IN (''Hasanah Card'')
						AND [DIVISI] NOT IN (''Hasanah Card'')
					)
				)
		) [SUB]
	) [M_4];'
);

BEGIN TRY
	EXEC(@SQL_QUERY);
END TRY
BEGIN CATCH
	PRINT CONCAT('ERROR: ', ERROR_MESSAGE());
END CATCH

SET @SQL_QUERY = CONCAT(
	'UPDATE [request].[FEEDING_DATA.SME_MIKRO]
	SET
		[Flag Hit NPF] = COALESCE([Flag Hit NPF], 0) + (CASE WHEN LEFT(COALESCE([SOURCE].[KOL_SUPERCIF], [M_5].[KOL_SUPERCIF], ''1''), 1) IN (''3'', ''4'', ''5'') THEN 1 ELSE 0 END)
	FROM [request].[FEEDING_DATA.SME_MIKRO] [TARGET]
	LEFT JOIN ', @TARGET_M5, ' [SOURCE]
		ON [TARGET].[NOLOAN] = [SOURCE].[NOLOAN]
	OUTER APPLY (
		SELECT
			COALESCE(MAX([BY_LOAN]), MAX([BY_CIF]) , MAX([BY_SUPERCIF])) [KOL_SUPERCIF]
		FROM (
			SELECT
				CASE WHEN [NOLOAN] IN (
					SELECT
						[NOLOAN_LAMA]
					FROM [mapping].[PORTOFOLIO_ONBS.COMPILE.JOIN.REKAP_NOLOAN.MUTASI_NOLOAN]
					WHERE [NOLOAN_BARU] = [TARGET].[NOLOAN]
					AND COALESCE([KETERANGAN], ''X'') NOT IN (''Invalid'')
				) OR [NOLOAN] = [TARGET].[NOLOAN] THEN [KOL_SUPERCIF]
				WHEN [TARGET].[DIVISI] IN (''Pawning'') THEN ''1'' END [BY_LOAN]
				,CASE WHEN [NOMORCIF] = [TARGET].[NOMORCIF] THEN [KOL_SUPERCIF] END [BY_CIF]
				,[KOL_SUPERCIF] [BY_SUPERCIF]
			FROM ', @TARGET_M5, '
			WHERE [TARGET].[SUPERCIF] = [SUPERCIF]
				AND
				(
					(
						[TARGET].[DIVISI] IN (''Hasanah Card'')
						AND [DIVISI] IN (''Hasanah Card'')
					)
					OR
					(
						[TARGET].[DIVISI] NOT IN (''Hasanah Card'')
						AND [DIVISI] NOT IN (''Hasanah Card'')
					)
				)
		) [SUB]
	) [M_5];'
);

BEGIN TRY
	EXEC(@SQL_QUERY);
END TRY
BEGIN CATCH
	PRINT CONCAT('ERROR: ', ERROR_MESSAGE());
END CATCH

SET @SQL_QUERY = CONCAT(
	'UPDATE [request].[FEEDING_DATA.SME_MIKRO]
	SET
		[Flag Hit NPF] = COALESCE([Flag Hit NPF], 0) + (CASE WHEN LEFT(COALESCE([SOURCE].[KOL_SUPERCIF], [M_6].[KOL_SUPERCIF], ''1''), 1) IN (''3'', ''4'', ''5'') THEN 1 ELSE 0 END)
	FROM [request].[FEEDING_DATA.SME_MIKRO] [TARGET]
	LEFT JOIN ', @TARGET_M6, ' [SOURCE]
		ON [TARGET].[NOLOAN] = [SOURCE].[NOLOAN]
	OUTER APPLY (
		SELECT
			COALESCE(MAX([BY_LOAN]), MAX([BY_CIF]) , MAX([BY_SUPERCIF])) [KOL_SUPERCIF]
		FROM (
			SELECT
				CASE WHEN [NOLOAN] IN (
					SELECT
						[NOLOAN_LAMA]
					FROM [mapping].[PORTOFOLIO_ONBS.COMPILE.JOIN.REKAP_NOLOAN.MUTASI_NOLOAN]
					WHERE [NOLOAN_BARU] = [TARGET].[NOLOAN]
					AND COALESCE([KETERANGAN], ''X'') NOT IN (''Invalid'')
				) OR [NOLOAN] = [TARGET].[NOLOAN] THEN [KOL_SUPERCIF]
				WHEN [TARGET].[DIVISI] IN (''Pawning'') THEN ''1'' END [BY_LOAN]
				,CASE WHEN [NOMORCIF] = [TARGET].[NOMORCIF] THEN [KOL_SUPERCIF] END [BY_CIF]
				,[KOL_SUPERCIF] [BY_SUPERCIF]
			FROM ', @TARGET_M6, '
			WHERE [TARGET].[SUPERCIF] = [SUPERCIF]
				AND
				(
					(
						[TARGET].[DIVISI] IN (''Hasanah Card'')
						AND [DIVISI] IN (''Hasanah Card'')
					)
					OR
					(
						[TARGET].[DIVISI] NOT IN (''Hasanah Card'')
						AND [DIVISI] NOT IN (''Hasanah Card'')
					)
				)
		) [SUB]
	) [M_6];'
);

BEGIN TRY
	EXEC(@SQL_QUERY);
END TRY
BEGIN CATCH
	PRINT CONCAT('ERROR: ', ERROR_MESSAGE());
END CATCH

UPDATE [request].[FEEDING_DATA.SME_MIKRO]
SET
	[Flag Hit NPF] =
		CASE
			WHEN [Flag Hit NPF] >= 3 THEN 'Habitual NPF'
			WHEN [Flag Hit NPF] > 0 THEN CONCAT('Hit NPF ', [Flag Hit NPF], ' Kali')
			WHEN LEFT([KOL_SUPERCIF], 1) IN ('3', '4', '5') THEN 'New Downgrade NPF'
			ELSE 'Non NPF'
		END;

SET @SQL_QUERY = CONCAT(
	'UPDATE [request].[FEEDING_DATA.SME_MIKRO]
	SET
		[KOL_SUPERCIF_LD] = COALESCE([SOURCE].[KOL_SUPERCIF], [D_1].[KOL_SUPERCIF], ''Cair Baru'')
	FROM [request].[FEEDING_DATA.SME_MIKRO] [TARGET]
	LEFT JOIN ', @TARGET_BEFORE, ' [SOURCE]
		ON [TARGET].[NOLOAN] = [SOURCE].[NOLOAN]
	OUTER APPLY (
		SELECT
			COALESCE(MAX([BY_LOAN]), MAX([BY_CIF]) , MAX([BY_SUPERCIF])) [KOL_SUPERCIF]
		FROM (
			SELECT
				CASE WHEN [NOLOAN] IN (
					SELECT
						[NOLOAN_LAMA]
					FROM [mapping].[PORTOFOLIO_ONBS.COMPILE.JOIN.REKAP_NOLOAN.MUTASI_NOLOAN]
					WHERE [NOLOAN_BARU] = [TARGET].[NOLOAN]
					AND COALESCE([KETERANGAN], ''X'') NOT IN (''Invalid'')
				) OR [NOLOAN] = [TARGET].[NOLOAN] THEN [KOL_SUPERCIF]
				WHEN [TARGET].[DIVISI] IN (''Pawning'') THEN ''1'' END [BY_LOAN]
				,CASE WHEN [NOMORCIF] = [TARGET].[NOMORCIF] THEN [KOL_SUPERCIF] END [BY_CIF]
				,[KOL_SUPERCIF] [BY_SUPERCIF]
			FROM ', @TARGET_BEFORE, '
			WHERE [TARGET].[SUPERCIF] = [SUPERCIF]
				AND
				(
					(
						[TARGET].[DIVISI] IN (''Hasanah Card'')
						AND [DIVISI] IN (''Hasanah Card'')
					)
					OR
					(
						[TARGET].[DIVISI] NOT IN (''Hasanah Card'')
						AND [DIVISI] NOT IN (''Hasanah Card'')
					)
				)
		) [SUB]
	) [D_1];'
);

BEGIN TRY
	EXEC(@SQL_QUERY);
END TRY
BEGIN CATCH
	PRINT CONCAT('ERROR: ', ERROR_MESSAGE());
END CATCH

----------------------------------------------------

SET @SQL_QUERY = CONCAT(
	'UPDATE [request].[FEEDING_DATA.SME_MIKRO]
	SET
		[SCHEDULE_DATE] = TRY_CAST([SOURCE].[SCHD_DT] AS DATE)
		,[REK_PEMBAYARAN] = [SOURCE].[REKPEMBYPOKOK]
		,[NO_HP] = [SOURCE].[HP]
		,[ALAMAT_UTAMA] = [SOURCE].[ADDRESS]
		,[RT_RW] = [SOURCE].[RT_RW]
		,[KELURAHAN] = [SOURCE].[KELURAHAN]
		,[KECAMATAN] = [SOURCE].[KECAMATAN]
		,[KABUPATEN] = COALESCE([DATI].[KOTA/KAB], [SOURCE].[KABUPATEN])
		,[PROVINSI] = COALESCE([DATI].[PROVINSI], [SOURCE].[PROPINSI])
		,[KODE POS] = [DATI].[KODE POS]
		,[Kol iBSI] = COALESCE([SOURCE].[KOLBSM], [SOURCE].[KOLCIF])		
		,[Kol CIF Sistem] = [SOURCE].[KOLCIF]
		,[Prov_Method] = [SOURCE].[PROV_METHOD]
		,[MANUAL_AST_CLS] = [SOURCE].[MANUAL_AST_CLS]
		,[Desc_CHG] = [SOURCE].[Desc_CHG]
		,[Jenis Akad] =
			CASE
				WHEN LEFT([SOURCE].[LOANTYPE], 3) IN (''RHN'', ''QRU'', ''QRD'', ''QAR'', ''MUR'', ''IST'', ''IMB'', ''IJR'') THEN ''Margin''
				WHEN LEFT([SOURCE].[LOANTYPE], 3) IN (''PDB'', ''MUT'', ''MUS'', ''MUD'', ''MQN'', ''MMS'') THEN ''Bagi Hasil''
			END
	FROM [request].[FEEDING_DATA.SME_MIKRO] [TARGET]
	LEFT JOIN ', @TARGET_IFOIS, ' [SOURCE]
		ON [TARGET].[NOLOAN] = [SOURCE].[NOLOAN]
	LEFT JOIN [mapping].[PORTOFOLIO.MAPPING.DATI2] [DATI]
		ON [DATI].[KODE DATI II] = [SOURCE].[KABUPATEN]
	WHERE [SOURCE].[NOLOAN] IS NOT NULL;'
);

BEGIN TRY
	EXEC(@SQL_QUERY);
END TRY
BEGIN CATCH
	PRINT CONCAT('ERROR: ', ERROR_MESSAGE());
END CATCH

SET @SQL_QUERY = CONCAT(
	'UPDATE [request].[FEEDING_DATA.SME_MIKRO]
	SET
		[SCHEDULE_DATE] = TRY_CAST([SOURCE].[SCHD_DT] AS DATE)
		,[REK_PEMBAYARAN] = [SOURCE].[REKPEMBYPOKOK]
		,[NO_HP] = [SOURCE].[HP]
		,[ALAMAT_UTAMA] = [SOURCE].[ADDRESS]
		,[RT_RW] = [SOURCE].[RT_RW]
		,[KELURAHAN] = [SOURCE].[KELURAHAN]
		,[KECAMATAN] = [SOURCE].[KECAMATAN]
		,[KABUPATEN] = COALESCE([DATI].[KOTA/KAB], [SOURCE].[KABUPATEN])
		,[PROVINSI] = COALESCE([DATI].[PROVINSI], [SOURCE].[PROPINSI])
		,[KODE POS] = [DATI].[KODE POS]
		,[Kol iBSI] = COALESCE([SOURCE].[KOLBSM], [SOURCE].[KOLCIF])	
		,[Kol CIF Sistem] = [SOURCE].[KOLCIF]
		,[Prov_Method] = [SOURCE].[PROV_METHOD]
		,[MANUAL_AST_CLS] = [SOURCE].[MANUAL_AST_CLS]
		,[Desc_CHG] = [SOURCE].[Desc_CHG]
		,[Jenis Akad] =
			CASE
				WHEN LEFT([SOURCE].[LOANTYPE], 3) IN (''RHN'', ''QRU'', ''QRD'', ''QAR'', ''MUR'', ''IST'', ''IMB'', ''IJR'') THEN ''Margin''
				WHEN LEFT([SOURCE].[LOANTYPE], 3) IN (''PDB'', ''MUT'', ''MUS'', ''MUD'', ''MQN'', ''MMS'') THEN ''Bagi Hasil''
			END
	FROM [request].[FEEDING_DATA.SME_MIKRO] [TARGET]
	LEFT JOIN ', @TARGET_JFAST, ' [SOURCE]
		ON [TARGET].[NOLOAN] = [SOURCE].[NOLOAN]
	LEFT JOIN [mapping].[PORTOFOLIO.MAPPING.DATI2] [DATI]
		ON [DATI].[KODE DATI II] = [SOURCE].[KABUPATEN]
	WHERE [SOURCE].[NOLOAN] IS NOT NULL;'
);

BEGIN TRY
	EXEC(@SQL_QUERY);
END TRY
BEGIN CATCH
	PRINT CONCAT('ERROR: ', ERROR_MESSAGE());
END CATCH

----------------------------------------------------

UPDATE [request].[FEEDING_DATA.SME_MIKRO]
SET
	[Flag JT Pembiayaan] =
		CASE
			WHEN [TANGGAL_JATUH_TEMPO] <= EOMONTH([TGL_DATA]) THEN 'Sudah Jatuh Tempo'
			ELSE 'Belum Jatuh Tempo'
		END
	,[Prognosa DPD Akhir Bulan] =
		CASE
			WHEN NULLIF([DPD], 0) IS NULL THEN TRY_CAST(RIGHT(EOMONTH([TGL_DATA]), 2) AS INTEGER) - COALESCE([CYCLE], 0)
			ELSE [DPD] + TRY_CAST(RIGHT(EOMONTH([TGL_DATA]), 2) AS INTEGER) - TRY_CAST(RIGHT([TGL_DATA], 2) AS INTEGER)
		END;
		
UPDATE [request].[FEEDING_DATA.SME_MIKRO]
SET
	[Min Payment Ugrade] =
		COALESCE(
			CASE
				WHEN [Flag JT Pembiayaan] IN ('Sudah Jatuh Tempo') THEN COALESCE([OS_POKOK], 0.00) + COALESCE([OS_MARGIN], 0.00) + [dbo].[fx_common_zerofy](COALESCE([PROYEKSI_BAGIHASIL], 0.00) - COALESCE([REALISASI_BAGIHASIL], 0.00))
				WHEN LEFT([KOL_LOAN], 1) IN ('1', '2') THEN [Tung_Gross]
				ELSE [dbo].[fx_common_zerofy]([Tung_Gross] - (COALESCE([ANGSURAN], 0.00) * (3 - CASE WHEN [CYCLE] > TRY_CAST(RIGHT([TGL_DATA], 2) AS INTEGER) OR [CYCLE] IN (1) THEN 1 ELSE 0 END)))
			END, 0.00)
		+ COALESCE(
			CASE
				WHEN NULLIF([REALISASI_BAGIHASIL], 0.00) IS NULL AND NULLIF([PROYEKSI_BAGIHASIL], 0.00) IS NULL THEN 0.00
				WHEN COALESCE([REALISASI_BAGIHASIL], 0.00) / COALESCE(NULLIF([PROYEKSI_BAGIHASIL], 0.00), NULLIF([REALISASI_BAGIHASIL], 0.00), 1.00) < 0.5 AND LEFT([KOL_LOAN], 1) IN ('3', '4', '5') THEN (COALESCE([PROYEKSI_BAGIHASIL], 0.00) * 0.5 ) - COALESCE([REALISASI_BAGIHASIL], 0.00) + 1.00
				WHEN COALESCE([REALISASI_BAGIHASIL], 0.00) / COALESCE(NULLIF([PROYEKSI_BAGIHASIL], 0.00), NULLIF([REALISASI_BAGIHASIL], 0.00), 1.00) < 0.8 THEN (COALESCE([PROYEKSI_BAGIHASIL], 0.00) * 0.8 ) - COALESCE([REALISASI_BAGIHASIL], 0.00) + 1.00
			END, 0.00
		);

UPDATE [request].[FEEDING_DATA.SME_MIKRO]
SET
	[Flag Min Payment] =
		CASE
			WHEN COALESCE([Min Payment Ugrade], 0.00) <= 50000.00 THEN 's.d. 50Rb'
			WHEN COALESCE([Min Payment Ugrade], 0.00) <= 100000.00 THEN 's.d. 100Rb'
			WHEN COALESCE([Min Payment Ugrade], 0.00) <= 250000.00 THEN 's.d. 250Rb'
			WHEN COALESCE([Min Payment Ugrade], 0.00) <= 500000.00 THEN 's.d. 500Rb'
			WHEN COALESCE([Min Payment Ugrade], 0.00) <= 1000000.00 THEN 's.d. 1Jt'
			WHEN COALESCE([Min Payment Ugrade], 0.00) <= 2500000.00 THEN 's.d. 2.5Jt'
			WHEN COALESCE([Min Payment Ugrade], 0.00) <= 5000000.00 THEN 's.d. 5Jt'
			WHEN COALESCE([Min Payment Ugrade], 0.00) > 5000000.00 THEN '> 5Jt'
		END;